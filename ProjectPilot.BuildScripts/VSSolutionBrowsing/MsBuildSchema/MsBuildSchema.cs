#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 17-08-07 05:48 
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion

namespace ProjectPilot.BuildScripts.SolutionBrowsing.MsBuildSchema
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="Project")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="Project")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class Project
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<PropertyGroupType> propertyGroup;
        
        /// <remarks/>
        private System.Collections.Generic.List<ItemGroupType> itemGroup;
        
        /// <remarks/>
        private System.Collections.Generic.List<ChooseType> choose;
        
        /// <remarks/>
        private System.Collections.Generic.List<UsingTaskType> usingTask;
        
        /// <remarks/>
        private System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions;
        
        /// <remarks/>
        private TargetType target;
        
        /// <remarks/>
        private ImportType import;
        
        /// <remarks/>
        private System.Collections.Generic.List<PropertyGroupType> propertyGroup1;
        
        /// <remarks/>
        private System.Collections.Generic.List<ItemGroupType> itemGroup1;
        
        /// <remarks/>
        private System.Collections.Generic.List<ChooseType> choose1;
        
        /// <remarks/>
        private System.Collections.Generic.List<UsingTaskType> usingTask1;
        
        /// <remarks/>
        private System.Collections.Generic.List<TargetType> target1;
        
        /// <remarks/>
        private System.Collections.Generic.List<ImportType> import1;
        
        /// <remarks/>
        private System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions1;
        
        /// <remarks/>
        private string defaultTargets;
        
        /// <remarks/>
        private string initialTargets;
        
        public Project()
        {
        }
        
        public Project(
            System.Collections.Generic.List<PropertyGroupType> propertyGroup, 
            System.Collections.Generic.List<ItemGroupType> itemGroup, 
            System.Collections.Generic.List<ChooseType> choose, 
            System.Collections.Generic.List<UsingTaskType> usingTask, 
            System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions, 
            TargetType target, 
            ImportType import, 
            System.Collections.Generic.List<PropertyGroupType> propertyGroup1, 
            System.Collections.Generic.List<ItemGroupType> itemGroup1, 
            System.Collections.Generic.List<ChooseType> choose1, 
            System.Collections.Generic.List<UsingTaskType> usingTask1, 
            System.Collections.Generic.List<TargetType> target1, 
            System.Collections.Generic.List<ImportType> import1, 
            System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions1, 
            string defaultTargets, 
            string initialTargets)
        {
            this.propertyGroup = propertyGroup;
            this.itemGroup = itemGroup;
            this.choose = choose;
            this.usingTask = usingTask;
            this.projectExtensions = projectExtensions;
            this.target = target;
            this.import = import;
            this.propertyGroup1 = propertyGroup1;
            this.itemGroup1 = itemGroup1;
            this.choose1 = choose1;
            this.usingTask1 = usingTask1;
            this.target1 = target1;
            this.import1 = import1;
            this.projectExtensions1 = projectExtensions1;
            this.defaultTargets = defaultTargets;
            this.initialTargets = initialTargets;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", Order=0)]
        public System.Collections.Generic.List<PropertyGroupType> PropertyGroup
        {
            get
            {
                return this.propertyGroup;
            }
            set
            {
                if ((this.propertyGroup != value))
                {
                    this.propertyGroup = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", Order=1)]
        public System.Collections.Generic.List<ItemGroupType> ItemGroup
        {
            get
            {
                return this.itemGroup;
            }
            set
            {
                if ((this.itemGroup != value))
                {
                    this.itemGroup = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", Order=2)]
        public System.Collections.Generic.List<ChooseType> Choose
        {
            get
            {
                return this.choose;
            }
            set
            {
                if ((this.choose != value))
                {
                    this.choose = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("UsingTask", Order=3)]
        public System.Collections.Generic.List<UsingTaskType> UsingTask
        {
            get
            {
                return this.usingTask;
            }
            set
            {
                if ((this.usingTask != value))
                {
                    this.usingTask = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ProjectExtensions", Order=4)]
        public System.Collections.Generic.List<System.Xml.XmlNode> ProjectExtensions
        {
            get
            {
                return this.projectExtensions;
            }
            set
            {
                if ((this.projectExtensions != value))
                {
                    this.projectExtensions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Order=5, ElementName="Target")]
        public TargetType Target
        {
            get
            {
                return this.target;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Target");
                }
                if ((this.target != value))
                {
                    this.target = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Order=6, ElementName="Import")]
        public ImportType Import
        {
            get
            {
                return this.import;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Import");
                }
                if ((this.import != value))
                {
                    this.import = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", Order=7)]
        public System.Collections.Generic.List<PropertyGroupType> PropertyGroup1
        {
            get
            {
                return this.propertyGroup1;
            }
            set
            {
                if ((this.propertyGroup1 != value))
                {
                    this.propertyGroup1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", Order=8)]
        public System.Collections.Generic.List<ItemGroupType> ItemGroup1
        {
            get
            {
                return this.itemGroup1;
            }
            set
            {
                if ((this.itemGroup1 != value))
                {
                    this.itemGroup1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", Order=9)]
        public System.Collections.Generic.List<ChooseType> Choose1
        {
            get
            {
                return this.choose1;
            }
            set
            {
                if ((this.choose1 != value))
                {
                    this.choose1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("UsingTask", Order=10)]
        public System.Collections.Generic.List<UsingTaskType> UsingTask1
        {
            get
            {
                return this.usingTask1;
            }
            set
            {
                if ((this.usingTask1 != value))
                {
                    this.usingTask1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Target", Order=11)]
        public System.Collections.Generic.List<TargetType> Target1
        {
            get
            {
                return this.target1;
            }
            set
            {
                if ((this.target1 != value))
                {
                    this.target1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Import", Order=12)]
        public System.Collections.Generic.List<ImportType> Import1
        {
            get
            {
                return this.import1;
            }
            set
            {
                if ((this.import1 != value))
                {
                    this.import1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ProjectExtensions", Order=13)]
        public System.Collections.Generic.List<System.Xml.XmlNode> ProjectExtensions1
        {
            get
            {
                return this.projectExtensions1;
            }
            set
            {
                if ((this.projectExtensions1 != value))
                {
                    this.projectExtensions1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DefaultTargets")]
        public string DefaultTargets
        {
            get
            {
                return this.defaultTargets;
            }
            set
            {
                if ((this.defaultTargets != value))
                {
                    this.defaultTargets = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InitialTargets")]
        public string InitialTargets
        {
            get
            {
                return this.initialTargets;
            }
            set
            {
                if ((this.initialTargets != value))
                {
                    this.initialTargets = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="PropertyGroupType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="PropertyGroupType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PropertyGroupType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> property;
        
        /// <remarks/>
        private string condition;
        
        public PropertyGroupType()
        {
        }
        
        public PropertyGroupType(System.Collections.Generic.List<object> property, string condition)
        {
            this.property = property;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Property")]
        public System.Collections.Generic.List<object> Property
        {
            get
            {
                return this.property;
            }
            set
            {
                if ((this.property != value))
                {
                    this.property = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="GenericPropertyType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="GenericPropertyType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GenericPropertyType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<System.Xml.XmlNode> any;
        
        /// <remarks/>
        private string condition;
        
        public GenericPropertyType()
        {
        }
        
        public GenericPropertyType(System.Collections.Generic.List<System.Xml.XmlNode> any, string condition)
        {
            this.any = any;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlNode> Any
        {
            get
            {
                return this.any;
            }
            set
            {
                if ((this.any != value))
                {
                    this.any = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ImportType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="ImportType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ImportType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string project;
        
        public ImportType()
        {
        }
        
        public ImportType(string condition, string project)
        {
            this.condition = condition;
            this.project = project;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Project")]
        public string Project
        {
            get
            {
                return this.project;
            }
            set
            {
                if ((this.project != value))
                {
                    this.project = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="UsingTaskType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="UsingTaskType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class UsingTaskType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string assemblyName;
        
        /// <remarks/>
        private string assemblyFile;
        
        /// <remarks/>
        private string taskName;
        
        public UsingTaskType()
        {
        }
        
        public UsingTaskType(string condition, string assemblyName, string assemblyFile, string taskName)
        {
            this.condition = condition;
            this.assemblyName = assemblyName;
            this.assemblyFile = assemblyFile;
            this.taskName = taskName;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyName")]
        public string AssemblyName
        {
            get
            {
                return this.assemblyName;
            }
            set
            {
                if ((this.assemblyName != value))
                {
                    this.assemblyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyFile")]
        public string AssemblyFile
        {
            get
            {
                return this.assemblyFile;
            }
            set
            {
                if ((this.assemblyFile != value))
                {
                    this.assemblyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TaskName")]
        public string TaskName
        {
            get
            {
                return this.taskName;
            }
            set
            {
                if ((this.taskName != value))
                {
                    this.taskName = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="OtherwiseType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="OtherwiseType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class OtherwiseType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> items;
        
        public OtherwiseType()
        {
        }
        
        public OtherwiseType(System.Collections.Generic.List<object> items)
        {
            this.items = items;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", typeof(ChooseType))]
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", typeof(ItemGroupType))]
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", typeof(PropertyGroupType))]
        public System.Collections.Generic.List<object> Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ChooseType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="ChooseType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ChooseType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<WhenType> when;
        
        /// <remarks/>
        private OtherwiseType otherwise;
        
        public ChooseType()
        {
        }
        
        public ChooseType(System.Collections.Generic.List<WhenType> when, OtherwiseType otherwise)
        {
            this.when = when;
            this.otherwise = otherwise;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("When")]
        public System.Collections.Generic.List<WhenType> When
        {
            get
            {
                return this.when;
            }
            set
            {
                if ((this.when != value))
                {
                    this.when = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Otherwise")]
        public OtherwiseType Otherwise
        {
            get
            {
                return this.otherwise;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Otherwise");
                }
                if ((this.otherwise != value))
                {
                    this.otherwise = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="WhenType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="WhenType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class WhenType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> items;
        
        /// <remarks/>
        private string condition;
        
        public WhenType()
        {
        }
        
        public WhenType(System.Collections.Generic.List<object> items, string condition)
        {
            this.items = items;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", typeof(ChooseType))]
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", typeof(ItemGroupType))]
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", typeof(PropertyGroupType))]
        public System.Collections.Generic.List<object> Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="ItemGroupType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<SimpleItemType> item;
        
        /// <remarks/>
        private string condition;
        
        public ItemGroupType()
        {
        }
        
        public ItemGroupType(System.Collections.Generic.List<SimpleItemType> item, string condition)
        {
            this.item = item;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Item")]
        public System.Collections.Generic.List<SimpleItemType> Item
        {
            get
            {
                return this.item;
            }
            set
            {
                if ((this.item != value))
                {
                    this.item = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericItemType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="SimpleItemType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="SimpleItemType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SimpleItemType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string include;
        
        /// <remarks/>
        private string exclude;
        
        public SimpleItemType()
        {
        }
        
        public SimpleItemType(string condition, string include, string exclude)
        {
            this.condition = condition;
            this.include = include;
            this.exclude = exclude;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Include")]
        public string Include
        {
            get
            {
                return this.include;
            }
            set
            {
                if ((this.include != value))
                {
                    this.include = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Exclude")]
        public string Exclude
        {
            get
            {
                return this.exclude;
            }
            set
            {
                if ((this.exclude != value))
                {
                    this.exclude = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="GenericItemType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="GenericItemType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GenericItemType : SimpleItemType
    {
        
        /// <remarks/>
        private System.Xml.XmlElement any;
        
        public GenericItemType()
        {
        }
        
        public GenericItemType(System.Xml.XmlElement any)
        {
            this.any = any;
        }
        
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any
        {
            get
            {
                return this.any;
            }
            set
            {
                if ((this.any != value))
                {
                    this.any = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="OnErrorType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="OnErrorType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class OnErrorType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string executeTargets;
        
        public OnErrorType()
        {
        }
        
        public OnErrorType(string condition, string executeTargets)
        {
            this.condition = condition;
            this.executeTargets = executeTargets;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ExecuteTargets")]
        public string ExecuteTargets
        {
            get
            {
                return this.executeTargets;
            }
            set
            {
                if ((this.executeTargets != value))
                {
                    this.executeTargets = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TaskType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="TaskType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TaskType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TaskTypeOutput> output;
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string continueOnError;
        
        public TaskType()
        {
        }
        
        public TaskType(System.Collections.Generic.List<TaskTypeOutput> output, string condition, string continueOnError)
        {
            this.output = output;
            this.condition = condition;
            this.continueOnError = continueOnError;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Output")]
        public System.Collections.Generic.List<TaskTypeOutput> Output
        {
            get
            {
                return this.output;
            }
            set
            {
                if ((this.output != value))
                {
                    this.output = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContinueOnError")]
        public string ContinueOnError
        {
            get
            {
                return this.continueOnError;
            }
            set
            {
                if ((this.continueOnError != value))
                {
                    this.continueOnError = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TaskTypeOutput")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TaskTypeOutput
    {
        
        /// <remarks/>
        private string taskParameter;
        
        /// <remarks/>
        private string itemName;
        
        /// <remarks/>
        private string propertyName;
        
        /// <remarks/>
        private string condition;
        
        public TaskTypeOutput()
        {
        }
        
        public TaskTypeOutput(string taskParameter, string itemName, string propertyName, string condition)
        {
            this.taskParameter = taskParameter;
            this.itemName = itemName;
            this.propertyName = propertyName;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TaskParameter")]
        public string TaskParameter
        {
            get
            {
                return this.taskParameter;
            }
            set
            {
                if ((this.taskParameter != value))
                {
                    this.taskParameter = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ItemName")]
        public string ItemName
        {
            get
            {
                return this.itemName;
            }
            set
            {
                if ((this.itemName != value))
                {
                    this.itemName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PropertyName")]
        public string PropertyName
        {
            get
            {
                return this.propertyName;
            }
            set
            {
                if ((this.propertyName != value))
                {
                    this.propertyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="TargetType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TaskType> items;
        
        /// <remarks/>
        private System.Collections.Generic.List<OnErrorType> onError;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string dependsOnTargets;
        
        /// <remarks/>
        private string inputs;
        
        /// <remarks/>
        private string outputs;
        
        /// <remarks/>
        private string condition;
        
        public TargetType()
        {
        }
        
        public TargetType(System.Collections.Generic.List<TaskType> items, System.Collections.Generic.List<OnErrorType> onError, string name, string dependsOnTargets, string inputs, string outputs, string condition)
        {
            this.items = items;
            this.onError = onError;
            this.name = name;
            this.dependsOnTargets = dependsOnTargets;
            this.inputs = inputs;
            this.outputs = outputs;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Task")]
        public System.Collections.Generic.List<TaskType> Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OnError")]
        public System.Collections.Generic.List<OnErrorType> OnError
        {
            get
            {
                return this.onError;
            }
            set
            {
                if ((this.onError != value))
                {
                    this.onError = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DependsOnTargets")]
        public string DependsOnTargets
        {
            get
            {
                return this.dependsOnTargets;
            }
            set
            {
                if ((this.dependsOnTargets != value))
                {
                    this.dependsOnTargets = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Inputs")]
        public string Inputs
        {
            get
            {
                return this.inputs;
            }
            set
            {
                if ((this.inputs != value))
                {
                    this.inputs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Outputs")]
        public string Outputs
        {
            get
            {
                return this.outputs;
            }
            set
            {
                if ((this.outputs != value))
                {
                    this.outputs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="StringPropertyType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="StringPropertyType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class StringPropertyType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string value;
        
        public StringPropertyType()
        {
        }
        
        public StringPropertyType(string condition, string value)
        {
            this.condition = condition;
            this.value = value;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
    }
}