#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 17-08-07 06:21 
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion

namespace ProjectPilot.BuildScripts.SolutionBrowsing.MsBuildSchema
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="Project")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="Project")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class Project
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<PropertyGroupType> propertyGroup;
        
        /// <remarks/>
        private System.Collections.Generic.List<ItemGroupType> itemGroup;
        
        /// <remarks/>
        private System.Collections.Generic.List<ChooseType> choose;
        
        /// <remarks/>
        private System.Collections.Generic.List<UsingTaskType> usingTask;
        
        /// <remarks/>
        private System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions;
        
        /// <remarks/>
        private TargetType target;
        
        /// <remarks/>
        private ImportType import;
        
        /// <remarks/>
        private System.Collections.Generic.List<PropertyGroupType> propertyGroup1;
        
        /// <remarks/>
        private System.Collections.Generic.List<ItemGroupType> itemGroup1;
        
        /// <remarks/>
        private System.Collections.Generic.List<ChooseType> choose1;
        
        /// <remarks/>
        private System.Collections.Generic.List<UsingTaskType> usingTask1;
        
        /// <remarks/>
        private System.Collections.Generic.List<TargetType> target1;
        
        /// <remarks/>
        private System.Collections.Generic.List<ImportType> import1;
        
        /// <remarks/>
        private System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions1;
        
        /// <remarks/>
        private string defaultTargets;
        
        /// <remarks/>
        private string initialTargets;
        
        public Project()
        {
        }
        
        public Project(
            System.Collections.Generic.List<PropertyGroupType> propertyGroup, 
            System.Collections.Generic.List<ItemGroupType> itemGroup, 
            System.Collections.Generic.List<ChooseType> choose, 
            System.Collections.Generic.List<UsingTaskType> usingTask, 
            System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions, 
            TargetType target, 
            ImportType import, 
            System.Collections.Generic.List<PropertyGroupType> propertyGroup1, 
            System.Collections.Generic.List<ItemGroupType> itemGroup1, 
            System.Collections.Generic.List<ChooseType> choose1, 
            System.Collections.Generic.List<UsingTaskType> usingTask1, 
            System.Collections.Generic.List<TargetType> target1, 
            System.Collections.Generic.List<ImportType> import1, 
            System.Collections.Generic.List<System.Xml.XmlNode> projectExtensions1, 
            string defaultTargets, 
            string initialTargets)
        {
            this.propertyGroup = propertyGroup;
            this.itemGroup = itemGroup;
            this.choose = choose;
            this.usingTask = usingTask;
            this.projectExtensions = projectExtensions;
            this.target = target;
            this.import = import;
            this.propertyGroup1 = propertyGroup1;
            this.itemGroup1 = itemGroup1;
            this.choose1 = choose1;
            this.usingTask1 = usingTask1;
            this.target1 = target1;
            this.import1 = import1;
            this.projectExtensions1 = projectExtensions1;
            this.defaultTargets = defaultTargets;
            this.initialTargets = initialTargets;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", Order=0)]
        public System.Collections.Generic.List<PropertyGroupType> PropertyGroup
        {
            get
            {
                return this.propertyGroup;
            }
            set
            {
                if ((this.propertyGroup != value))
                {
                    this.propertyGroup = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", Order=1)]
        public System.Collections.Generic.List<ItemGroupType> ItemGroup
        {
            get
            {
                return this.itemGroup;
            }
            set
            {
                if ((this.itemGroup != value))
                {
                    this.itemGroup = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", Order=2)]
        public System.Collections.Generic.List<ChooseType> Choose
        {
            get
            {
                return this.choose;
            }
            set
            {
                if ((this.choose != value))
                {
                    this.choose = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("UsingTask", Order=3)]
        public System.Collections.Generic.List<UsingTaskType> UsingTask
        {
            get
            {
                return this.usingTask;
            }
            set
            {
                if ((this.usingTask != value))
                {
                    this.usingTask = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ProjectExtensions", Order=4)]
        public System.Collections.Generic.List<System.Xml.XmlNode> ProjectExtensions
        {
            get
            {
                return this.projectExtensions;
            }
            set
            {
                if ((this.projectExtensions != value))
                {
                    this.projectExtensions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Order=5, ElementName="Target")]
        public TargetType Target
        {
            get
            {
                return this.target;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Target");
                }
                if ((this.target != value))
                {
                    this.target = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Order=6, ElementName="Import")]
        public ImportType Import
        {
            get
            {
                return this.import;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Import");
                }
                if ((this.import != value))
                {
                    this.import = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", Order=7)]
        public System.Collections.Generic.List<PropertyGroupType> PropertyGroup1
        {
            get
            {
                return this.propertyGroup1;
            }
            set
            {
                if ((this.propertyGroup1 != value))
                {
                    this.propertyGroup1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", Order=8)]
        public System.Collections.Generic.List<ItemGroupType> ItemGroup1
        {
            get
            {
                return this.itemGroup1;
            }
            set
            {
                if ((this.itemGroup1 != value))
                {
                    this.itemGroup1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", Order=9)]
        public System.Collections.Generic.List<ChooseType> Choose1
        {
            get
            {
                return this.choose1;
            }
            set
            {
                if ((this.choose1 != value))
                {
                    this.choose1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("UsingTask", Order=10)]
        public System.Collections.Generic.List<UsingTaskType> UsingTask1
        {
            get
            {
                return this.usingTask1;
            }
            set
            {
                if ((this.usingTask1 != value))
                {
                    this.usingTask1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Target", Order=11)]
        public System.Collections.Generic.List<TargetType> Target1
        {
            get
            {
                return this.target1;
            }
            set
            {
                if ((this.target1 != value))
                {
                    this.target1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Import", Order=12)]
        public System.Collections.Generic.List<ImportType> Import1
        {
            get
            {
                return this.import1;
            }
            set
            {
                if ((this.import1 != value))
                {
                    this.import1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ProjectExtensions", Order=13)]
        public System.Collections.Generic.List<System.Xml.XmlNode> ProjectExtensions1
        {
            get
            {
                return this.projectExtensions1;
            }
            set
            {
                if ((this.projectExtensions1 != value))
                {
                    this.projectExtensions1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DefaultTargets")]
        public string DefaultTargets
        {
            get
            {
                return this.defaultTargets;
            }
            set
            {
                if ((this.defaultTargets != value))
                {
                    this.defaultTargets = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InitialTargets")]
        public string InitialTargets
        {
            get
            {
                return this.initialTargets;
            }
            set
            {
                if ((this.initialTargets != value))
                {
                    this.initialTargets = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="PropertyGroupType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="PropertyGroupType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PropertyGroupType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType[] itemsElementName;
        
        /// <remarks/>
        private string condition;
        
        public PropertyGroupType()
        {
        }
        
        public PropertyGroupType(object[] items, ItemsChoiceType[] itemsElementName, string condition)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AllowUnsafeBlocks", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AppDesignerFolder", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ApplicationIcon", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ApplicationRevision", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ApplicationVersion", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AspNetConfiguration", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AssemblyKeyContainerName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AssemblyKeyProviderName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AssemblyName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AssemblyOriginatorKeyFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AssemblyOriginatorKeyFileType", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AssemblyOriginatorKeyMode", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AssemblyType", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("AutorunEnabled", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("BaseAddress", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("BootstrapperComponentsLocation", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("BootstrapperComponentsUrl", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("BootstrapperEnabled", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CheckForOverflowUnderflow", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysisInputAssembly", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysisLogFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysisModuleSuppressionsFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysisProjectFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysisRuleAssemblies", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysisRules", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysisUseTypeNameInSuppression", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CodePage", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("Configuration", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ConfigurationName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ConfigurationOverrideFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CreateWebPageOnPublish", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("CurrentSolutionConfigurationContents", typeof(GenericPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DebugSecurityZoneURL", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DebugSymbols", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DebugType", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DefaultClientScript", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DefaultHTMLPageLayout", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DefaultTargetSchema", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DefineConstants", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DefineDebug", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DefineTrace", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DelaySign", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DeployDirSuffix", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DisableLangXtns", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DisallowUrlActivation", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("DocumentationFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("EnableASPDebugging", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("EnableASPXDebugging", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("EnableSQLServerDebugging", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("EnableSecurityDebugging", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("EnableUnmanagedDebugging", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ErrorReport", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ExcludedPermissions", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("FallbackCulture", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("FileAlignment", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("FileUpgradeFlags", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("FormFactorID", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("GenerateManifests", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("GenerateSerializationAssemblies", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("Install", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("InstallFrom", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("InstallUrl", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("IsWebBootstrapper", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("JCPA", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("LangVersion", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ManifestCertificateThumbprint", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ManifestKeyFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("MapFileExtensions", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("MinimumRequiredVersion", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("MyType", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("NoConfig", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("NoStandardLibraries", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("NoStdLib", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("NoWarn", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("OSVersion", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("OpenBrowserOnPublish", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("Optimize", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("OptionCompare", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("OptionExplicit", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("OptionStrict", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("OutputPath", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("OutputType", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("Platform", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PlatformFamilyName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PlatformID", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PlatformName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PlatformTarget", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PostBuildEvent", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PreBuildEvent", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ProductName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ProductVersion", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ProjectGuid", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ProjectType", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ProjectTypeGuids", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PublishUrl", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("PublisherName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RecursePath", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ReferencePath", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RegisterForComInterop", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoteDebugEnabled", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoteDebugMachine", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoveIntegerChecks", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ResponseFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RootNamespace", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RunCodeAnalysis", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("RunPostBuildEvent", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SchemaVersion", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SecureScoping", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SignAssembly", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SignManifests", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SolutionDir", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SolutionExt", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SolutionFileName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SolutionName", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SolutionPath", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartAction", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartArguments", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartPage", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartProgram", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartURL", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartWithIE", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartWorkingDirectory", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("StartupObject", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("SupportUrl", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("TargetCulture", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("TargetFrameworkVersion", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("TargetZone", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("TreatWarningsAsErrors", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("TrustUrlParameters", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("TypeComplianceDiagnostics", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UTF8OutPut", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateEnabled", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateInterval", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateIntervalUnits", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateMode", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UpdatePeriodically", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateRequired", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateUrl", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("UseVSHostingProcess", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("VSTO_TrustAssembliesLocation", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("WarningLevel", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("WarningsAsErrors", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("WebPage", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("Win32ResourceFile", typeof(StringPropertyType))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="GenericPropertyType")]
    [System.Xml.Serialization.XmlRootAttribute("CurrentSolutionConfigurationContents", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="GenericPropertyType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GenericPropertyType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<System.Xml.XmlNode> any;
        
        /// <remarks/>
        private string condition;
        
        public GenericPropertyType()
        {
        }
        
        public GenericPropertyType(System.Collections.Generic.List<System.Xml.XmlNode> any, string condition)
        {
            this.any = any;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlNode> Any
        {
            get
            {
                return this.any;
            }
            set
            {
                if ((this.any != value))
                {
                    this.any = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ImportType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="ImportType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ImportType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string project;
        
        public ImportType()
        {
        }
        
        public ImportType(string condition, string project)
        {
            this.condition = condition;
            this.project = project;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Project")]
        public string Project
        {
            get
            {
                return this.project;
            }
            set
            {
                if ((this.project != value))
                {
                    this.project = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="UsingTaskType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="UsingTaskType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class UsingTaskType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string assemblyName;
        
        /// <remarks/>
        private string assemblyFile;
        
        /// <remarks/>
        private string taskName;
        
        public UsingTaskType()
        {
        }
        
        public UsingTaskType(string condition, string assemblyName, string assemblyFile, string taskName)
        {
            this.condition = condition;
            this.assemblyName = assemblyName;
            this.assemblyFile = assemblyFile;
            this.taskName = taskName;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyName")]
        public string AssemblyName
        {
            get
            {
                return this.assemblyName;
            }
            set
            {
                if ((this.assemblyName != value))
                {
                    this.assemblyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyFile")]
        public string AssemblyFile
        {
            get
            {
                return this.assemblyFile;
            }
            set
            {
                if ((this.assemblyFile != value))
                {
                    this.assemblyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TaskName")]
        public string TaskName
        {
            get
            {
                return this.taskName;
            }
            set
            {
                if ((this.taskName != value))
                {
                    this.taskName = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="OtherwiseType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="OtherwiseType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class OtherwiseType
    {
        
        /// <remarks/>
        private object[] items;
        
        public OtherwiseType()
        {
        }
        
        public OtherwiseType(object[] items)
        {
            this.items = items;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", typeof(ChooseType))]
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", typeof(ItemGroupType))]
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", typeof(PropertyGroupType))]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ChooseType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="ChooseType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ChooseType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<WhenType> when;
        
        /// <remarks/>
        private OtherwiseType otherwise;
        
        public ChooseType()
        {
        }
        
        public ChooseType(System.Collections.Generic.List<WhenType> when, OtherwiseType otherwise)
        {
            this.when = when;
            this.otherwise = otherwise;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("When")]
        public System.Collections.Generic.List<WhenType> When
        {
            get
            {
                return this.when;
            }
            set
            {
                if ((this.when != value))
                {
                    this.when = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(ElementName="Otherwise")]
        public OtherwiseType Otherwise
        {
            get
            {
                return this.otherwise;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Otherwise");
                }
                if ((this.otherwise != value))
                {
                    this.otherwise = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="WhenType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="WhenType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class WhenType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private string condition;
        
        public WhenType()
        {
        }
        
        public WhenType(object[] items, string condition)
        {
            this.items = items;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Choose", typeof(ChooseType))]
        [System.Xml.Serialization.XmlElementAttribute("ItemGroup", typeof(ItemGroupType))]
        [System.Xml.Serialization.XmlElementAttribute("PropertyGroup", typeof(PropertyGroupType))]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="ItemGroupType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupType
    {
        
        /// <remarks/>
        private SimpleItemType[] items;
        
        /// <remarks/>
        private ItemsChoiceType12[] itemsElementName;
        
        /// <remarks/>
        private string condition;
        
        public ItemGroupType()
        {
        }
        
        public ItemGroupType(SimpleItemType[] items, ItemsChoiceType12[] itemsElementName, string condition)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BaseApplicationManifest", typeof(SimpleItemType))]
        [System.Xml.Serialization.XmlElementAttribute("BootstrapperFile", typeof(ItemGroupTypeItemBootstrapperFile))]
        [System.Xml.Serialization.XmlElementAttribute("COMFileReference", typeof(ItemGroupTypeItemCOMFileReference))]
        [System.Xml.Serialization.XmlElementAttribute("COMReference", typeof(ItemGroupTypeItemCOMReference))]
        [System.Xml.Serialization.XmlElementAttribute("Compile", typeof(ItemGroupTypeItemCompile))]
        [System.Xml.Serialization.XmlElementAttribute("Content", typeof(ItemGroupTypeItemContent))]
        [System.Xml.Serialization.XmlElementAttribute("EmbeddedResource", typeof(ItemGroupTypeItemEmbeddedResource))]
        [System.Xml.Serialization.XmlElementAttribute("Folder", typeof(SimpleItemType))]
        [System.Xml.Serialization.XmlElementAttribute("Import", typeof(SimpleItemType))]
        [System.Xml.Serialization.XmlElementAttribute("NativeReference", typeof(ItemGroupTypeItemNativeReference))]
        [System.Xml.Serialization.XmlElementAttribute("None", typeof(ItemGroupTypeItemNone))]
        [System.Xml.Serialization.XmlElementAttribute("ProjectReference", typeof(ItemGroupTypeItemProjectReference))]
        [System.Xml.Serialization.XmlElementAttribute("PublishFile", typeof(ItemGroupTypeItemPublishFile))]
        [System.Xml.Serialization.XmlElementAttribute("Reference", typeof(ItemGroupTypeItemReference))]
        [System.Xml.Serialization.XmlElementAttribute("Service", typeof(SimpleItemType))]
        [System.Xml.Serialization.XmlElementAttribute("WebReferenceUrl", typeof(ItemGroupTypeItemWebReferenceUrl))]
        [System.Xml.Serialization.XmlElementAttribute("WebReferences", typeof(SimpleItemType))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public SimpleItemType[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Items");
                }
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType12[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericItemType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="SimpleItemType")]
    [System.Xml.Serialization.XmlRootAttribute("BaseApplicationManifest", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="SimpleItemType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SimpleItemType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string include;
        
        /// <remarks/>
        private string exclude;
        
        public SimpleItemType()
        {
        }
        
        public SimpleItemType(string condition, string include, string exclude)
        {
            this.condition = condition;
            this.include = include;
            this.exclude = exclude;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        //[System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Include")]
        //public string Include
        //{
        //    get
        //    {
        //        return this.include;
        //    }
        //    set
        //    {
        //        if ((this.include != value))
        //        {
        //            this.include = value;
        //        }
        //    }
        //}
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Exclude")]
        public string Exclude
        {
            get
            {
                return this.exclude;
            }
            set
            {
                if ((this.exclude != value))
                {
                    this.exclude = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="GenericItemType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="GenericItemType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GenericItemType : SimpleItemType
    {
        
        /// <remarks/>
        private System.Xml.XmlElement any;
        
        public GenericItemType()
        {
        }
        
        public GenericItemType(System.Xml.XmlElement any)
        {
            this.any = any;
        }
        
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any
        {
            get
            {
                return this.any;
            }
            set
            {
                if ((this.any != value))
                {
                    this.any = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="OnErrorType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="OnErrorType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class OnErrorType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string executeTargets;
        
        public OnErrorType()
        {
        }
        
        public OnErrorType(string condition, string executeTargets)
        {
            this.condition = condition;
            this.executeTargets = executeTargets;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ExecuteTargets")]
        public string ExecuteTargets
        {
            get
            {
                return this.executeTargets;
            }
            set
            {
                if ((this.executeTargets != value))
                {
                    this.executeTargets = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TaskType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="TaskType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TaskType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TaskTypeOutput> output;
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string continueOnError;
        
        public TaskType()
        {
        }
        
        public TaskType(System.Collections.Generic.List<TaskTypeOutput> output, string condition, string continueOnError)
        {
            this.output = output;
            this.condition = condition;
            this.continueOnError = continueOnError;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Output")]
        public System.Collections.Generic.List<TaskTypeOutput> Output
        {
            get
            {
                return this.output;
            }
            set
            {
                if ((this.output != value))
                {
                    this.output = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContinueOnError")]
        public string ContinueOnError
        {
            get
            {
                return this.continueOnError;
            }
            set
            {
                if ((this.continueOnError != value))
                {
                    this.continueOnError = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TaskTypeOutput")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TaskTypeOutput
    {
        
        /// <remarks/>
        private string taskParameter;
        
        /// <remarks/>
        private string itemName;
        
        /// <remarks/>
        private string propertyName;
        
        /// <remarks/>
        private string condition;
        
        public TaskTypeOutput()
        {
        }
        
        public TaskTypeOutput(string taskParameter, string itemName, string propertyName, string condition)
        {
            this.taskParameter = taskParameter;
            this.itemName = itemName;
            this.propertyName = propertyName;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TaskParameter")]
        public string TaskParameter
        {
            get
            {
                return this.taskParameter;
            }
            set
            {
                if ((this.taskParameter != value))
                {
                    this.taskParameter = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ItemName")]
        public string ItemName
        {
            get
            {
                return this.itemName;
            }
            set
            {
                if ((this.itemName != value))
                {
                    this.itemName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PropertyName")]
        public string PropertyName
        {
            get
            {
                return this.propertyName;
            }
            set
            {
                if ((this.propertyName != value))
                {
                    this.propertyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=true, ElementName="TargetType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetType
    {
        
        /// <remarks/>
        private TaskType[] items;
        
        /// <remarks/>
        private System.Collections.Generic.List<OnErrorType> onError;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string dependsOnTargets;
        
        /// <remarks/>
        private string inputs;
        
        /// <remarks/>
        private string outputs;
        
        /// <remarks/>
        private string condition;
        
        public TargetType()
        {
        }
        
        public TargetType(TaskType[] items, System.Collections.Generic.List<OnErrorType> onError, string name, string dependsOnTargets, string inputs, string outputs, string condition)
        {
            this.items = items;
            this.onError = onError;
            this.name = name;
            this.dependsOnTargets = dependsOnTargets;
            this.inputs = inputs;
            this.outputs = outputs;
            this.condition = condition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AL", typeof(TargetTypeAL))]
        [System.Xml.Serialization.XmlElementAttribute("AspNetCompiler", typeof(TargetTypeAspNetCompiler))]
        [System.Xml.Serialization.XmlElementAttribute("AssignCulture", typeof(TargetTypeAssignCulture))]
        [System.Xml.Serialization.XmlElementAttribute("AssignProjectConfiguration", typeof(TargetTypeAssignProjectConfiguration))]
        [System.Xml.Serialization.XmlElementAttribute("AssignTargetPath", typeof(TargetTypeAssignTargetPath))]
        [System.Xml.Serialization.XmlElementAttribute("CallTarget", typeof(TargetTypeCallTarget))]
        [System.Xml.Serialization.XmlElementAttribute("CodeAnalysis", typeof(TargetTypeCodeAnalysis))]
        [System.Xml.Serialization.XmlElementAttribute("CombinePath", typeof(TargetTypeCombinePath))]
        [System.Xml.Serialization.XmlElementAttribute("Copy", typeof(TargetTypeCopy))]
        [System.Xml.Serialization.XmlElementAttribute("CreateCSharpManifestResourceName", typeof(TargetTypeCreateCSharpManifestResourceName))]
        [System.Xml.Serialization.XmlElementAttribute("CreateItem", typeof(TargetTypeCreateItem))]
        [System.Xml.Serialization.XmlElementAttribute("CreateJSharpManifestResourceName", typeof(TargetTypeCreateJSharpManifestResourceName))]
        [System.Xml.Serialization.XmlElementAttribute("CreateProperty", typeof(TargetTypeCreateProperty))]
        [System.Xml.Serialization.XmlElementAttribute("CreateTemporaryVCProject", typeof(TargetTypeCreateTemporaryVCProject))]
        [System.Xml.Serialization.XmlElementAttribute("CreateVisualBasicManifestResourceName", typeof(TargetTypeCreateVisualBasicManifestResourceName))]
        [System.Xml.Serialization.XmlElementAttribute("Csc", typeof(TargetTypeCsc))]
        [System.Xml.Serialization.XmlElementAttribute("Delete", typeof(TargetTypeDelete))]
        [System.Xml.Serialization.XmlElementAttribute("Error", typeof(TargetTypeError))]
        [System.Xml.Serialization.XmlElementAttribute("Exec", typeof(TargetTypeExec))]
        [System.Xml.Serialization.XmlElementAttribute("FindUnderPath", typeof(TargetTypeFindUnderPath))]
        [System.Xml.Serialization.XmlElementAttribute("FormatUrl", typeof(TargetTypeFormatUrl))]
        [System.Xml.Serialization.XmlElementAttribute("FormatVersion", typeof(TargetTypeFormatVersion))]
        [System.Xml.Serialization.XmlElementAttribute("GenerateApplicationManifest", typeof(TargetTypeGenerateApplicationManifest))]
        [System.Xml.Serialization.XmlElementAttribute("GenerateBootstrapper", typeof(TargetTypeGenerateBootstrapper))]
        [System.Xml.Serialization.XmlElementAttribute("GenerateDeploymentManifest", typeof(TargetTypeGenerateDeploymentManifest))]
        [System.Xml.Serialization.XmlElementAttribute("GenerateResource", typeof(TargetTypeGenerateResource))]
        [System.Xml.Serialization.XmlElementAttribute("GenerateTrustInfo", typeof(TargetTypeGenerateTrustInfo))]
        [System.Xml.Serialization.XmlElementAttribute("GetAssemblyIdentity", typeof(TargetTypeGetAssemblyIdentity))]
        [System.Xml.Serialization.XmlElementAttribute("GetFrameworkPath", typeof(TargetTypeGetFrameworkPath))]
        [System.Xml.Serialization.XmlElementAttribute("GetFrameworkSdkPath", typeof(TargetTypeGetFrameworkSdkPath))]
        [System.Xml.Serialization.XmlElementAttribute("LC", typeof(TargetTypeLC))]
        [System.Xml.Serialization.XmlElementAttribute("MSBuild", typeof(TargetTypeMSBuild))]
        [System.Xml.Serialization.XmlElementAttribute("MakeDir", typeof(TargetTypeMakeDir))]
        [System.Xml.Serialization.XmlElementAttribute("Message", typeof(TargetTypeMessage))]
        [System.Xml.Serialization.XmlElementAttribute("ReadLinesFromFile", typeof(TargetTypeReadLinesFromFile))]
        [System.Xml.Serialization.XmlElementAttribute("RegisterAssembly", typeof(TargetTypeRegisterAssembly))]
        [System.Xml.Serialization.XmlElementAttribute("RemoveDir", typeof(TargetTypeRemoveDir))]
        [System.Xml.Serialization.XmlElementAttribute("RemoveDuplicates", typeof(TargetTypeRemoveDuplicates))]
        [System.Xml.Serialization.XmlElementAttribute("ResolveAssemblyReference", typeof(TargetTypeResolveAssemblyReference))]
        [System.Xml.Serialization.XmlElementAttribute("ResolveComReference", typeof(TargetTypeResolveComReference))]
        [System.Xml.Serialization.XmlElementAttribute("ResolveKeySource", typeof(TargetTypeResolveKeySource))]
        [System.Xml.Serialization.XmlElementAttribute("ResolveManifestFiles", typeof(TargetTypeResolveManifestFiles))]
        [System.Xml.Serialization.XmlElementAttribute("ResolveNativeReference", typeof(TargetTypeResolveNativeReference))]
        [System.Xml.Serialization.XmlElementAttribute("ResolveNonMSBuildProjectOutput", typeof(TargetTypeResolveNonMSBuildProjectOutput))]
        [System.Xml.Serialization.XmlElementAttribute("ResolveVCProjectOutput", typeof(TargetTypeResolveVCProjectOutput))]
        [System.Xml.Serialization.XmlElementAttribute("SGen", typeof(TargetTypeSGen))]
        [System.Xml.Serialization.XmlElementAttribute("SignFile", typeof(TargetTypeSignFile))]
        [System.Xml.Serialization.XmlElementAttribute("Task", typeof(TaskType))]
        [System.Xml.Serialization.XmlElementAttribute("Touch", typeof(TargetTypeTouch))]
        [System.Xml.Serialization.XmlElementAttribute("UnregisterAssembly", typeof(TargetTypeUnregisterAssembly))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateManifest", typeof(TargetTypeUpdateManifest))]
        [System.Xml.Serialization.XmlElementAttribute("VCBuild", typeof(TargetTypeVCBuild))]
        [System.Xml.Serialization.XmlElementAttribute("Vbc", typeof(TargetTypeVbc))]
        [System.Xml.Serialization.XmlElementAttribute("Vjc", typeof(TargetTypeVjc))]
        [System.Xml.Serialization.XmlElementAttribute("VjsResGen", typeof(TargetTypeVjsResGen))]
        [System.Xml.Serialization.XmlElementAttribute("Warning", typeof(TargetTypeWarning))]
        [System.Xml.Serialization.XmlElementAttribute("WriteLinesToFile", typeof(TargetTypeWriteLinesToFile))]
        public TaskType[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Items");
                }
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OnError")]
        public System.Collections.Generic.List<OnErrorType> OnError
        {
            get
            {
                return this.onError;
            }
            set
            {
                if ((this.onError != value))
                {
                    this.onError = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DependsOnTargets")]
        public string DependsOnTargets
        {
            get
            {
                return this.dependsOnTargets;
            }
            set
            {
                if ((this.dependsOnTargets != value))
                {
                    this.dependsOnTargets = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Inputs")]
        public string Inputs
        {
            get
            {
                return this.inputs;
            }
            set
            {
                if ((this.inputs != value))
                {
                    this.inputs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Outputs")]
        public string Outputs
        {
            get
            {
                return this.outputs;
            }
            set
            {
                if ((this.outputs != value))
                {
                    this.outputs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="StringPropertyType")]
    [System.Xml.Serialization.XmlRootAttribute("AllowUnsafeBlocks", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="StringPropertyType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class StringPropertyType
    {
        
        /// <remarks/>
        private string condition;
        
        /// <remarks/>
        private string value;
        
        public StringPropertyType()
        {
        }
        
        public StringPropertyType(string condition, string value)
        {
            this.condition = condition;
            this.value = value;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Condition")]
        public string Condition
        {
            get
            {
                return this.condition;
            }
            set
            {
                if ((this.condition != value))
                {
                    this.condition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemBootstrapperFile")]
    [System.Xml.Serialization.XmlRootAttribute("BootstrapperFile", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemBootstrapperFile")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemBootstrapperFile : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType10[] itemsElementName;
        
        public ItemGroupTypeItemBootstrapperFile()
        {
        }
        
        public ItemGroupTypeItemBootstrapperFile(object[] items, ItemsChoiceType10[] itemsElementName)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Install", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("ProductName", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Visible", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType10[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType10")]
    public enum ItemsChoiceType10
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Install")]
        Install,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ProductName")]
        ProductName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Visible")]
        Visible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemCOMFileReference")]
    [System.Xml.Serialization.XmlRootAttribute("COMFileReference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemCOMFileReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemCOMFileReference : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        public ItemGroupTypeItemCOMFileReference()
        {
        }
        
        public ItemGroupTypeItemCOMFileReference(object[] items)
        {
            this.items = items;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("WrapperTool")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemCOMReference")]
    [System.Xml.Serialization.XmlRootAttribute("COMReference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemCOMReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemCOMReference : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType2[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemCOMReference()
        {
        }
        
        public ItemGroupTypeItemCOMReference(object[] items, ItemsChoiceType2[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Guid", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Isolated", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Lcid", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Name", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("VersionMajor", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("VersionMinor", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("WrapperTool", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType2[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType2")]
    public enum ItemsChoiceType2
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Guid")]
        Guid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Isolated")]
        Isolated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Lcid")]
        Lcid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Name")]
        Name,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="VersionMajor")]
        VersionMajor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="VersionMinor")]
        VersionMinor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="WrapperTool")]
        WrapperTool,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemCompile")]
    [System.Xml.Serialization.XmlRootAttribute("Compile", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemCompile")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemCompile : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType5[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemCompile()
        {
        }
        
        public ItemGroupTypeItemCompile(object[] items, ItemsChoiceType5[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AutoGen", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("CopyToOutputDirectory", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("DependentUpon", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("DesignTime", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("DesignTimeSharedInput", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Link", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("SubType", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Visible", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType5[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType5")]
    public enum ItemsChoiceType5
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AutoGen")]
        AutoGen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CopyToOutputDirectory")]
        CopyToOutputDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DependentUpon")]
        DependentUpon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DesignTime")]
        DesignTime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DesignTimeSharedInput")]
        DesignTimeSharedInput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Link")]
        Link,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SubType")]
        SubType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Visible")]
        Visible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemContent")]
    [System.Xml.Serialization.XmlRootAttribute("Content", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemContent")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemContent : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType7[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemContent()
        {
        }
        
        public ItemGroupTypeItemContent(object[] items, ItemsChoiceType7[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CopyToOutputDirectory", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("CustomToolNamespace", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("DependentUpon", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Generator", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("IsAssembly", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("LastGenOutput", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Link", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("PublishState", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("SubType", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Visible", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType7[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType7")]
    public enum ItemsChoiceType7
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CopyToOutputDirectory")]
        CopyToOutputDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CustomToolNamespace")]
        CustomToolNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DependentUpon")]
        DependentUpon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Generator")]
        Generator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Group")]
        Group,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="IsAssembly")]
        IsAssembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="LastGenOutput")]
        LastGenOutput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Link")]
        Link,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PublishState")]
        PublishState,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SubType")]
        SubType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Visible")]
        Visible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemEmbeddedResource")]
    [System.Xml.Serialization.XmlRootAttribute("EmbeddedResource", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemEmbeddedResource")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemEmbeddedResource : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType6[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemEmbeddedResource()
        {
        }
        
        public ItemGroupTypeItemEmbeddedResource(object[] items, ItemsChoiceType6[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CopyToOutputDirectory", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("CustomToolNamespace", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("DependentUpon", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Generator", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("LastGenOutput", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Link", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("LogicalName", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("SubType", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Visible", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType6[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType6")]
    public enum ItemsChoiceType6
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CopyToOutputDirectory")]
        CopyToOutputDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CustomToolNamespace")]
        CustomToolNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DependentUpon")]
        DependentUpon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Generator")]
        Generator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="LastGenOutput")]
        LastGenOutput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Link")]
        Link,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="LogicalName")]
        LogicalName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SubType")]
        SubType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Visible")]
        Visible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemNativeReference")]
    [System.Xml.Serialization.XmlRootAttribute("NativeReference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemNativeReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemNativeReference : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType3[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemNativeReference()
        {
        }
        
        public ItemGroupTypeItemNativeReference(object[] items, ItemsChoiceType3[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HintPath", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Name", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType3[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType3")]
    public enum ItemsChoiceType3
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="HintPath")]
        HintPath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Name")]
        Name,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemNone")]
    [System.Xml.Serialization.XmlRootAttribute("None", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemNone")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemNone : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType8[] itemsElementName;
        
        public ItemGroupTypeItemNone()
        {
        }
        
        public ItemGroupTypeItemNone(object[] items, ItemsChoiceType8[] itemsElementName)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CopyToOutputDirectory", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("CustomToolNamespace", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("DependentUpon", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Generator", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("LastGenOutput", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Link", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Visible", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType8[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType8")]
    public enum ItemsChoiceType8
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CopyToOutputDirectory")]
        CopyToOutputDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CustomToolNamespace")]
        CustomToolNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DependentUpon")]
        DependentUpon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Generator")]
        Generator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="LastGenOutput")]
        LastGenOutput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Link")]
        Link,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Visible")]
        Visible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemProjectReference")]
    [System.Xml.Serialization.XmlRootAttribute("ProjectReference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemProjectReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemProjectReference : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType4[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemProjectReference()
        {
        }
        
        public ItemGroupTypeItemProjectReference(object[] items, ItemsChoiceType4[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Name", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Package", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Project", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType4[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType4")]
    public enum ItemsChoiceType4
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Name")]
        Name,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Package")]
        Package,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Project")]
        Project,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemPublishFile")]
    [System.Xml.Serialization.XmlRootAttribute("PublishFile", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemPublishFile")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemPublishFile : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType11[] itemsElementName;
        
        public ItemGroupTypeItemPublishFile()
        {
        }
        
        public ItemGroupTypeItemPublishFile(object[] items, ItemsChoiceType11[] itemsElementName)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("IsAssembly", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("PublishState", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Visible", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType11[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType11")]
    public enum ItemsChoiceType11
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Group")]
        Group,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="IsAssembly")]
        IsAssembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PublishState")]
        PublishState,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Visible")]
        Visible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemReference")]
    [System.Xml.Serialization.XmlRootAttribute("Reference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemReference : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType1[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemReference()
        {
        }
        
        public ItemGroupTypeItemReference(object[] items, ItemsChoiceType1[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Aliases", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("FusionName", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("HintPath", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Name", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Private", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("SpecificVersion", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType1")]
    public enum ItemsChoiceType1
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Aliases")]
        Aliases,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="FusionName")]
        FusionName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="HintPath")]
        HintPath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Name")]
        Name,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Private")]
        Private,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SpecificVersion")]
        SpecificVersion,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="ItemGroupTypeItemWebReferenceUrl")]
    [System.Xml.Serialization.XmlRootAttribute("WebReferenceUrl", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="ItemGroupTypeItemWebReferenceUrl")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ItemGroupTypeItemWebReferenceUrl : SimpleItemType
    {
        
        /// <remarks/>
        private object[] items;
        
        /// <remarks/>
        private ItemsChoiceType9[] itemsElementName;
        
        /// <remarks/>
        private string include1;
        
        public ItemGroupTypeItemWebReferenceUrl()
        {
        }
        
        public ItemGroupTypeItemWebReferenceUrl(object[] items, ItemsChoiceType9[] itemsElementName, string include1)
        {
            this.items = items;
            this.itemsElementName = itemsElementName;
            this.include1 = include1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CachedAppSettingsObjectName", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("CachedDynamicPropName", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("CachedSettingsPropName", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("RelPath", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("ServiceLocationURL", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("UpdateFromURL", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("UrlBehavior", typeof(object))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.items;
            }
            set
            {
                if ((this.items != value))
                {
                    this.items = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType9[] ItemsElementName
        {
            get
            {
                return this.itemsElementName;
            }
            set
            {
                if ((this.itemsElementName != value))
                {
                    this.itemsElementName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Include")]
        public string Include1
        {
            get
            {
                return this.include1;
            }
            set
            {
                if ((this.include1 != value))
                {
                    this.include1 = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType9")]
    public enum ItemsChoiceType9
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CachedAppSettingsObjectName")]
        CachedAppSettingsObjectName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CachedDynamicPropName")]
        CachedDynamicPropName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CachedSettingsPropName")]
        CachedSettingsPropName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RelPath")]
        RelPath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ServiceLocationURL")]
        ServiceLocationURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdateFromURL")]
        UpdateFromURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UrlBehavior")]
        UrlBehavior,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType12")]
    public enum ItemsChoiceType12
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="BaseApplicationManifest")]
        BaseApplicationManifest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="BootstrapperFile")]
        BootstrapperFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="COMFileReference")]
        COMFileReference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="COMReference")]
        COMReference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Compile")]
        Compile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Content")]
        Content,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EmbeddedResource")]
        EmbeddedResource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Folder")]
        Folder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Import")]
        Import,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="NativeReference")]
        NativeReference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="None")]
        None,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ProjectReference")]
        ProjectReference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PublishFile")]
        PublishFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Reference")]
        Reference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Service")]
        Service,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="WebReferenceUrl")]
        WebReferenceUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="WebReferences")]
        WebReferences,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeAL")]
    [System.Xml.Serialization.XmlRootAttribute("AL", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeAL")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeAL : TaskType
    {
        
        /// <remarks/>
        private string algorithmId;
        
        /// <remarks/>
        private string baseAddress;
        
        /// <remarks/>
        private string companyName;
        
        /// <remarks/>
        private string configuration;
        
        /// <remarks/>
        private string copyright;
        
        /// <remarks/>
        private string culture;
        
        /// <remarks/>
        private string delaySign;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private string embedResources;
        
        /// <remarks/>
        private string evidenceFile;
        
        /// <remarks/>
        private string fileVersion;
        
        /// <remarks/>
        private string flags;
        
        /// <remarks/>
        private string generateFullPaths;
        
        /// <remarks/>
        private string keyContainer;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string linkResources;
        
        /// <remarks/>
        private string mainEntryPoint;
        
        /// <remarks/>
        private string outputAssembly;
        
        /// <remarks/>
        private string platform;
        
        /// <remarks/>
        private string productName;
        
        /// <remarks/>
        private string productVersion;
        
        /// <remarks/>
        private string responseFiles;
        
        /// <remarks/>
        private string sourceModules;
        
        /// <remarks/>
        private string targetType;
        
        /// <remarks/>
        private string templateFile;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string title;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string trademark;
        
        /// <remarks/>
        private string version;
        
        /// <remarks/>
        private string win32Icon;
        
        /// <remarks/>
        private string win32Resource;
        
        public TargetTypeAL()
        {
        }
        
        public TargetTypeAL(
                    string algorithmId, 
                    string baseAddress, 
                    string companyName, 
                    string configuration, 
                    string copyright, 
                    string culture, 
                    string delaySign, 
                    string description, 
                    string embedResources, 
                    string evidenceFile, 
                    string fileVersion, 
                    string flags, 
                    string generateFullPaths, 
                    string keyContainer, 
                    string keyFile, 
                    string linkResources, 
                    string mainEntryPoint, 
                    string outputAssembly, 
                    string platform, 
                    string productName, 
                    string productVersion, 
                    string responseFiles, 
                    string sourceModules, 
                    string targetType, 
                    string templateFile, 
                    string timeout, 
                    string title, 
                    string toolPath, 
                    string trademark, 
                    string version, 
                    string win32Icon, 
                    string win32Resource)
        {
            this.algorithmId = algorithmId;
            this.baseAddress = baseAddress;
            this.companyName = companyName;
            this.configuration = configuration;
            this.copyright = copyright;
            this.culture = culture;
            this.delaySign = delaySign;
            this.description = description;
            this.embedResources = embedResources;
            this.evidenceFile = evidenceFile;
            this.fileVersion = fileVersion;
            this.flags = flags;
            this.generateFullPaths = generateFullPaths;
            this.keyContainer = keyContainer;
            this.keyFile = keyFile;
            this.linkResources = linkResources;
            this.mainEntryPoint = mainEntryPoint;
            this.outputAssembly = outputAssembly;
            this.platform = platform;
            this.productName = productName;
            this.productVersion = productVersion;
            this.responseFiles = responseFiles;
            this.sourceModules = sourceModules;
            this.targetType = targetType;
            this.templateFile = templateFile;
            this.timeout = timeout;
            this.title = title;
            this.toolPath = toolPath;
            this.trademark = trademark;
            this.version = version;
            this.win32Icon = win32Icon;
            this.win32Resource = win32Resource;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AlgorithmId")]
        public string AlgorithmId
        {
            get
            {
                return this.algorithmId;
            }
            set
            {
                if ((this.algorithmId != value))
                {
                    this.algorithmId = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BaseAddress")]
        public string BaseAddress
        {
            get
            {
                return this.baseAddress;
            }
            set
            {
                if ((this.baseAddress != value))
                {
                    this.baseAddress = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CompanyName")]
        public string CompanyName
        {
            get
            {
                return this.companyName;
            }
            set
            {
                if ((this.companyName != value))
                {
                    this.companyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Configuration")]
        public string Configuration
        {
            get
            {
                return this.configuration;
            }
            set
            {
                if ((this.configuration != value))
                {
                    this.configuration = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Copyright")]
        public string Copyright
        {
            get
            {
                return this.copyright;
            }
            set
            {
                if ((this.copyright != value))
                {
                    this.copyright = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Culture")]
        public string Culture
        {
            get
            {
                return this.culture;
            }
            set
            {
                if ((this.culture != value))
                {
                    this.culture = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DelaySign")]
        public string DelaySign
        {
            get
            {
                return this.delaySign;
            }
            set
            {
                if ((this.delaySign != value))
                {
                    this.delaySign = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EmbedResources")]
        public string EmbedResources
        {
            get
            {
                return this.embedResources;
            }
            set
            {
                if ((this.embedResources != value))
                {
                    this.embedResources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EvidenceFile")]
        public string EvidenceFile
        {
            get
            {
                return this.evidenceFile;
            }
            set
            {
                if ((this.evidenceFile != value))
                {
                    this.evidenceFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FileVersion")]
        public string FileVersion
        {
            get
            {
                return this.fileVersion;
            }
            set
            {
                if ((this.fileVersion != value))
                {
                    this.fileVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Flags")]
        public string Flags
        {
            get
            {
                return this.flags;
            }
            set
            {
                if ((this.flags != value))
                {
                    this.flags = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="GenerateFullPaths")]
        public string GenerateFullPaths
        {
            get
            {
                return this.generateFullPaths;
            }
            set
            {
                if ((this.generateFullPaths != value))
                {
                    this.generateFullPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyContainer")]
        public string KeyContainer
        {
            get
            {
                return this.keyContainer;
            }
            set
            {
                if ((this.keyContainer != value))
                {
                    this.keyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LinkResources")]
        public string LinkResources
        {
            get
            {
                return this.linkResources;
            }
            set
            {
                if ((this.linkResources != value))
                {
                    this.linkResources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MainEntryPoint")]
        public string MainEntryPoint
        {
            get
            {
                return this.mainEntryPoint;
            }
            set
            {
                if ((this.mainEntryPoint != value))
                {
                    this.mainEntryPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputAssembly")]
        public string OutputAssembly
        {
            get
            {
                return this.outputAssembly;
            }
            set
            {
                if ((this.outputAssembly != value))
                {
                    this.outputAssembly = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Platform")]
        public string Platform
        {
            get
            {
                return this.platform;
            }
            set
            {
                if ((this.platform != value))
                {
                    this.platform = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ProductName")]
        public string ProductName
        {
            get
            {
                return this.productName;
            }
            set
            {
                if ((this.productName != value))
                {
                    this.productName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ProductVersion")]
        public string ProductVersion
        {
            get
            {
                return this.productVersion;
            }
            set
            {
                if ((this.productVersion != value))
                {
                    this.productVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResponseFiles")]
        public string ResponseFiles
        {
            get
            {
                return this.responseFiles;
            }
            set
            {
                if ((this.responseFiles != value))
                {
                    this.responseFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SourceModules")]
        public string SourceModules
        {
            get
            {
                return this.sourceModules;
            }
            set
            {
                if ((this.sourceModules != value))
                {
                    this.sourceModules = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetType")]
        public string TargetType
        {
            get
            {
                return this.targetType;
            }
            set
            {
                if ((this.targetType != value))
                {
                    this.targetType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TemplateFile")]
        public string TemplateFile
        {
            get
            {
                return this.templateFile;
            }
            set
            {
                if ((this.templateFile != value))
                {
                    this.templateFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Title")]
        public string Title
        {
            get
            {
                return this.title;
            }
            set
            {
                if ((this.title != value))
                {
                    this.title = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Trademark")]
        public string Trademark
        {
            get
            {
                return this.trademark;
            }
            set
            {
                if ((this.trademark != value))
                {
                    this.trademark = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Version")]
        public string Version
        {
            get
            {
                return this.version;
            }
            set
            {
                if ((this.version != value))
                {
                    this.version = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Icon")]
        public string Win32Icon
        {
            get
            {
                return this.win32Icon;
            }
            set
            {
                if ((this.win32Icon != value))
                {
                    this.win32Icon = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Resource")]
        public string Win32Resource
        {
            get
            {
                return this.win32Resource;
            }
            set
            {
                if ((this.win32Resource != value))
                {
                    this.win32Resource = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeAspNetCompiler")]
    [System.Xml.Serialization.XmlRootAttribute("AspNetCompiler", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeAspNetCompiler")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeAspNetCompiler : TaskType
    {
        
        /// <remarks/>
        private string allowPartiallyTrustedCallers;
        
        /// <remarks/>
        private string clean;
        
        /// <remarks/>
        private string debug;
        
        /// <remarks/>
        private string delaySign;
        
        /// <remarks/>
        private string fixedNames;
        
        /// <remarks/>
        private string force;
        
        /// <remarks/>
        private string keyContainer;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string metabasePath;
        
        /// <remarks/>
        private string physicalPath;
        
        /// <remarks/>
        private string targetPath;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string updateable;
        
        /// <remarks/>
        private string virtualPath;
        
        public TargetTypeAspNetCompiler()
        {
        }
        
        public TargetTypeAspNetCompiler(string allowPartiallyTrustedCallers, string clean, string debug, string delaySign, string fixedNames, string force, string keyContainer, string keyFile, string metabasePath, string physicalPath, string targetPath, string timeout, string toolPath, string updateable, string virtualPath)
        {
            this.allowPartiallyTrustedCallers = allowPartiallyTrustedCallers;
            this.clean = clean;
            this.debug = debug;
            this.delaySign = delaySign;
            this.fixedNames = fixedNames;
            this.force = force;
            this.keyContainer = keyContainer;
            this.keyFile = keyFile;
            this.metabasePath = metabasePath;
            this.physicalPath = physicalPath;
            this.targetPath = targetPath;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.updateable = updateable;
            this.virtualPath = virtualPath;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AllowPartiallyTrustedCallers")]
        public string AllowPartiallyTrustedCallers
        {
            get
            {
                return this.allowPartiallyTrustedCallers;
            }
            set
            {
                if ((this.allowPartiallyTrustedCallers != value))
                {
                    this.allowPartiallyTrustedCallers = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Clean")]
        public string Clean
        {
            get
            {
                return this.clean;
            }
            set
            {
                if ((this.clean != value))
                {
                    this.clean = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Debug")]
        public string Debug
        {
            get
            {
                return this.debug;
            }
            set
            {
                if ((this.debug != value))
                {
                    this.debug = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DelaySign")]
        public string DelaySign
        {
            get
            {
                return this.delaySign;
            }
            set
            {
                if ((this.delaySign != value))
                {
                    this.delaySign = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FixedNames")]
        public string FixedNames
        {
            get
            {
                return this.fixedNames;
            }
            set
            {
                if ((this.fixedNames != value))
                {
                    this.fixedNames = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Force")]
        public string Force
        {
            get
            {
                return this.force;
            }
            set
            {
                if ((this.force != value))
                {
                    this.force = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyContainer")]
        public string KeyContainer
        {
            get
            {
                return this.keyContainer;
            }
            set
            {
                if ((this.keyContainer != value))
                {
                    this.keyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MetabasePath")]
        public string MetabasePath
        {
            get
            {
                return this.metabasePath;
            }
            set
            {
                if ((this.metabasePath != value))
                {
                    this.metabasePath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PhysicalPath")]
        public string PhysicalPath
        {
            get
            {
                return this.physicalPath;
            }
            set
            {
                if ((this.physicalPath != value))
                {
                    this.physicalPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetPath")]
        public string TargetPath
        {
            get
            {
                return this.targetPath;
            }
            set
            {
                if ((this.targetPath != value))
                {
                    this.targetPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Updateable")]
        public string Updateable
        {
            get
            {
                return this.updateable;
            }
            set
            {
                if ((this.updateable != value))
                {
                    this.updateable = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="VirtualPath")]
        public string VirtualPath
        {
            get
            {
                return this.virtualPath;
            }
            set
            {
                if ((this.virtualPath != value))
                {
                    this.virtualPath = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeAssignCulture")]
    [System.Xml.Serialization.XmlRootAttribute("AssignCulture", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeAssignCulture")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeAssignCulture : TaskType
    {
        
        /// <remarks/>
        private string files;
        
        public TargetTypeAssignCulture()
        {
        }
        
        public TargetTypeAssignCulture(string files)
        {
            this.files = files;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Files")]
        public string Files
        {
            get
            {
                return this.files;
            }
            set
            {
                if ((this.files != value))
                {
                    this.files = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeAssignProjectConfiguration")]
    [System.Xml.Serialization.XmlRootAttribute("AssignProjectConfiguration", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeAssignProjectConfiguration")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeAssignProjectConfiguration : TaskType
    {
        
        /// <remarks/>
        private string assignedProjects;
        
        /// <remarks/>
        private string projectReferences;
        
        /// <remarks/>
        private string solutionConfigurationContents;
        
        /// <remarks/>
        private string unassignedProjects;
        
        public TargetTypeAssignProjectConfiguration()
        {
        }
        
        public TargetTypeAssignProjectConfiguration(string assignedProjects, string projectReferences, string solutionConfigurationContents, string unassignedProjects)
        {
            this.assignedProjects = assignedProjects;
            this.projectReferences = projectReferences;
            this.solutionConfigurationContents = solutionConfigurationContents;
            this.unassignedProjects = unassignedProjects;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssignedProjects")]
        public string AssignedProjects
        {
            get
            {
                return this.assignedProjects;
            }
            set
            {
                if ((this.assignedProjects != value))
                {
                    this.assignedProjects = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ProjectReferences")]
        public string ProjectReferences
        {
            get
            {
                return this.projectReferences;
            }
            set
            {
                if ((this.projectReferences != value))
                {
                    this.projectReferences = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SolutionConfigurationContents")]
        public string SolutionConfigurationContents
        {
            get
            {
                return this.solutionConfigurationContents;
            }
            set
            {
                if ((this.solutionConfigurationContents != value))
                {
                    this.solutionConfigurationContents = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UnassignedProjects")]
        public string UnassignedProjects
        {
            get
            {
                return this.unassignedProjects;
            }
            set
            {
                if ((this.unassignedProjects != value))
                {
                    this.unassignedProjects = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeAssignTargetPath")]
    [System.Xml.Serialization.XmlRootAttribute("AssignTargetPath", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeAssignTargetPath")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeAssignTargetPath : TaskType
    {
        
        /// <remarks/>
        private string files;
        
        /// <remarks/>
        private string rootFolder;
        
        public TargetTypeAssignTargetPath()
        {
        }
        
        public TargetTypeAssignTargetPath(string files, string rootFolder)
        {
            this.files = files;
            this.rootFolder = rootFolder;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Files")]
        public string Files
        {
            get
            {
                return this.files;
            }
            set
            {
                if ((this.files != value))
                {
                    this.files = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RootFolder")]
        public string RootFolder
        {
            get
            {
                return this.rootFolder;
            }
            set
            {
                if ((this.rootFolder != value))
                {
                    this.rootFolder = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCallTarget")]
    [System.Xml.Serialization.XmlRootAttribute("CallTarget", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCallTarget")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCallTarget : TaskType
    {
        
        /// <remarks/>
        private string runEachTargetSeparately;
        
        /// <remarks/>
        private string targets;
        
        public TargetTypeCallTarget()
        {
        }
        
        public TargetTypeCallTarget(string runEachTargetSeparately, string targets)
        {
            this.runEachTargetSeparately = runEachTargetSeparately;
            this.targets = targets;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RunEachTargetSeparately")]
        public string RunEachTargetSeparately
        {
            get
            {
                return this.runEachTargetSeparately;
            }
            set
            {
                if ((this.runEachTargetSeparately != value))
                {
                    this.runEachTargetSeparately = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Targets")]
        public string Targets
        {
            get
            {
                return this.targets;
            }
            set
            {
                if ((this.targets != value))
                {
                    this.targets = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCodeAnalysis")]
    [System.Xml.Serialization.XmlRootAttribute("CodeAnalysis", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCodeAnalysis")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCodeAnalysis : TaskType
    {
        
        /// <remarks/>
        private string applyLogFileXsl;
        
        /// <remarks/>
        private string assemblies;
        
        /// <remarks/>
        private string consoleXsl;
        
        /// <remarks/>
        private string dependentAssemblyPaths;
        
        /// <remarks/>
        private string dictionaries;
        
        /// <remarks/>
        private string imports;
        
        /// <remarks/>
        private string logFile;
        
        /// <remarks/>
        private string logFileXsl;
        
        /// <remarks/>
        private string outputToConsole;
        
        /// <remarks/>
        private string platformPath;
        
        /// <remarks/>
        private string project;
        
        /// <remarks/>
        private string references;
        
        /// <remarks/>
        private string ruleAssemblies;
        
        /// <remarks/>
        private string rules;
        
        /// <remarks/>
        private string summary;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string updateProjectFile;
        
        /// <remarks/>
        private string verbose;
        
        public TargetTypeCodeAnalysis()
        {
        }
        
        public TargetTypeCodeAnalysis(
                    string applyLogFileXsl, 
                    string assemblies, 
                    string consoleXsl, 
                    string dependentAssemblyPaths, 
                    string dictionaries, 
                    string imports, 
                    string logFile, 
                    string logFileXsl, 
                    string outputToConsole, 
                    string platformPath, 
                    string project, 
                    string references, 
                    string ruleAssemblies, 
                    string rules, 
                    string summary, 
                    string timeout, 
                    string toolPath, 
                    string updateProjectFile, 
                    string verbose)
        {
            this.applyLogFileXsl = applyLogFileXsl;
            this.assemblies = assemblies;
            this.consoleXsl = consoleXsl;
            this.dependentAssemblyPaths = dependentAssemblyPaths;
            this.dictionaries = dictionaries;
            this.imports = imports;
            this.logFile = logFile;
            this.logFileXsl = logFileXsl;
            this.outputToConsole = outputToConsole;
            this.platformPath = platformPath;
            this.project = project;
            this.references = references;
            this.ruleAssemblies = ruleAssemblies;
            this.rules = rules;
            this.summary = summary;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.updateProjectFile = updateProjectFile;
            this.verbose = verbose;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ApplyLogFileXsl")]
        public string ApplyLogFileXsl
        {
            get
            {
                return this.applyLogFileXsl;
            }
            set
            {
                if ((this.applyLogFileXsl != value))
                {
                    this.applyLogFileXsl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Assemblies")]
        public string Assemblies
        {
            get
            {
                return this.assemblies;
            }
            set
            {
                if ((this.assemblies != value))
                {
                    this.assemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ConsoleXsl")]
        public string ConsoleXsl
        {
            get
            {
                return this.consoleXsl;
            }
            set
            {
                if ((this.consoleXsl != value))
                {
                    this.consoleXsl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DependentAssemblyPaths")]
        public string DependentAssemblyPaths
        {
            get
            {
                return this.dependentAssemblyPaths;
            }
            set
            {
                if ((this.dependentAssemblyPaths != value))
                {
                    this.dependentAssemblyPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Dictionaries")]
        public string Dictionaries
        {
            get
            {
                return this.dictionaries;
            }
            set
            {
                if ((this.dictionaries != value))
                {
                    this.dictionaries = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Imports")]
        public string Imports
        {
            get
            {
                return this.imports;
            }
            set
            {
                if ((this.imports != value))
                {
                    this.imports = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LogFile")]
        public string LogFile
        {
            get
            {
                return this.logFile;
            }
            set
            {
                if ((this.logFile != value))
                {
                    this.logFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LogFileXsl")]
        public string LogFileXsl
        {
            get
            {
                return this.logFileXsl;
            }
            set
            {
                if ((this.logFileXsl != value))
                {
                    this.logFileXsl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputToConsole")]
        public string OutputToConsole
        {
            get
            {
                return this.outputToConsole;
            }
            set
            {
                if ((this.outputToConsole != value))
                {
                    this.outputToConsole = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PlatformPath")]
        public string PlatformPath
        {
            get
            {
                return this.platformPath;
            }
            set
            {
                if ((this.platformPath != value))
                {
                    this.platformPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Project")]
        public string Project
        {
            get
            {
                return this.project;
            }
            set
            {
                if ((this.project != value))
                {
                    this.project = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="References")]
        public string References
        {
            get
            {
                return this.references;
            }
            set
            {
                if ((this.references != value))
                {
                    this.references = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RuleAssemblies")]
        public string RuleAssemblies
        {
            get
            {
                return this.ruleAssemblies;
            }
            set
            {
                if ((this.ruleAssemblies != value))
                {
                    this.ruleAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Rules")]
        public string Rules
        {
            get
            {
                return this.rules;
            }
            set
            {
                if ((this.rules != value))
                {
                    this.rules = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Summary")]
        public string Summary
        {
            get
            {
                return this.summary;
            }
            set
            {
                if ((this.summary != value))
                {
                    this.summary = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UpdateProjectFile")]
        public string UpdateProjectFile
        {
            get
            {
                return this.updateProjectFile;
            }
            set
            {
                if ((this.updateProjectFile != value))
                {
                    this.updateProjectFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Verbose")]
        public string Verbose
        {
            get
            {
                return this.verbose;
            }
            set
            {
                if ((this.verbose != value))
                {
                    this.verbose = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCombinePath")]
    [System.Xml.Serialization.XmlRootAttribute("CombinePath", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCombinePath")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCombinePath : TaskType
    {
        
        /// <remarks/>
        private string paths;
        
        /// <remarks/>
        private string basePath;
        
        public TargetTypeCombinePath()
        {
        }
        
        public TargetTypeCombinePath(string paths, string basePath)
        {
            this.paths = paths;
            this.basePath = basePath;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Paths")]
        public string Paths
        {
            get
            {
                return this.paths;
            }
            set
            {
                if ((this.paths != value))
                {
                    this.paths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BasePath")]
        public string BasePath
        {
            get
            {
                return this.basePath;
            }
            set
            {
                if ((this.basePath != value))
                {
                    this.basePath = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCopy")]
    [System.Xml.Serialization.XmlRootAttribute("Copy", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCopy")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCopy : TaskType
    {
        
        /// <remarks/>
        private string destinationFiles;
        
        /// <remarks/>
        private string destinationFolder;
        
        /// <remarks/>
        private string skipUnchangedFiles;
        
        /// <remarks/>
        private string sourceFiles;
        
        public TargetTypeCopy()
        {
        }
        
        public TargetTypeCopy(string destinationFiles, string destinationFolder, string skipUnchangedFiles, string sourceFiles)
        {
            this.destinationFiles = destinationFiles;
            this.destinationFolder = destinationFolder;
            this.skipUnchangedFiles = skipUnchangedFiles;
            this.sourceFiles = sourceFiles;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DestinationFiles")]
        public string DestinationFiles
        {
            get
            {
                return this.destinationFiles;
            }
            set
            {
                if ((this.destinationFiles != value))
                {
                    this.destinationFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DestinationFolder")]
        public string DestinationFolder
        {
            get
            {
                return this.destinationFolder;
            }
            set
            {
                if ((this.destinationFolder != value))
                {
                    this.destinationFolder = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SkipUnchangedFiles")]
        public string SkipUnchangedFiles
        {
            get
            {
                return this.skipUnchangedFiles;
            }
            set
            {
                if ((this.skipUnchangedFiles != value))
                {
                    this.skipUnchangedFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SourceFiles")]
        public string SourceFiles
        {
            get
            {
                return this.sourceFiles;
            }
            set
            {
                if ((this.sourceFiles != value))
                {
                    this.sourceFiles = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCreateCSharpManifestResourceName")]
    [System.Xml.Serialization.XmlRootAttribute("CreateCSharpManifestResourceName", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCreateCSharpManifestResourceName")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCreateCSharpManifestResourceName : TaskType
    {
        
        /// <remarks/>
        private string resourceFiles;
        
        /// <remarks/>
        private string rootNamespace;
        
        public TargetTypeCreateCSharpManifestResourceName()
        {
        }
        
        public TargetTypeCreateCSharpManifestResourceName(string resourceFiles, string rootNamespace)
        {
            this.resourceFiles = resourceFiles;
            this.rootNamespace = rootNamespace;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResourceFiles")]
        public string ResourceFiles
        {
            get
            {
                return this.resourceFiles;
            }
            set
            {
                if ((this.resourceFiles != value))
                {
                    this.resourceFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RootNamespace")]
        public string RootNamespace
        {
            get
            {
                return this.rootNamespace;
            }
            set
            {
                if ((this.rootNamespace != value))
                {
                    this.rootNamespace = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCreateItem")]
    [System.Xml.Serialization.XmlRootAttribute("CreateItem", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCreateItem")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCreateItem : TaskType
    {
        
        /// <remarks/>
        private string additionalMetadata;
        
        /// <remarks/>
        private string exclude;
        
        /// <remarks/>
        private string include;
        
        public TargetTypeCreateItem()
        {
        }
        
        public TargetTypeCreateItem(string additionalMetadata, string exclude, string include)
        {
            this.additionalMetadata = additionalMetadata;
            this.exclude = exclude;
            this.include = include;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AdditionalMetadata")]
        public string AdditionalMetadata
        {
            get
            {
                return this.additionalMetadata;
            }
            set
            {
                if ((this.additionalMetadata != value))
                {
                    this.additionalMetadata = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Exclude")]
        public string Exclude
        {
            get
            {
                return this.exclude;
            }
            set
            {
                if ((this.exclude != value))
                {
                    this.exclude = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Include")]
        public string Include
        {
            get
            {
                return this.include;
            }
            set
            {
                if ((this.include != value))
                {
                    this.include = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCreateJSharpManifestResourceName")]
    [System.Xml.Serialization.XmlRootAttribute("CreateJSharpManifestResourceName", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCreateJSharpManifestResourceName")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCreateJSharpManifestResourceName : TaskType
    {
        
        /// <remarks/>
        private string resourceFiles;
        
        /// <remarks/>
        private string rootNamespace;
        
        public TargetTypeCreateJSharpManifestResourceName()
        {
        }
        
        public TargetTypeCreateJSharpManifestResourceName(string resourceFiles, string rootNamespace)
        {
            this.resourceFiles = resourceFiles;
            this.rootNamespace = rootNamespace;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResourceFiles")]
        public string ResourceFiles
        {
            get
            {
                return this.resourceFiles;
            }
            set
            {
                if ((this.resourceFiles != value))
                {
                    this.resourceFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RootNamespace")]
        public string RootNamespace
        {
            get
            {
                return this.rootNamespace;
            }
            set
            {
                if ((this.rootNamespace != value))
                {
                    this.rootNamespace = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCreateProperty")]
    [System.Xml.Serialization.XmlRootAttribute("CreateProperty", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCreateProperty")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCreateProperty : TaskType
    {
        
        /// <remarks/>
        private string value;
        
        public TargetTypeCreateProperty()
        {
        }
        
        public TargetTypeCreateProperty(string value)
        {
            this.value = value;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Value")]
        public string Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCreateTemporaryVCProject")]
    [System.Xml.Serialization.XmlRootAttribute("CreateTemporaryVCProject", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCreateTemporaryVCProject")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCreateTemporaryVCProject : TaskType
    {
        
        /// <remarks/>
        private string configuration;
        
        /// <remarks/>
        private string outputProjectFile;
        
        /// <remarks/>
        private string projectFile;
        
        /// <remarks/>
        private string referenceAssemblies;
        
        /// <remarks/>
        private string referenceImportLibraries;
        
        /// <remarks/>
        private string referenceGuids;
        
        public TargetTypeCreateTemporaryVCProject()
        {
        }
        
        public TargetTypeCreateTemporaryVCProject(string configuration, string outputProjectFile, string projectFile, string referenceAssemblies, string referenceImportLibraries, string referenceGuids)
        {
            this.configuration = configuration;
            this.outputProjectFile = outputProjectFile;
            this.projectFile = projectFile;
            this.referenceAssemblies = referenceAssemblies;
            this.referenceImportLibraries = referenceImportLibraries;
            this.referenceGuids = referenceGuids;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Configuration")]
        public string Configuration
        {
            get
            {
                return this.configuration;
            }
            set
            {
                if ((this.configuration != value))
                {
                    this.configuration = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputProjectFile")]
        public string OutputProjectFile
        {
            get
            {
                return this.outputProjectFile;
            }
            set
            {
                if ((this.outputProjectFile != value))
                {
                    this.outputProjectFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ProjectFile")]
        public string ProjectFile
        {
            get
            {
                return this.projectFile;
            }
            set
            {
                if ((this.projectFile != value))
                {
                    this.projectFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ReferenceAssemblies")]
        public string ReferenceAssemblies
        {
            get
            {
                return this.referenceAssemblies;
            }
            set
            {
                if ((this.referenceAssemblies != value))
                {
                    this.referenceAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ReferenceImportLibraries")]
        public string ReferenceImportLibraries
        {
            get
            {
                return this.referenceImportLibraries;
            }
            set
            {
                if ((this.referenceImportLibraries != value))
                {
                    this.referenceImportLibraries = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ReferenceGuids")]
        public string ReferenceGuids
        {
            get
            {
                return this.referenceGuids;
            }
            set
            {
                if ((this.referenceGuids != value))
                {
                    this.referenceGuids = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCreateVisualBasicManifestResourceName")]
    [System.Xml.Serialization.XmlRootAttribute("CreateVisualBasicManifestResourceName", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCreateVisualBasicManifestResourceName")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCreateVisualBasicManifestResourceName : TaskType
    {
        
        /// <remarks/>
        private string resourceFiles;
        
        /// <remarks/>
        private string rootNamespace;
        
        public TargetTypeCreateVisualBasicManifestResourceName()
        {
        }
        
        public TargetTypeCreateVisualBasicManifestResourceName(string resourceFiles, string rootNamespace)
        {
            this.resourceFiles = resourceFiles;
            this.rootNamespace = rootNamespace;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResourceFiles")]
        public string ResourceFiles
        {
            get
            {
                return this.resourceFiles;
            }
            set
            {
                if ((this.resourceFiles != value))
                {
                    this.resourceFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RootNamespace")]
        public string RootNamespace
        {
            get
            {
                return this.rootNamespace;
            }
            set
            {
                if ((this.rootNamespace != value))
                {
                    this.rootNamespace = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeCsc")]
    [System.Xml.Serialization.XmlRootAttribute("Csc", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeCsc")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeCsc : TaskType
    {
        
        /// <remarks/>
        private string additionalLibPaths;
        
        /// <remarks/>
        private string addModules;
        
        /// <remarks/>
        private string allowUnsafeBlocks;
        
        /// <remarks/>
        private string baseAddress;
        
        /// <remarks/>
        private string checkForOverflowUnderflow;
        
        /// <remarks/>
        private string codePage;
        
        /// <remarks/>
        private string debugType;
        
        /// <remarks/>
        private string defineConstants;
        
        /// <remarks/>
        private string delaySign;
        
        /// <remarks/>
        private string disabledWarnings;
        
        /// <remarks/>
        private string documentationFile;
        
        /// <remarks/>
        private string emitDebugInformation;
        
        /// <remarks/>
        private string errorReport;
        
        /// <remarks/>
        private string fileAlignment;
        
        /// <remarks/>
        private string generateFullPaths;
        
        /// <remarks/>
        private string keyContainer;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string langVersion;
        
        /// <remarks/>
        private string linkResources;
        
        /// <remarks/>
        private string mainEntryPoint;
        
        /// <remarks/>
        private string moduleAssemblyName;
        
        /// <remarks/>
        private string noConfig;
        
        /// <remarks/>
        private string noLogo;
        
        /// <remarks/>
        private string noStandardLib;
        
        /// <remarks/>
        private string optimize;
        
        /// <remarks/>
        private string outputAssembly;
        
        /// <remarks/>
        private string pdbFile;
        
        /// <remarks/>
        private string platform;
        
        /// <remarks/>
        private string references;
        
        /// <remarks/>
        private string resources;
        
        /// <remarks/>
        private string responseFiles;
        
        /// <remarks/>
        private string sources;
        
        /// <remarks/>
        private string targetType;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string treatWarningsAsErrors;
        
        /// <remarks/>
        private string useHostCompilerIfAvailable;
        
        /// <remarks/>
        private string utf8Output;
        
        /// <remarks/>
        private string warningLevel;
        
        /// <remarks/>
        private string warningsAsErrors;
        
        /// <remarks/>
        private string warningsNotAsErrors;
        
        /// <remarks/>
        private string win32Icon;
        
        /// <remarks/>
        private string win32Resource;
        
        public TargetTypeCsc()
        {
        }
        
        public TargetTypeCsc(
                    string additionalLibPaths, 
                    string addModules, 
                    string allowUnsafeBlocks, 
                    string baseAddress, 
                    string checkForOverflowUnderflow, 
                    string codePage, 
                    string debugType, 
                    string defineConstants, 
                    string delaySign, 
                    string disabledWarnings, 
                    string documentationFile, 
                    string emitDebugInformation, 
                    string errorReport, 
                    string fileAlignment, 
                    string generateFullPaths, 
                    string keyContainer, 
                    string keyFile, 
                    string langVersion, 
                    string linkResources, 
                    string mainEntryPoint, 
                    string moduleAssemblyName, 
                    string noConfig, 
                    string noLogo, 
                    string noStandardLib, 
                    string optimize, 
                    string outputAssembly, 
                    string pdbFile, 
                    string platform, 
                    string references, 
                    string resources, 
                    string responseFiles, 
                    string sources, 
                    string targetType, 
                    string timeout, 
                    string toolPath, 
                    string treatWarningsAsErrors, 
                    string useHostCompilerIfAvailable, 
                    string utf8Output, 
                    string warningLevel, 
                    string warningsAsErrors, 
                    string warningsNotAsErrors, 
                    string win32Icon, 
                    string win32Resource)
        {
            this.additionalLibPaths = additionalLibPaths;
            this.addModules = addModules;
            this.allowUnsafeBlocks = allowUnsafeBlocks;
            this.baseAddress = baseAddress;
            this.checkForOverflowUnderflow = checkForOverflowUnderflow;
            this.codePage = codePage;
            this.debugType = debugType;
            this.defineConstants = defineConstants;
            this.delaySign = delaySign;
            this.disabledWarnings = disabledWarnings;
            this.documentationFile = documentationFile;
            this.emitDebugInformation = emitDebugInformation;
            this.errorReport = errorReport;
            this.fileAlignment = fileAlignment;
            this.generateFullPaths = generateFullPaths;
            this.keyContainer = keyContainer;
            this.keyFile = keyFile;
            this.langVersion = langVersion;
            this.linkResources = linkResources;
            this.mainEntryPoint = mainEntryPoint;
            this.moduleAssemblyName = moduleAssemblyName;
            this.noConfig = noConfig;
            this.noLogo = noLogo;
            this.noStandardLib = noStandardLib;
            this.optimize = optimize;
            this.outputAssembly = outputAssembly;
            this.pdbFile = pdbFile;
            this.platform = platform;
            this.references = references;
            this.resources = resources;
            this.responseFiles = responseFiles;
            this.sources = sources;
            this.targetType = targetType;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.treatWarningsAsErrors = treatWarningsAsErrors;
            this.useHostCompilerIfAvailable = useHostCompilerIfAvailable;
            this.utf8Output = utf8Output;
            this.warningLevel = warningLevel;
            this.warningsAsErrors = warningsAsErrors;
            this.warningsNotAsErrors = warningsNotAsErrors;
            this.win32Icon = win32Icon;
            this.win32Resource = win32Resource;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AdditionalLibPaths")]
        public string AdditionalLibPaths
        {
            get
            {
                return this.additionalLibPaths;
            }
            set
            {
                if ((this.additionalLibPaths != value))
                {
                    this.additionalLibPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AddModules")]
        public string AddModules
        {
            get
            {
                return this.addModules;
            }
            set
            {
                if ((this.addModules != value))
                {
                    this.addModules = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AllowUnsafeBlocks")]
        public string AllowUnsafeBlocks
        {
            get
            {
                return this.allowUnsafeBlocks;
            }
            set
            {
                if ((this.allowUnsafeBlocks != value))
                {
                    this.allowUnsafeBlocks = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BaseAddress")]
        public string BaseAddress
        {
            get
            {
                return this.baseAddress;
            }
            set
            {
                if ((this.baseAddress != value))
                {
                    this.baseAddress = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CheckForOverflowUnderflow")]
        public string CheckForOverflowUnderflow
        {
            get
            {
                return this.checkForOverflowUnderflow;
            }
            set
            {
                if ((this.checkForOverflowUnderflow != value))
                {
                    this.checkForOverflowUnderflow = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CodePage")]
        public string CodePage
        {
            get
            {
                return this.codePage;
            }
            set
            {
                if ((this.codePage != value))
                {
                    this.codePage = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DebugType")]
        public string DebugType
        {
            get
            {
                return this.debugType;
            }
            set
            {
                if ((this.debugType != value))
                {
                    this.debugType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DefineConstants")]
        public string DefineConstants
        {
            get
            {
                return this.defineConstants;
            }
            set
            {
                if ((this.defineConstants != value))
                {
                    this.defineConstants = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DelaySign")]
        public string DelaySign
        {
            get
            {
                return this.delaySign;
            }
            set
            {
                if ((this.delaySign != value))
                {
                    this.delaySign = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DisabledWarnings")]
        public string DisabledWarnings
        {
            get
            {
                return this.disabledWarnings;
            }
            set
            {
                if ((this.disabledWarnings != value))
                {
                    this.disabledWarnings = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DocumentationFile")]
        public string DocumentationFile
        {
            get
            {
                return this.documentationFile;
            }
            set
            {
                if ((this.documentationFile != value))
                {
                    this.documentationFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EmitDebugInformation")]
        public string EmitDebugInformation
        {
            get
            {
                return this.emitDebugInformation;
            }
            set
            {
                if ((this.emitDebugInformation != value))
                {
                    this.emitDebugInformation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ErrorReport")]
        public string ErrorReport
        {
            get
            {
                return this.errorReport;
            }
            set
            {
                if ((this.errorReport != value))
                {
                    this.errorReport = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FileAlignment")]
        public string FileAlignment
        {
            get
            {
                return this.fileAlignment;
            }
            set
            {
                if ((this.fileAlignment != value))
                {
                    this.fileAlignment = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="GenerateFullPaths")]
        public string GenerateFullPaths
        {
            get
            {
                return this.generateFullPaths;
            }
            set
            {
                if ((this.generateFullPaths != value))
                {
                    this.generateFullPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyContainer")]
        public string KeyContainer
        {
            get
            {
                return this.keyContainer;
            }
            set
            {
                if ((this.keyContainer != value))
                {
                    this.keyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LangVersion")]
        public string LangVersion
        {
            get
            {
                return this.langVersion;
            }
            set
            {
                if ((this.langVersion != value))
                {
                    this.langVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LinkResources")]
        public string LinkResources
        {
            get
            {
                return this.linkResources;
            }
            set
            {
                if ((this.linkResources != value))
                {
                    this.linkResources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MainEntryPoint")]
        public string MainEntryPoint
        {
            get
            {
                return this.mainEntryPoint;
            }
            set
            {
                if ((this.mainEntryPoint != value))
                {
                    this.mainEntryPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ModuleAssemblyName")]
        public string ModuleAssemblyName
        {
            get
            {
                return this.moduleAssemblyName;
            }
            set
            {
                if ((this.moduleAssemblyName != value))
                {
                    this.moduleAssemblyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoConfig")]
        public string NoConfig
        {
            get
            {
                return this.noConfig;
            }
            set
            {
                if ((this.noConfig != value))
                {
                    this.noConfig = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoLogo")]
        public string NoLogo
        {
            get
            {
                return this.noLogo;
            }
            set
            {
                if ((this.noLogo != value))
                {
                    this.noLogo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoStandardLib")]
        public string NoStandardLib
        {
            get
            {
                return this.noStandardLib;
            }
            set
            {
                if ((this.noStandardLib != value))
                {
                    this.noStandardLib = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Optimize")]
        public string Optimize
        {
            get
            {
                return this.optimize;
            }
            set
            {
                if ((this.optimize != value))
                {
                    this.optimize = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputAssembly")]
        public string OutputAssembly
        {
            get
            {
                return this.outputAssembly;
            }
            set
            {
                if ((this.outputAssembly != value))
                {
                    this.outputAssembly = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PdbFile")]
        public string PdbFile
        {
            get
            {
                return this.pdbFile;
            }
            set
            {
                if ((this.pdbFile != value))
                {
                    this.pdbFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Platform")]
        public string Platform
        {
            get
            {
                return this.platform;
            }
            set
            {
                if ((this.platform != value))
                {
                    this.platform = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="References")]
        public string References
        {
            get
            {
                return this.references;
            }
            set
            {
                if ((this.references != value))
                {
                    this.references = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Resources")]
        public string Resources
        {
            get
            {
                return this.resources;
            }
            set
            {
                if ((this.resources != value))
                {
                    this.resources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResponseFiles")]
        public string ResponseFiles
        {
            get
            {
                return this.responseFiles;
            }
            set
            {
                if ((this.responseFiles != value))
                {
                    this.responseFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Sources")]
        public string Sources
        {
            get
            {
                return this.sources;
            }
            set
            {
                if ((this.sources != value))
                {
                    this.sources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetType")]
        public string TargetType
        {
            get
            {
                return this.targetType;
            }
            set
            {
                if ((this.targetType != value))
                {
                    this.targetType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TreatWarningsAsErrors")]
        public string TreatWarningsAsErrors
        {
            get
            {
                return this.treatWarningsAsErrors;
            }
            set
            {
                if ((this.treatWarningsAsErrors != value))
                {
                    this.treatWarningsAsErrors = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UseHostCompilerIfAvailable")]
        public string UseHostCompilerIfAvailable
        {
            get
            {
                return this.useHostCompilerIfAvailable;
            }
            set
            {
                if ((this.useHostCompilerIfAvailable != value))
                {
                    this.useHostCompilerIfAvailable = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Utf8Output")]
        public string Utf8Output
        {
            get
            {
                return this.utf8Output;
            }
            set
            {
                if ((this.utf8Output != value))
                {
                    this.utf8Output = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WarningLevel")]
        public string WarningLevel
        {
            get
            {
                return this.warningLevel;
            }
            set
            {
                if ((this.warningLevel != value))
                {
                    this.warningLevel = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WarningsAsErrors")]
        public string WarningsAsErrors
        {
            get
            {
                return this.warningsAsErrors;
            }
            set
            {
                if ((this.warningsAsErrors != value))
                {
                    this.warningsAsErrors = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WarningsNotAsErrors")]
        public string WarningsNotAsErrors
        {
            get
            {
                return this.warningsNotAsErrors;
            }
            set
            {
                if ((this.warningsNotAsErrors != value))
                {
                    this.warningsNotAsErrors = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Icon")]
        public string Win32Icon
        {
            get
            {
                return this.win32Icon;
            }
            set
            {
                if ((this.win32Icon != value))
                {
                    this.win32Icon = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Resource")]
        public string Win32Resource
        {
            get
            {
                return this.win32Resource;
            }
            set
            {
                if ((this.win32Resource != value))
                {
                    this.win32Resource = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeDelete")]
    [System.Xml.Serialization.XmlRootAttribute("Delete", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeDelete")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeDelete : TaskType
    {
        
        /// <remarks/>
        private string deletedFiles;
        
        /// <remarks/>
        private string files;
        
        /// <remarks/>
        private string treatErrorsAsWarnings;
        
        public TargetTypeDelete()
        {
        }
        
        public TargetTypeDelete(string deletedFiles, string files, string treatErrorsAsWarnings)
        {
            this.deletedFiles = deletedFiles;
            this.files = files;
            this.treatErrorsAsWarnings = treatErrorsAsWarnings;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DeletedFiles")]
        public string DeletedFiles
        {
            get
            {
                return this.deletedFiles;
            }
            set
            {
                if ((this.deletedFiles != value))
                {
                    this.deletedFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Files")]
        public string Files
        {
            get
            {
                return this.files;
            }
            set
            {
                if ((this.files != value))
                {
                    this.files = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TreatErrorsAsWarnings")]
        public string TreatErrorsAsWarnings
        {
            get
            {
                return this.treatErrorsAsWarnings;
            }
            set
            {
                if ((this.treatErrorsAsWarnings != value))
                {
                    this.treatErrorsAsWarnings = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeError")]
    [System.Xml.Serialization.XmlRootAttribute("Error", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeError")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeError : TaskType
    {
        
        /// <remarks/>
        private string code;
        
        /// <remarks/>
        private string helpKeyword;
        
        /// <remarks/>
        private string text;
        
        public TargetTypeError()
        {
        }
        
        public TargetTypeError(string code, string helpKeyword, string text)
        {
            this.code = code;
            this.helpKeyword = helpKeyword;
            this.text = text;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Code")]
        public string Code
        {
            get
            {
                return this.code;
            }
            set
            {
                if ((this.code != value))
                {
                    this.code = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="HelpKeyword")]
        public string HelpKeyword
        {
            get
            {
                return this.helpKeyword;
            }
            set
            {
                if ((this.helpKeyword != value))
                {
                    this.helpKeyword = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Text")]
        public string Text
        {
            get
            {
                return this.text;
            }
            set
            {
                if ((this.text != value))
                {
                    this.text = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeExec")]
    [System.Xml.Serialization.XmlRootAttribute("Exec", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeExec")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeExec : TaskType
    {
        
        /// <remarks/>
        private string command;
        
        /// <remarks/>
        private string ignoreExitCode;
        
        /// <remarks/>
        private string outputs;
        
        /// <remarks/>
        private string stdErrEncoding;
        
        /// <remarks/>
        private string stdOutEncoding;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string workingDirectory;
        
        public TargetTypeExec()
        {
        }
        
        public TargetTypeExec(string command, string ignoreExitCode, string outputs, string stdErrEncoding, string stdOutEncoding, string timeout, string toolPath, string workingDirectory)
        {
            this.command = command;
            this.ignoreExitCode = ignoreExitCode;
            this.outputs = outputs;
            this.stdErrEncoding = stdErrEncoding;
            this.stdOutEncoding = stdOutEncoding;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.workingDirectory = workingDirectory;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Command")]
        public string Command
        {
            get
            {
                return this.command;
            }
            set
            {
                if ((this.command != value))
                {
                    this.command = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="IgnoreExitCode")]
        public string IgnoreExitCode
        {
            get
            {
                return this.ignoreExitCode;
            }
            set
            {
                if ((this.ignoreExitCode != value))
                {
                    this.ignoreExitCode = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Outputs")]
        public string Outputs
        {
            get
            {
                return this.outputs;
            }
            set
            {
                if ((this.outputs != value))
                {
                    this.outputs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StdErrEncoding")]
        public string StdErrEncoding
        {
            get
            {
                return this.stdErrEncoding;
            }
            set
            {
                if ((this.stdErrEncoding != value))
                {
                    this.stdErrEncoding = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StdOutEncoding")]
        public string StdOutEncoding
        {
            get
            {
                return this.stdOutEncoding;
            }
            set
            {
                if ((this.stdOutEncoding != value))
                {
                    this.stdOutEncoding = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WorkingDirectory")]
        public string WorkingDirectory
        {
            get
            {
                return this.workingDirectory;
            }
            set
            {
                if ((this.workingDirectory != value))
                {
                    this.workingDirectory = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeFindUnderPath")]
    [System.Xml.Serialization.XmlRootAttribute("FindUnderPath", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeFindUnderPath")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeFindUnderPath : TaskType
    {
        
        /// <remarks/>
        private string files;
        
        /// <remarks/>
        private string inPath;
        
        /// <remarks/>
        private string outOfPath;
        
        /// <remarks/>
        private string path;
        
        public TargetTypeFindUnderPath()
        {
        }
        
        public TargetTypeFindUnderPath(string files, string inPath, string outOfPath, string path)
        {
            this.files = files;
            this.inPath = inPath;
            this.outOfPath = outOfPath;
            this.path = path;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Files")]
        public string Files
        {
            get
            {
                return this.files;
            }
            set
            {
                if ((this.files != value))
                {
                    this.files = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InPath")]
        public string InPath
        {
            get
            {
                return this.inPath;
            }
            set
            {
                if ((this.inPath != value))
                {
                    this.inPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutOfPath")]
        public string OutOfPath
        {
            get
            {
                return this.outOfPath;
            }
            set
            {
                if ((this.outOfPath != value))
                {
                    this.outOfPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Path")]
        public string Path
        {
            get
            {
                return this.path;
            }
            set
            {
                if ((this.path != value))
                {
                    this.path = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeFormatUrl")]
    [System.Xml.Serialization.XmlRootAttribute("FormatUrl", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeFormatUrl")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeFormatUrl : TaskType
    {
        
        /// <remarks/>
        private string inputUrl;
        
        /// <remarks/>
        private string outputUrl;
        
        public TargetTypeFormatUrl()
        {
        }
        
        public TargetTypeFormatUrl(string inputUrl, string outputUrl)
        {
            this.inputUrl = inputUrl;
            this.outputUrl = outputUrl;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InputUrl")]
        public string InputUrl
        {
            get
            {
                return this.inputUrl;
            }
            set
            {
                if ((this.inputUrl != value))
                {
                    this.inputUrl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputUrl")]
        public string OutputUrl
        {
            get
            {
                return this.outputUrl;
            }
            set
            {
                if ((this.outputUrl != value))
                {
                    this.outputUrl = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeFormatVersion")]
    [System.Xml.Serialization.XmlRootAttribute("FormatVersion", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeFormatVersion")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeFormatVersion : TaskType
    {
        
        /// <remarks/>
        private string formatType;
        
        /// <remarks/>
        private string outputVersion;
        
        /// <remarks/>
        private string revision;
        
        /// <remarks/>
        private string version;
        
        public TargetTypeFormatVersion()
        {
        }
        
        public TargetTypeFormatVersion(string formatType, string outputVersion, string revision, string version)
        {
            this.formatType = formatType;
            this.outputVersion = outputVersion;
            this.revision = revision;
            this.version = version;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FormatType")]
        public string FormatType
        {
            get
            {
                return this.formatType;
            }
            set
            {
                if ((this.formatType != value))
                {
                    this.formatType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputVersion")]
        public string OutputVersion
        {
            get
            {
                return this.outputVersion;
            }
            set
            {
                if ((this.outputVersion != value))
                {
                    this.outputVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Revision")]
        public string Revision
        {
            get
            {
                return this.revision;
            }
            set
            {
                if ((this.revision != value))
                {
                    this.revision = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Version")]
        public string Version
        {
            get
            {
                return this.version;
            }
            set
            {
                if ((this.version != value))
                {
                    this.version = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGenerateApplicationManifest")]
    [System.Xml.Serialization.XmlRootAttribute("GenerateApplicationManifest", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGenerateApplicationManifest")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGenerateApplicationManifest : TaskType
    {
        
        /// <remarks/>
        private string assemblyName;
        
        /// <remarks/>
        private string assemblyVersion;
        
        /// <remarks/>
        private string clrVersion;
        
        /// <remarks/>
        private string configFile;
        
        /// <remarks/>
        private string dependencies;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private string entryPoint;
        
        /// <remarks/>
        private string files;
        
        /// <remarks/>
        private string iconFile;
        
        /// <remarks/>
        private string inputManifest;
        
        /// <remarks/>
        private string isolatedComReferences;
        
        /// <remarks/>
        private string manifestType;
        
        /// <remarks/>
        private string maxTargetPath;
        
        /// <remarks/>
        private string oSVersion;
        
        /// <remarks/>
        private string outputManifest;
        
        /// <remarks/>
        private string platform;
        
        /// <remarks/>
        private string targetCulture;
        
        /// <remarks/>
        private string trustInfoFile;
        
        public TargetTypeGenerateApplicationManifest()
        {
        }
        
        public TargetTypeGenerateApplicationManifest(
                    string assemblyName, 
                    string assemblyVersion, 
                    string clrVersion, 
                    string configFile, 
                    string dependencies, 
                    string description, 
                    string entryPoint, 
                    string files, 
                    string iconFile, 
                    string inputManifest, 
                    string isolatedComReferences, 
                    string manifestType, 
                    string maxTargetPath, 
                    string oSVersion, 
                    string outputManifest, 
                    string platform, 
                    string targetCulture, 
                    string trustInfoFile)
        {
            this.assemblyName = assemblyName;
            this.assemblyVersion = assemblyVersion;
            this.clrVersion = clrVersion;
            this.configFile = configFile;
            this.dependencies = dependencies;
            this.description = description;
            this.entryPoint = entryPoint;
            this.files = files;
            this.iconFile = iconFile;
            this.inputManifest = inputManifest;
            this.isolatedComReferences = isolatedComReferences;
            this.manifestType = manifestType;
            this.maxTargetPath = maxTargetPath;
            this.oSVersion = oSVersion;
            this.outputManifest = outputManifest;
            this.platform = platform;
            this.targetCulture = targetCulture;
            this.trustInfoFile = trustInfoFile;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyName")]
        public string AssemblyName
        {
            get
            {
                return this.assemblyName;
            }
            set
            {
                if ((this.assemblyName != value))
                {
                    this.assemblyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyVersion")]
        public string AssemblyVersion
        {
            get
            {
                return this.assemblyVersion;
            }
            set
            {
                if ((this.assemblyVersion != value))
                {
                    this.assemblyVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ClrVersion")]
        public string ClrVersion
        {
            get
            {
                return this.clrVersion;
            }
            set
            {
                if ((this.clrVersion != value))
                {
                    this.clrVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ConfigFile")]
        public string ConfigFile
        {
            get
            {
                return this.configFile;
            }
            set
            {
                if ((this.configFile != value))
                {
                    this.configFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Dependencies")]
        public string Dependencies
        {
            get
            {
                return this.dependencies;
            }
            set
            {
                if ((this.dependencies != value))
                {
                    this.dependencies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EntryPoint")]
        public string EntryPoint
        {
            get
            {
                return this.entryPoint;
            }
            set
            {
                if ((this.entryPoint != value))
                {
                    this.entryPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Files")]
        public string Files
        {
            get
            {
                return this.files;
            }
            set
            {
                if ((this.files != value))
                {
                    this.files = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="IconFile")]
        public string IconFile
        {
            get
            {
                return this.iconFile;
            }
            set
            {
                if ((this.iconFile != value))
                {
                    this.iconFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InputManifest")]
        public string InputManifest
        {
            get
            {
                return this.inputManifest;
            }
            set
            {
                if ((this.inputManifest != value))
                {
                    this.inputManifest = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="IsolatedComReferences")]
        public string IsolatedComReferences
        {
            get
            {
                return this.isolatedComReferences;
            }
            set
            {
                if ((this.isolatedComReferences != value))
                {
                    this.isolatedComReferences = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ManifestType")]
        public string ManifestType
        {
            get
            {
                return this.manifestType;
            }
            set
            {
                if ((this.manifestType != value))
                {
                    this.manifestType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MaxTargetPath")]
        public string MaxTargetPath
        {
            get
            {
                return this.maxTargetPath;
            }
            set
            {
                if ((this.maxTargetPath != value))
                {
                    this.maxTargetPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OSVersion")]
        public string OSVersion
        {
            get
            {
                return this.oSVersion;
            }
            set
            {
                if ((this.oSVersion != value))
                {
                    this.oSVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputManifest")]
        public string OutputManifest
        {
            get
            {
                return this.outputManifest;
            }
            set
            {
                if ((this.outputManifest != value))
                {
                    this.outputManifest = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Platform")]
        public string Platform
        {
            get
            {
                return this.platform;
            }
            set
            {
                if ((this.platform != value))
                {
                    this.platform = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetCulture")]
        public string TargetCulture
        {
            get
            {
                return this.targetCulture;
            }
            set
            {
                if ((this.targetCulture != value))
                {
                    this.targetCulture = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TrustInfoFile")]
        public string TrustInfoFile
        {
            get
            {
                return this.trustInfoFile;
            }
            set
            {
                if ((this.trustInfoFile != value))
                {
                    this.trustInfoFile = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGenerateBootstrapper")]
    [System.Xml.Serialization.XmlRootAttribute("GenerateBootstrapper", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGenerateBootstrapper")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGenerateBootstrapper : TaskType
    {
        
        /// <remarks/>
        private string applicationFile;
        
        /// <remarks/>
        private string applicationName;
        
        /// <remarks/>
        private string applicationUrl;
        
        /// <remarks/>
        private string bootstrapperComponentFiles;
        
        /// <remarks/>
        private string bootstrapperItems;
        
        /// <remarks/>
        private string bootstrapperKeyFile;
        
        /// <remarks/>
        private string componentsLocation;
        
        /// <remarks/>
        private string componentsUrl;
        
        /// <remarks/>
        private string copyComponents;
        
        /// <remarks/>
        private string culture;
        
        /// <remarks/>
        private string fallbackCulture;
        
        /// <remarks/>
        private string outputPath;
        
        /// <remarks/>
        private string path;
        
        /// <remarks/>
        private string supportUrl;
        
        /// <remarks/>
        private string validate;
        
        public TargetTypeGenerateBootstrapper()
        {
        }
        
        public TargetTypeGenerateBootstrapper(string applicationFile, string applicationName, string applicationUrl, string bootstrapperComponentFiles, string bootstrapperItems, string bootstrapperKeyFile, string componentsLocation, string componentsUrl, string copyComponents, string culture, string fallbackCulture, string outputPath, string path, string supportUrl, string validate)
        {
            this.applicationFile = applicationFile;
            this.applicationName = applicationName;
            this.applicationUrl = applicationUrl;
            this.bootstrapperComponentFiles = bootstrapperComponentFiles;
            this.bootstrapperItems = bootstrapperItems;
            this.bootstrapperKeyFile = bootstrapperKeyFile;
            this.componentsLocation = componentsLocation;
            this.componentsUrl = componentsUrl;
            this.copyComponents = copyComponents;
            this.culture = culture;
            this.fallbackCulture = fallbackCulture;
            this.outputPath = outputPath;
            this.path = path;
            this.supportUrl = supportUrl;
            this.validate = validate;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ApplicationFile")]
        public string ApplicationFile
        {
            get
            {
                return this.applicationFile;
            }
            set
            {
                if ((this.applicationFile != value))
                {
                    this.applicationFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ApplicationName")]
        public string ApplicationName
        {
            get
            {
                return this.applicationName;
            }
            set
            {
                if ((this.applicationName != value))
                {
                    this.applicationName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ApplicationUrl")]
        public string ApplicationUrl
        {
            get
            {
                return this.applicationUrl;
            }
            set
            {
                if ((this.applicationUrl != value))
                {
                    this.applicationUrl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BootstrapperComponentFiles")]
        public string BootstrapperComponentFiles
        {
            get
            {
                return this.bootstrapperComponentFiles;
            }
            set
            {
                if ((this.bootstrapperComponentFiles != value))
                {
                    this.bootstrapperComponentFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BootstrapperItems")]
        public string BootstrapperItems
        {
            get
            {
                return this.bootstrapperItems;
            }
            set
            {
                if ((this.bootstrapperItems != value))
                {
                    this.bootstrapperItems = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BootstrapperKeyFile")]
        public string BootstrapperKeyFile
        {
            get
            {
                return this.bootstrapperKeyFile;
            }
            set
            {
                if ((this.bootstrapperKeyFile != value))
                {
                    this.bootstrapperKeyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ComponentsLocation")]
        public string ComponentsLocation
        {
            get
            {
                return this.componentsLocation;
            }
            set
            {
                if ((this.componentsLocation != value))
                {
                    this.componentsLocation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ComponentsUrl")]
        public string ComponentsUrl
        {
            get
            {
                return this.componentsUrl;
            }
            set
            {
                if ((this.componentsUrl != value))
                {
                    this.componentsUrl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CopyComponents")]
        public string CopyComponents
        {
            get
            {
                return this.copyComponents;
            }
            set
            {
                if ((this.copyComponents != value))
                {
                    this.copyComponents = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Culture")]
        public string Culture
        {
            get
            {
                return this.culture;
            }
            set
            {
                if ((this.culture != value))
                {
                    this.culture = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FallbackCulture")]
        public string FallbackCulture
        {
            get
            {
                return this.fallbackCulture;
            }
            set
            {
                if ((this.fallbackCulture != value))
                {
                    this.fallbackCulture = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputPath")]
        public string OutputPath
        {
            get
            {
                return this.outputPath;
            }
            set
            {
                if ((this.outputPath != value))
                {
                    this.outputPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Path")]
        public string Path
        {
            get
            {
                return this.path;
            }
            set
            {
                if ((this.path != value))
                {
                    this.path = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SupportUrl")]
        public string SupportUrl
        {
            get
            {
                return this.supportUrl;
            }
            set
            {
                if ((this.supportUrl != value))
                {
                    this.supportUrl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Validate")]
        public string Validate
        {
            get
            {
                return this.validate;
            }
            set
            {
                if ((this.validate != value))
                {
                    this.validate = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGenerateDeploymentManifest")]
    [System.Xml.Serialization.XmlRootAttribute("GenerateDeploymentManifest", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGenerateDeploymentManifest")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGenerateDeploymentManifest : TaskType
    {
        
        /// <remarks/>
        private string assemblyName;
        
        /// <remarks/>
        private string assemblyVersion;
        
        /// <remarks/>
        private string deploymentUrl;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private string disallowUrlActivation;
        
        /// <remarks/>
        private string entryPoint;
        
        /// <remarks/>
        private string inputManifest;
        
        /// <remarks/>
        private string install;
        
        /// <remarks/>
        private string mapFileExtensions;
        
        /// <remarks/>
        private string maxTargetPath;
        
        /// <remarks/>
        private string minimumRequiredVersion;
        
        /// <remarks/>
        private string outputManifest;
        
        /// <remarks/>
        private string platform;
        
        /// <remarks/>
        private string product;
        
        /// <remarks/>
        private string publisher;
        
        /// <remarks/>
        private string supportUrl;
        
        /// <remarks/>
        private string targetCulture;
        
        /// <remarks/>
        private string trustUrlParameters;
        
        /// <remarks/>
        private string updateEnabled;
        
        /// <remarks/>
        private string updateInterval;
        
        /// <remarks/>
        private string updateMode;
        
        /// <remarks/>
        private string updateUnit;
        
        public TargetTypeGenerateDeploymentManifest()
        {
        }
        
        public TargetTypeGenerateDeploymentManifest(
                    string assemblyName, 
                    string assemblyVersion, 
                    string deploymentUrl, 
                    string description, 
                    string disallowUrlActivation, 
                    string entryPoint, 
                    string inputManifest, 
                    string install, 
                    string mapFileExtensions, 
                    string maxTargetPath, 
                    string minimumRequiredVersion, 
                    string outputManifest, 
                    string platform, 
                    string product, 
                    string publisher, 
                    string supportUrl, 
                    string targetCulture, 
                    string trustUrlParameters, 
                    string updateEnabled, 
                    string updateInterval, 
                    string updateMode, 
                    string updateUnit)
        {
            this.assemblyName = assemblyName;
            this.assemblyVersion = assemblyVersion;
            this.deploymentUrl = deploymentUrl;
            this.description = description;
            this.disallowUrlActivation = disallowUrlActivation;
            this.entryPoint = entryPoint;
            this.inputManifest = inputManifest;
            this.install = install;
            this.mapFileExtensions = mapFileExtensions;
            this.maxTargetPath = maxTargetPath;
            this.minimumRequiredVersion = minimumRequiredVersion;
            this.outputManifest = outputManifest;
            this.platform = platform;
            this.product = product;
            this.publisher = publisher;
            this.supportUrl = supportUrl;
            this.targetCulture = targetCulture;
            this.trustUrlParameters = trustUrlParameters;
            this.updateEnabled = updateEnabled;
            this.updateInterval = updateInterval;
            this.updateMode = updateMode;
            this.updateUnit = updateUnit;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyName")]
        public string AssemblyName
        {
            get
            {
                return this.assemblyName;
            }
            set
            {
                if ((this.assemblyName != value))
                {
                    this.assemblyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyVersion")]
        public string AssemblyVersion
        {
            get
            {
                return this.assemblyVersion;
            }
            set
            {
                if ((this.assemblyVersion != value))
                {
                    this.assemblyVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DeploymentUrl")]
        public string DeploymentUrl
        {
            get
            {
                return this.deploymentUrl;
            }
            set
            {
                if ((this.deploymentUrl != value))
                {
                    this.deploymentUrl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DisallowUrlActivation")]
        public string DisallowUrlActivation
        {
            get
            {
                return this.disallowUrlActivation;
            }
            set
            {
                if ((this.disallowUrlActivation != value))
                {
                    this.disallowUrlActivation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EntryPoint")]
        public string EntryPoint
        {
            get
            {
                return this.entryPoint;
            }
            set
            {
                if ((this.entryPoint != value))
                {
                    this.entryPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InputManifest")]
        public string InputManifest
        {
            get
            {
                return this.inputManifest;
            }
            set
            {
                if ((this.inputManifest != value))
                {
                    this.inputManifest = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Install")]
        public string Install
        {
            get
            {
                return this.install;
            }
            set
            {
                if ((this.install != value))
                {
                    this.install = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MapFileExtensions")]
        public string MapFileExtensions
        {
            get
            {
                return this.mapFileExtensions;
            }
            set
            {
                if ((this.mapFileExtensions != value))
                {
                    this.mapFileExtensions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MaxTargetPath")]
        public string MaxTargetPath
        {
            get
            {
                return this.maxTargetPath;
            }
            set
            {
                if ((this.maxTargetPath != value))
                {
                    this.maxTargetPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MinimumRequiredVersion")]
        public string MinimumRequiredVersion
        {
            get
            {
                return this.minimumRequiredVersion;
            }
            set
            {
                if ((this.minimumRequiredVersion != value))
                {
                    this.minimumRequiredVersion = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputManifest")]
        public string OutputManifest
        {
            get
            {
                return this.outputManifest;
            }
            set
            {
                if ((this.outputManifest != value))
                {
                    this.outputManifest = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Platform")]
        public string Platform
        {
            get
            {
                return this.platform;
            }
            set
            {
                if ((this.platform != value))
                {
                    this.platform = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Product")]
        public string Product
        {
            get
            {
                return this.product;
            }
            set
            {
                if ((this.product != value))
                {
                    this.product = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Publisher")]
        public string Publisher
        {
            get
            {
                return this.publisher;
            }
            set
            {
                if ((this.publisher != value))
                {
                    this.publisher = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SupportUrl")]
        public string SupportUrl
        {
            get
            {
                return this.supportUrl;
            }
            set
            {
                if ((this.supportUrl != value))
                {
                    this.supportUrl = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetCulture")]
        public string TargetCulture
        {
            get
            {
                return this.targetCulture;
            }
            set
            {
                if ((this.targetCulture != value))
                {
                    this.targetCulture = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TrustUrlParameters")]
        public string TrustUrlParameters
        {
            get
            {
                return this.trustUrlParameters;
            }
            set
            {
                if ((this.trustUrlParameters != value))
                {
                    this.trustUrlParameters = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UpdateEnabled")]
        public string UpdateEnabled
        {
            get
            {
                return this.updateEnabled;
            }
            set
            {
                if ((this.updateEnabled != value))
                {
                    this.updateEnabled = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UpdateInterval")]
        public string UpdateInterval
        {
            get
            {
                return this.updateInterval;
            }
            set
            {
                if ((this.updateInterval != value))
                {
                    this.updateInterval = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UpdateMode")]
        public string UpdateMode
        {
            get
            {
                return this.updateMode;
            }
            set
            {
                if ((this.updateMode != value))
                {
                    this.updateMode = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UpdateUnit")]
        public string UpdateUnit
        {
            get
            {
                return this.updateUnit;
            }
            set
            {
                if ((this.updateUnit != value))
                {
                    this.updateUnit = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGenerateResource")]
    [System.Xml.Serialization.XmlRootAttribute("GenerateResource", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGenerateResource")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGenerateResource : TaskType
    {
        
        /// <remarks/>
        private string neverLockTypeAssemblies;
        
        /// <remarks/>
        private string outputResources;
        
        /// <remarks/>
        private string publicClass;
        
        /// <remarks/>
        private string references;
        
        /// <remarks/>
        private string sources;
        
        /// <remarks/>
        private string stateFile;
        
        /// <remarks/>
        private string stronglyTypedClassName;
        
        /// <remarks/>
        private string stronglyTypedFilename;
        
        /// <remarks/>
        private string stronglyTypedLanguage;
        
        /// <remarks/>
        private string stronglyTypedNamespace;
        
        /// <remarks/>
        private string useSourcePath;
        
        public TargetTypeGenerateResource()
        {
        }
        
        public TargetTypeGenerateResource(string neverLockTypeAssemblies, string outputResources, string publicClass, string references, string sources, string stateFile, string stronglyTypedClassName, string stronglyTypedFilename, string stronglyTypedLanguage, string stronglyTypedNamespace, string useSourcePath)
        {
            this.neverLockTypeAssemblies = neverLockTypeAssemblies;
            this.outputResources = outputResources;
            this.publicClass = publicClass;
            this.references = references;
            this.sources = sources;
            this.stateFile = stateFile;
            this.stronglyTypedClassName = stronglyTypedClassName;
            this.stronglyTypedFilename = stronglyTypedFilename;
            this.stronglyTypedLanguage = stronglyTypedLanguage;
            this.stronglyTypedNamespace = stronglyTypedNamespace;
            this.useSourcePath = useSourcePath;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NeverLockTypeAssemblies")]
        public string NeverLockTypeAssemblies
        {
            get
            {
                return this.neverLockTypeAssemblies;
            }
            set
            {
                if ((this.neverLockTypeAssemblies != value))
                {
                    this.neverLockTypeAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputResources")]
        public string OutputResources
        {
            get
            {
                return this.outputResources;
            }
            set
            {
                if ((this.outputResources != value))
                {
                    this.outputResources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PublicClass")]
        public string PublicClass
        {
            get
            {
                return this.publicClass;
            }
            set
            {
                if ((this.publicClass != value))
                {
                    this.publicClass = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="References")]
        public string References
        {
            get
            {
                return this.references;
            }
            set
            {
                if ((this.references != value))
                {
                    this.references = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Sources")]
        public string Sources
        {
            get
            {
                return this.sources;
            }
            set
            {
                if ((this.sources != value))
                {
                    this.sources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StateFile")]
        public string StateFile
        {
            get
            {
                return this.stateFile;
            }
            set
            {
                if ((this.stateFile != value))
                {
                    this.stateFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StronglyTypedClassName")]
        public string StronglyTypedClassName
        {
            get
            {
                return this.stronglyTypedClassName;
            }
            set
            {
                if ((this.stronglyTypedClassName != value))
                {
                    this.stronglyTypedClassName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StronglyTypedFilename")]
        public string StronglyTypedFilename
        {
            get
            {
                return this.stronglyTypedFilename;
            }
            set
            {
                if ((this.stronglyTypedFilename != value))
                {
                    this.stronglyTypedFilename = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StronglyTypedLanguage")]
        public string StronglyTypedLanguage
        {
            get
            {
                return this.stronglyTypedLanguage;
            }
            set
            {
                if ((this.stronglyTypedLanguage != value))
                {
                    this.stronglyTypedLanguage = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StronglyTypedNamespace")]
        public string StronglyTypedNamespace
        {
            get
            {
                return this.stronglyTypedNamespace;
            }
            set
            {
                if ((this.stronglyTypedNamespace != value))
                {
                    this.stronglyTypedNamespace = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UseSourcePath")]
        public string UseSourcePath
        {
            get
            {
                return this.useSourcePath;
            }
            set
            {
                if ((this.useSourcePath != value))
                {
                    this.useSourcePath = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGenerateTrustInfo")]
    [System.Xml.Serialization.XmlRootAttribute("GenerateTrustInfo", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGenerateTrustInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGenerateTrustInfo : TaskType
    {
        
        /// <remarks/>
        private string baseManifest;
        
        /// <remarks/>
        private string excludedPermissions;
        
        /// <remarks/>
        private string targetZone;
        
        /// <remarks/>
        private string trustInfoFile;
        
        public TargetTypeGenerateTrustInfo()
        {
        }
        
        public TargetTypeGenerateTrustInfo(string baseManifest, string excludedPermissions, string targetZone, string trustInfoFile)
        {
            this.baseManifest = baseManifest;
            this.excludedPermissions = excludedPermissions;
            this.targetZone = targetZone;
            this.trustInfoFile = trustInfoFile;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BaseManifest")]
        public string BaseManifest
        {
            get
            {
                return this.baseManifest;
            }
            set
            {
                if ((this.baseManifest != value))
                {
                    this.baseManifest = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ExcludedPermissions")]
        public string ExcludedPermissions
        {
            get
            {
                return this.excludedPermissions;
            }
            set
            {
                if ((this.excludedPermissions != value))
                {
                    this.excludedPermissions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetZone")]
        public string TargetZone
        {
            get
            {
                return this.targetZone;
            }
            set
            {
                if ((this.targetZone != value))
                {
                    this.targetZone = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TrustInfoFile")]
        public string TrustInfoFile
        {
            get
            {
                return this.trustInfoFile;
            }
            set
            {
                if ((this.trustInfoFile != value))
                {
                    this.trustInfoFile = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGetAssemblyIdentity")]
    [System.Xml.Serialization.XmlRootAttribute("GetAssemblyIdentity", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGetAssemblyIdentity")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGetAssemblyIdentity : TaskType
    {
        
        /// <remarks/>
        private string assemblies;
        
        /// <remarks/>
        private string assemblyFiles;
        
        public TargetTypeGetAssemblyIdentity()
        {
        }
        
        public TargetTypeGetAssemblyIdentity(string assemblies, string assemblyFiles)
        {
            this.assemblies = assemblies;
            this.assemblyFiles = assemblyFiles;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Assemblies")]
        public string Assemblies
        {
            get
            {
                return this.assemblies;
            }
            set
            {
                if ((this.assemblies != value))
                {
                    this.assemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyFiles")]
        public string AssemblyFiles
        {
            get
            {
                return this.assemblyFiles;
            }
            set
            {
                if ((this.assemblyFiles != value))
                {
                    this.assemblyFiles = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGetFrameworkPath")]
    [System.Xml.Serialization.XmlRootAttribute("GetFrameworkPath", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGetFrameworkPath")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGetFrameworkPath : TaskType
    {
        
        /// <remarks/>
        private string path;
        
        public TargetTypeGetFrameworkPath()
        {
        }
        
        public TargetTypeGetFrameworkPath(string path)
        {
            this.path = path;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Path")]
        public string Path
        {
            get
            {
                return this.path;
            }
            set
            {
                if ((this.path != value))
                {
                    this.path = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeGetFrameworkSdkPath")]
    [System.Xml.Serialization.XmlRootAttribute("GetFrameworkSdkPath", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeGetFrameworkSdkPath")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeGetFrameworkSdkPath : TaskType
    {
        
        /// <remarks/>
        private string path;
        
        public TargetTypeGetFrameworkSdkPath()
        {
        }
        
        public TargetTypeGetFrameworkSdkPath(string path)
        {
            this.path = path;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Path")]
        public string Path
        {
            get
            {
                return this.path;
            }
            set
            {
                if ((this.path != value))
                {
                    this.path = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeLC")]
    [System.Xml.Serialization.XmlRootAttribute("LC", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeLC")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeLC : TaskType
    {
        
        /// <remarks/>
        private string licenseTarget;
        
        /// <remarks/>
        private string noLogo;
        
        /// <remarks/>
        private string outputDirectory;
        
        /// <remarks/>
        private string outputLicense;
        
        /// <remarks/>
        private string referencedAssemblies;
        
        /// <remarks/>
        private string sources;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        public TargetTypeLC()
        {
        }
        
        public TargetTypeLC(string licenseTarget, string noLogo, string outputDirectory, string outputLicense, string referencedAssemblies, string sources, string timeout, string toolPath)
        {
            this.licenseTarget = licenseTarget;
            this.noLogo = noLogo;
            this.outputDirectory = outputDirectory;
            this.outputLicense = outputLicense;
            this.referencedAssemblies = referencedAssemblies;
            this.sources = sources;
            this.timeout = timeout;
            this.toolPath = toolPath;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LicenseTarget")]
        public string LicenseTarget
        {
            get
            {
                return this.licenseTarget;
            }
            set
            {
                if ((this.licenseTarget != value))
                {
                    this.licenseTarget = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoLogo")]
        public string NoLogo
        {
            get
            {
                return this.noLogo;
            }
            set
            {
                if ((this.noLogo != value))
                {
                    this.noLogo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputDirectory")]
        public string OutputDirectory
        {
            get
            {
                return this.outputDirectory;
            }
            set
            {
                if ((this.outputDirectory != value))
                {
                    this.outputDirectory = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputLicense")]
        public string OutputLicense
        {
            get
            {
                return this.outputLicense;
            }
            set
            {
                if ((this.outputLicense != value))
                {
                    this.outputLicense = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ReferencedAssemblies")]
        public string ReferencedAssemblies
        {
            get
            {
                return this.referencedAssemblies;
            }
            set
            {
                if ((this.referencedAssemblies != value))
                {
                    this.referencedAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Sources")]
        public string Sources
        {
            get
            {
                return this.sources;
            }
            set
            {
                if ((this.sources != value))
                {
                    this.sources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeMSBuild")]
    [System.Xml.Serialization.XmlRootAttribute("MSBuild", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeMSBuild")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeMSBuild : TaskType
    {
        
        /// <remarks/>
        private string projects;
        
        /// <remarks/>
        private string properties;
        
        /// <remarks/>
        private string rebaseOutputs;
        
        /// <remarks/>
        private string runEachTargetSeparately;
        
        /// <remarks/>
        private string stopOnFirstFailure;
        
        /// <remarks/>
        private string targets;
        
        public TargetTypeMSBuild()
        {
        }
        
        public TargetTypeMSBuild(string projects, string properties, string rebaseOutputs, string runEachTargetSeparately, string stopOnFirstFailure, string targets)
        {
            this.projects = projects;
            this.properties = properties;
            this.rebaseOutputs = rebaseOutputs;
            this.runEachTargetSeparately = runEachTargetSeparately;
            this.stopOnFirstFailure = stopOnFirstFailure;
            this.targets = targets;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Projects")]
        public string Projects
        {
            get
            {
                return this.projects;
            }
            set
            {
                if ((this.projects != value))
                {
                    this.projects = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Properties")]
        public string Properties
        {
            get
            {
                return this.properties;
            }
            set
            {
                if ((this.properties != value))
                {
                    this.properties = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RebaseOutputs")]
        public string RebaseOutputs
        {
            get
            {
                return this.rebaseOutputs;
            }
            set
            {
                if ((this.rebaseOutputs != value))
                {
                    this.rebaseOutputs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RunEachTargetSeparately")]
        public string RunEachTargetSeparately
        {
            get
            {
                return this.runEachTargetSeparately;
            }
            set
            {
                if ((this.runEachTargetSeparately != value))
                {
                    this.runEachTargetSeparately = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StopOnFirstFailure")]
        public string StopOnFirstFailure
        {
            get
            {
                return this.stopOnFirstFailure;
            }
            set
            {
                if ((this.stopOnFirstFailure != value))
                {
                    this.stopOnFirstFailure = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Targets")]
        public string Targets
        {
            get
            {
                return this.targets;
            }
            set
            {
                if ((this.targets != value))
                {
                    this.targets = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeMakeDir")]
    [System.Xml.Serialization.XmlRootAttribute("MakeDir", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeMakeDir")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeMakeDir : TaskType
    {
        
        /// <remarks/>
        private string directories;
        
        public TargetTypeMakeDir()
        {
        }
        
        public TargetTypeMakeDir(string directories)
        {
            this.directories = directories;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Directories")]
        public string Directories
        {
            get
            {
                return this.directories;
            }
            set
            {
                if ((this.directories != value))
                {
                    this.directories = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeMessage")]
    [System.Xml.Serialization.XmlRootAttribute("Message", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeMessage")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeMessage : TaskType
    {
        
        /// <remarks/>
        private string importance;
        
        /// <remarks/>
        private string text;
        
        public TargetTypeMessage()
        {
        }
        
        public TargetTypeMessage(string importance, string text)
        {
            this.importance = importance;
            this.text = text;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Importance")]
        public string Importance
        {
            get
            {
                return this.importance;
            }
            set
            {
                if ((this.importance != value))
                {
                    this.importance = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Text")]
        public string Text
        {
            get
            {
                return this.text;
            }
            set
            {
                if ((this.text != value))
                {
                    this.text = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeReadLinesFromFile")]
    [System.Xml.Serialization.XmlRootAttribute("ReadLinesFromFile", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeReadLinesFromFile")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeReadLinesFromFile : TaskType
    {
        
        /// <remarks/>
        private string file;
        
        /// <remarks/>
        private string lines;
        
        public TargetTypeReadLinesFromFile()
        {
        }
        
        public TargetTypeReadLinesFromFile(string file, string lines)
        {
            this.file = file;
            this.lines = lines;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="File")]
        public string File
        {
            get
            {
                return this.file;
            }
            set
            {
                if ((this.file != value))
                {
                    this.file = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Lines")]
        public string Lines
        {
            get
            {
                return this.lines;
            }
            set
            {
                if ((this.lines != value))
                {
                    this.lines = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeRegisterAssembly")]
    [System.Xml.Serialization.XmlRootAttribute("RegisterAssembly", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeRegisterAssembly")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeRegisterAssembly : TaskType
    {
        
        /// <remarks/>
        private string assemblies;
        
        /// <remarks/>
        private string assemblyListFile;
        
        /// <remarks/>
        private string createCodeBase;
        
        /// <remarks/>
        private string typeLibFiles;
        
        public TargetTypeRegisterAssembly()
        {
        }
        
        public TargetTypeRegisterAssembly(string assemblies, string assemblyListFile, string createCodeBase, string typeLibFiles)
        {
            this.assemblies = assemblies;
            this.assemblyListFile = assemblyListFile;
            this.createCodeBase = createCodeBase;
            this.typeLibFiles = typeLibFiles;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Assemblies")]
        public string Assemblies
        {
            get
            {
                return this.assemblies;
            }
            set
            {
                if ((this.assemblies != value))
                {
                    this.assemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyListFile")]
        public string AssemblyListFile
        {
            get
            {
                return this.assemblyListFile;
            }
            set
            {
                if ((this.assemblyListFile != value))
                {
                    this.assemblyListFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CreateCodeBase")]
        public string CreateCodeBase
        {
            get
            {
                return this.createCodeBase;
            }
            set
            {
                if ((this.createCodeBase != value))
                {
                    this.createCodeBase = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TypeLibFiles")]
        public string TypeLibFiles
        {
            get
            {
                return this.typeLibFiles;
            }
            set
            {
                if ((this.typeLibFiles != value))
                {
                    this.typeLibFiles = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeRemoveDir")]
    [System.Xml.Serialization.XmlRootAttribute("RemoveDir", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeRemoveDir")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeRemoveDir : TaskType
    {
        
        /// <remarks/>
        private string directories;
        
        /// <remarks/>
        private string removedDirectories;
        
        public TargetTypeRemoveDir()
        {
        }
        
        public TargetTypeRemoveDir(string directories, string removedDirectories)
        {
            this.directories = directories;
            this.removedDirectories = removedDirectories;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Directories")]
        public string Directories
        {
            get
            {
                return this.directories;
            }
            set
            {
                if ((this.directories != value))
                {
                    this.directories = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RemovedDirectories")]
        public string RemovedDirectories
        {
            get
            {
                return this.removedDirectories;
            }
            set
            {
                if ((this.removedDirectories != value))
                {
                    this.removedDirectories = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeRemoveDuplicates")]
    [System.Xml.Serialization.XmlRootAttribute("RemoveDuplicates", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeRemoveDuplicates")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeRemoveDuplicates : TaskType
    {
        
        /// <remarks/>
        private string filtered;
        
        /// <remarks/>
        private string inputs;
        
        public TargetTypeRemoveDuplicates()
        {
        }
        
        public TargetTypeRemoveDuplicates(string filtered, string inputs)
        {
            this.filtered = filtered;
            this.inputs = inputs;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Filtered")]
        public string Filtered
        {
            get
            {
                return this.filtered;
            }
            set
            {
                if ((this.filtered != value))
                {
                    this.filtered = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Inputs")]
        public string Inputs
        {
            get
            {
                return this.inputs;
            }
            set
            {
                if ((this.inputs != value))
                {
                    this.inputs = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeResolveAssemblyReference")]
    [System.Xml.Serialization.XmlRootAttribute("ResolveAssemblyReference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeResolveAssemblyReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeResolveAssemblyReference : TaskType
    {
        
        /// <remarks/>
        private string allowedAssemblyExtensions;
        
        /// <remarks/>
        private string appConfigFile;
        
        /// <remarks/>
        private string assemblies;
        
        /// <remarks/>
        private string assemblyFiles;
        
        /// <remarks/>
        private string autoUnify;
        
        /// <remarks/>
        private string candidateAssemblyFiles;
        
        /// <remarks/>
        private string filesWritten;
        
        /// <remarks/>
        private string findDependencies;
        
        /// <remarks/>
        private string findRelatedFiles;
        
        /// <remarks/>
        private string findSatellites;
        
        /// <remarks/>
        private string findSerializationAssemblies;
        
        /// <remarks/>
        private string installedAssemblyTables;
        
        /// <remarks/>
        private string searchPaths;
        
        /// <remarks/>
        private string silent;
        
        /// <remarks/>
        private string stateFile;
        
        /// <remarks/>
        private string targetFrameworkDirectories;
        
        /// <remarks/>
        private string targetProcessorArchitecture;
        
        public TargetTypeResolveAssemblyReference()
        {
        }
        
        public TargetTypeResolveAssemblyReference(
                    string allowedAssemblyExtensions, 
                    string appConfigFile, 
                    string assemblies, 
                    string assemblyFiles, 
                    string autoUnify, 
                    string candidateAssemblyFiles, 
                    string filesWritten, 
                    string findDependencies, 
                    string findRelatedFiles, 
                    string findSatellites, 
                    string findSerializationAssemblies, 
                    string installedAssemblyTables, 
                    string searchPaths, 
                    string silent, 
                    string stateFile, 
                    string targetFrameworkDirectories, 
                    string targetProcessorArchitecture)
        {
            this.allowedAssemblyExtensions = allowedAssemblyExtensions;
            this.appConfigFile = appConfigFile;
            this.assemblies = assemblies;
            this.assemblyFiles = assemblyFiles;
            this.autoUnify = autoUnify;
            this.candidateAssemblyFiles = candidateAssemblyFiles;
            this.filesWritten = filesWritten;
            this.findDependencies = findDependencies;
            this.findRelatedFiles = findRelatedFiles;
            this.findSatellites = findSatellites;
            this.findSerializationAssemblies = findSerializationAssemblies;
            this.installedAssemblyTables = installedAssemblyTables;
            this.searchPaths = searchPaths;
            this.silent = silent;
            this.stateFile = stateFile;
            this.targetFrameworkDirectories = targetFrameworkDirectories;
            this.targetProcessorArchitecture = targetProcessorArchitecture;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AllowedAssemblyExtensions")]
        public string AllowedAssemblyExtensions
        {
            get
            {
                return this.allowedAssemblyExtensions;
            }
            set
            {
                if ((this.allowedAssemblyExtensions != value))
                {
                    this.allowedAssemblyExtensions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AppConfigFile")]
        public string AppConfigFile
        {
            get
            {
                return this.appConfigFile;
            }
            set
            {
                if ((this.appConfigFile != value))
                {
                    this.appConfigFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Assemblies")]
        public string Assemblies
        {
            get
            {
                return this.assemblies;
            }
            set
            {
                if ((this.assemblies != value))
                {
                    this.assemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyFiles")]
        public string AssemblyFiles
        {
            get
            {
                return this.assemblyFiles;
            }
            set
            {
                if ((this.assemblyFiles != value))
                {
                    this.assemblyFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AutoUnify")]
        public string AutoUnify
        {
            get
            {
                return this.autoUnify;
            }
            set
            {
                if ((this.autoUnify != value))
                {
                    this.autoUnify = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CandidateAssemblyFiles")]
        public string CandidateAssemblyFiles
        {
            get
            {
                return this.candidateAssemblyFiles;
            }
            set
            {
                if ((this.candidateAssemblyFiles != value))
                {
                    this.candidateAssemblyFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FilesWritten")]
        public string FilesWritten
        {
            get
            {
                return this.filesWritten;
            }
            set
            {
                if ((this.filesWritten != value))
                {
                    this.filesWritten = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FindDependencies")]
        public string FindDependencies
        {
            get
            {
                return this.findDependencies;
            }
            set
            {
                if ((this.findDependencies != value))
                {
                    this.findDependencies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FindRelatedFiles")]
        public string FindRelatedFiles
        {
            get
            {
                return this.findRelatedFiles;
            }
            set
            {
                if ((this.findRelatedFiles != value))
                {
                    this.findRelatedFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FindSatellites")]
        public string FindSatellites
        {
            get
            {
                return this.findSatellites;
            }
            set
            {
                if ((this.findSatellites != value))
                {
                    this.findSatellites = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FindSerializationAssemblies")]
        public string FindSerializationAssemblies
        {
            get
            {
                return this.findSerializationAssemblies;
            }
            set
            {
                if ((this.findSerializationAssemblies != value))
                {
                    this.findSerializationAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InstalledAssemblyTables")]
        public string InstalledAssemblyTables
        {
            get
            {
                return this.installedAssemblyTables;
            }
            set
            {
                if ((this.installedAssemblyTables != value))
                {
                    this.installedAssemblyTables = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SearchPaths")]
        public string SearchPaths
        {
            get
            {
                return this.searchPaths;
            }
            set
            {
                if ((this.searchPaths != value))
                {
                    this.searchPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Silent")]
        public string Silent
        {
            get
            {
                return this.silent;
            }
            set
            {
                if ((this.silent != value))
                {
                    this.silent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StateFile")]
        public string StateFile
        {
            get
            {
                return this.stateFile;
            }
            set
            {
                if ((this.stateFile != value))
                {
                    this.stateFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetFrameworkDirectories")]
        public string TargetFrameworkDirectories
        {
            get
            {
                return this.targetFrameworkDirectories;
            }
            set
            {
                if ((this.targetFrameworkDirectories != value))
                {
                    this.targetFrameworkDirectories = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetProcessorArchitecture")]
        public string TargetProcessorArchitecture
        {
            get
            {
                return this.targetProcessorArchitecture;
            }
            set
            {
                if ((this.targetProcessorArchitecture != value))
                {
                    this.targetProcessorArchitecture = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeResolveComReference")]
    [System.Xml.Serialization.XmlRootAttribute("ResolveComReference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeResolveComReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeResolveComReference : TaskType
    {
        
        /// <remarks/>
        private string delaySign;
        
        /// <remarks/>
        private string keyContainer;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string noClassMembers;
        
        /// <remarks/>
        private string resolvedAssemblyReferences;
        
        /// <remarks/>
        private string resolvedFiles;
        
        /// <remarks/>
        private string resolvedModules;
        
        /// <remarks/>
        private string stateFile;
        
        /// <remarks/>
        private string typeLibFiles;
        
        /// <remarks/>
        private string typeLibNames;
        
        /// <remarks/>
        private string wrapperOutputDirectory;
        
        public TargetTypeResolveComReference()
        {
        }
        
        public TargetTypeResolveComReference(string delaySign, string keyContainer, string keyFile, string noClassMembers, string resolvedAssemblyReferences, string resolvedFiles, string resolvedModules, string stateFile, string typeLibFiles, string typeLibNames, string wrapperOutputDirectory)
        {
            this.delaySign = delaySign;
            this.keyContainer = keyContainer;
            this.keyFile = keyFile;
            this.noClassMembers = noClassMembers;
            this.resolvedAssemblyReferences = resolvedAssemblyReferences;
            this.resolvedFiles = resolvedFiles;
            this.resolvedModules = resolvedModules;
            this.stateFile = stateFile;
            this.typeLibFiles = typeLibFiles;
            this.typeLibNames = typeLibNames;
            this.wrapperOutputDirectory = wrapperOutputDirectory;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DelaySign")]
        public string DelaySign
        {
            get
            {
                return this.delaySign;
            }
            set
            {
                if ((this.delaySign != value))
                {
                    this.delaySign = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyContainer")]
        public string KeyContainer
        {
            get
            {
                return this.keyContainer;
            }
            set
            {
                if ((this.keyContainer != value))
                {
                    this.keyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoClassMembers")]
        public string NoClassMembers
        {
            get
            {
                return this.noClassMembers;
            }
            set
            {
                if ((this.noClassMembers != value))
                {
                    this.noClassMembers = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedAssemblyReferences")]
        public string ResolvedAssemblyReferences
        {
            get
            {
                return this.resolvedAssemblyReferences;
            }
            set
            {
                if ((this.resolvedAssemblyReferences != value))
                {
                    this.resolvedAssemblyReferences = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedFiles")]
        public string ResolvedFiles
        {
            get
            {
                return this.resolvedFiles;
            }
            set
            {
                if ((this.resolvedFiles != value))
                {
                    this.resolvedFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedModules")]
        public string ResolvedModules
        {
            get
            {
                return this.resolvedModules;
            }
            set
            {
                if ((this.resolvedModules != value))
                {
                    this.resolvedModules = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="StateFile")]
        public string StateFile
        {
            get
            {
                return this.stateFile;
            }
            set
            {
                if ((this.stateFile != value))
                {
                    this.stateFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TypeLibFiles")]
        public string TypeLibFiles
        {
            get
            {
                return this.typeLibFiles;
            }
            set
            {
                if ((this.typeLibFiles != value))
                {
                    this.typeLibFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TypeLibNames")]
        public string TypeLibNames
        {
            get
            {
                return this.typeLibNames;
            }
            set
            {
                if ((this.typeLibNames != value))
                {
                    this.typeLibNames = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WrapperOutputDirectory")]
        public string WrapperOutputDirectory
        {
            get
            {
                return this.wrapperOutputDirectory;
            }
            set
            {
                if ((this.wrapperOutputDirectory != value))
                {
                    this.wrapperOutputDirectory = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeResolveKeySource")]
    [System.Xml.Serialization.XmlRootAttribute("ResolveKeySource", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeResolveKeySource")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeResolveKeySource : TaskType
    {
        
        /// <remarks/>
        private string autoClosePasswordPromptShow;
        
        /// <remarks/>
        private string autoClosePasswordPromptTimeout;
        
        /// <remarks/>
        private string certificateFile;
        
        /// <remarks/>
        private string certificateThumbprint;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string resolvedKeyContainer;
        
        /// <remarks/>
        private string resolvedKeyFile;
        
        /// <remarks/>
        private string resolvedThumbprint;
        
        /// <remarks/>
        private string showImportDialogDespitePreviousFailures;
        
        /// <remarks/>
        private string suppressAutoClosePasswordPrompt;
        
        public TargetTypeResolveKeySource()
        {
        }
        
        public TargetTypeResolveKeySource(string autoClosePasswordPromptShow, string autoClosePasswordPromptTimeout, string certificateFile, string certificateThumbprint, string keyFile, string resolvedKeyContainer, string resolvedKeyFile, string resolvedThumbprint, string showImportDialogDespitePreviousFailures, string suppressAutoClosePasswordPrompt)
        {
            this.autoClosePasswordPromptShow = autoClosePasswordPromptShow;
            this.autoClosePasswordPromptTimeout = autoClosePasswordPromptTimeout;
            this.certificateFile = certificateFile;
            this.certificateThumbprint = certificateThumbprint;
            this.keyFile = keyFile;
            this.resolvedKeyContainer = resolvedKeyContainer;
            this.resolvedKeyFile = resolvedKeyFile;
            this.resolvedThumbprint = resolvedThumbprint;
            this.showImportDialogDespitePreviousFailures = showImportDialogDespitePreviousFailures;
            this.suppressAutoClosePasswordPrompt = suppressAutoClosePasswordPrompt;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AutoClosePasswordPromptShow")]
        public string AutoClosePasswordPromptShow
        {
            get
            {
                return this.autoClosePasswordPromptShow;
            }
            set
            {
                if ((this.autoClosePasswordPromptShow != value))
                {
                    this.autoClosePasswordPromptShow = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AutoClosePasswordPromptTimeout")]
        public string AutoClosePasswordPromptTimeout
        {
            get
            {
                return this.autoClosePasswordPromptTimeout;
            }
            set
            {
                if ((this.autoClosePasswordPromptTimeout != value))
                {
                    this.autoClosePasswordPromptTimeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CertificateFile")]
        public string CertificateFile
        {
            get
            {
                return this.certificateFile;
            }
            set
            {
                if ((this.certificateFile != value))
                {
                    this.certificateFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CertificateThumbprint")]
        public string CertificateThumbprint
        {
            get
            {
                return this.certificateThumbprint;
            }
            set
            {
                if ((this.certificateThumbprint != value))
                {
                    this.certificateThumbprint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedKeyContainer")]
        public string ResolvedKeyContainer
        {
            get
            {
                return this.resolvedKeyContainer;
            }
            set
            {
                if ((this.resolvedKeyContainer != value))
                {
                    this.resolvedKeyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedKeyFile")]
        public string ResolvedKeyFile
        {
            get
            {
                return this.resolvedKeyFile;
            }
            set
            {
                if ((this.resolvedKeyFile != value))
                {
                    this.resolvedKeyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedThumbprint")]
        public string ResolvedThumbprint
        {
            get
            {
                return this.resolvedThumbprint;
            }
            set
            {
                if ((this.resolvedThumbprint != value))
                {
                    this.resolvedThumbprint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ShowImportDialogDespitePreviousFailures")]
        public string ShowImportDialogDespitePreviousFailures
        {
            get
            {
                return this.showImportDialogDespitePreviousFailures;
            }
            set
            {
                if ((this.showImportDialogDespitePreviousFailures != value))
                {
                    this.showImportDialogDespitePreviousFailures = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SuppressAutoClosePasswordPrompt")]
        public string SuppressAutoClosePasswordPrompt
        {
            get
            {
                return this.suppressAutoClosePasswordPrompt;
            }
            set
            {
                if ((this.suppressAutoClosePasswordPrompt != value))
                {
                    this.suppressAutoClosePasswordPrompt = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeResolveManifestFiles")]
    [System.Xml.Serialization.XmlRootAttribute("ResolveManifestFiles", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeResolveManifestFiles")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeResolveManifestFiles : TaskType
    {
        
        /// <remarks/>
        private string entryPoint;
        
        /// <remarks/>
        private string extraFiles;
        
        /// <remarks/>
        private string files;
        
        /// <remarks/>
        private string managedAssemblies;
        
        /// <remarks/>
        private string nativeAssemblies;
        
        /// <remarks/>
        private string outputAssemblies;
        
        /// <remarks/>
        private string outputFiles;
        
        /// <remarks/>
        private string publishFiles;
        
        /// <remarks/>
        private string satelliteAssemblies;
        
        /// <remarks/>
        private string targetCulture;
        
        public TargetTypeResolveManifestFiles()
        {
        }
        
        public TargetTypeResolveManifestFiles(string entryPoint, string extraFiles, string files, string managedAssemblies, string nativeAssemblies, string outputAssemblies, string outputFiles, string publishFiles, string satelliteAssemblies, string targetCulture)
        {
            this.entryPoint = entryPoint;
            this.extraFiles = extraFiles;
            this.files = files;
            this.managedAssemblies = managedAssemblies;
            this.nativeAssemblies = nativeAssemblies;
            this.outputAssemblies = outputAssemblies;
            this.outputFiles = outputFiles;
            this.publishFiles = publishFiles;
            this.satelliteAssemblies = satelliteAssemblies;
            this.targetCulture = targetCulture;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EntryPoint")]
        public string EntryPoint
        {
            get
            {
                return this.entryPoint;
            }
            set
            {
                if ((this.entryPoint != value))
                {
                    this.entryPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ExtraFiles")]
        public string ExtraFiles
        {
            get
            {
                return this.extraFiles;
            }
            set
            {
                if ((this.extraFiles != value))
                {
                    this.extraFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Files")]
        public string Files
        {
            get
            {
                return this.files;
            }
            set
            {
                if ((this.files != value))
                {
                    this.files = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ManagedAssemblies")]
        public string ManagedAssemblies
        {
            get
            {
                return this.managedAssemblies;
            }
            set
            {
                if ((this.managedAssemblies != value))
                {
                    this.managedAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NativeAssemblies")]
        public string NativeAssemblies
        {
            get
            {
                return this.nativeAssemblies;
            }
            set
            {
                if ((this.nativeAssemblies != value))
                {
                    this.nativeAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputAssemblies")]
        public string OutputAssemblies
        {
            get
            {
                return this.outputAssemblies;
            }
            set
            {
                if ((this.outputAssemblies != value))
                {
                    this.outputAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputFiles")]
        public string OutputFiles
        {
            get
            {
                return this.outputFiles;
            }
            set
            {
                if ((this.outputFiles != value))
                {
                    this.outputFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PublishFiles")]
        public string PublishFiles
        {
            get
            {
                return this.publishFiles;
            }
            set
            {
                if ((this.publishFiles != value))
                {
                    this.publishFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SatelliteAssemblies")]
        public string SatelliteAssemblies
        {
            get
            {
                return this.satelliteAssemblies;
            }
            set
            {
                if ((this.satelliteAssemblies != value))
                {
                    this.satelliteAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetCulture")]
        public string TargetCulture
        {
            get
            {
                return this.targetCulture;
            }
            set
            {
                if ((this.targetCulture != value))
                {
                    this.targetCulture = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeResolveNativeReference")]
    [System.Xml.Serialization.XmlRootAttribute("ResolveNativeReference", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeResolveNativeReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeResolveNativeReference : TaskType
    {
        
        /// <remarks/>
        private string additionalSearchPaths;
        
        /// <remarks/>
        private string containedComComponents;
        
        /// <remarks/>
        private string containedLooseEtcFiles;
        
        /// <remarks/>
        private string containedLooseTlbFiles;
        
        /// <remarks/>
        private string containedPrerequisiteAssemblies;
        
        /// <remarks/>
        private string containedTypeLibraries;
        
        /// <remarks/>
        private string containingReferenceFiles;
        
        /// <remarks/>
        private string nativeReferences;
        
        public TargetTypeResolveNativeReference()
        {
        }
        
        public TargetTypeResolveNativeReference(string additionalSearchPaths, string containedComComponents, string containedLooseEtcFiles, string containedLooseTlbFiles, string containedPrerequisiteAssemblies, string containedTypeLibraries, string containingReferenceFiles, string nativeReferences)
        {
            this.additionalSearchPaths = additionalSearchPaths;
            this.containedComComponents = containedComComponents;
            this.containedLooseEtcFiles = containedLooseEtcFiles;
            this.containedLooseTlbFiles = containedLooseTlbFiles;
            this.containedPrerequisiteAssemblies = containedPrerequisiteAssemblies;
            this.containedTypeLibraries = containedTypeLibraries;
            this.containingReferenceFiles = containingReferenceFiles;
            this.nativeReferences = nativeReferences;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AdditionalSearchPaths")]
        public string AdditionalSearchPaths
        {
            get
            {
                return this.additionalSearchPaths;
            }
            set
            {
                if ((this.additionalSearchPaths != value))
                {
                    this.additionalSearchPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContainedComComponents")]
        public string ContainedComComponents
        {
            get
            {
                return this.containedComComponents;
            }
            set
            {
                if ((this.containedComComponents != value))
                {
                    this.containedComComponents = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContainedLooseEtcFiles")]
        public string ContainedLooseEtcFiles
        {
            get
            {
                return this.containedLooseEtcFiles;
            }
            set
            {
                if ((this.containedLooseEtcFiles != value))
                {
                    this.containedLooseEtcFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContainedLooseTlbFiles")]
        public string ContainedLooseTlbFiles
        {
            get
            {
                return this.containedLooseTlbFiles;
            }
            set
            {
                if ((this.containedLooseTlbFiles != value))
                {
                    this.containedLooseTlbFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContainedPrerequisiteAssemblies")]
        public string ContainedPrerequisiteAssemblies
        {
            get
            {
                return this.containedPrerequisiteAssemblies;
            }
            set
            {
                if ((this.containedPrerequisiteAssemblies != value))
                {
                    this.containedPrerequisiteAssemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContainedTypeLibraries")]
        public string ContainedTypeLibraries
        {
            get
            {
                return this.containedTypeLibraries;
            }
            set
            {
                if ((this.containedTypeLibraries != value))
                {
                    this.containedTypeLibraries = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ContainingReferenceFiles")]
        public string ContainingReferenceFiles
        {
            get
            {
                return this.containingReferenceFiles;
            }
            set
            {
                if ((this.containingReferenceFiles != value))
                {
                    this.containingReferenceFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NativeReferences")]
        public string NativeReferences
        {
            get
            {
                return this.nativeReferences;
            }
            set
            {
                if ((this.nativeReferences != value))
                {
                    this.nativeReferences = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeResolveNonMSBuildProjectOutput")]
    [System.Xml.Serialization.XmlRootAttribute("ResolveNonMSBuildProjectOutput", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeResolveNonMSBuildProjectOutput")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeResolveNonMSBuildProjectOutput : TaskType
    {
        
        /// <remarks/>
        private string preresolvedProjectOutputs;
        
        /// <remarks/>
        private string projectReferences;
        
        /// <remarks/>
        private string resolvedOutputPaths;
        
        /// <remarks/>
        private string unresolvedProjectReferences;
        
        public TargetTypeResolveNonMSBuildProjectOutput()
        {
        }
        
        public TargetTypeResolveNonMSBuildProjectOutput(string preresolvedProjectOutputs, string projectReferences, string resolvedOutputPaths, string unresolvedProjectReferences)
        {
            this.preresolvedProjectOutputs = preresolvedProjectOutputs;
            this.projectReferences = projectReferences;
            this.resolvedOutputPaths = resolvedOutputPaths;
            this.unresolvedProjectReferences = unresolvedProjectReferences;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="PreresolvedProjectOutputs")]
        public string PreresolvedProjectOutputs
        {
            get
            {
                return this.preresolvedProjectOutputs;
            }
            set
            {
                if ((this.preresolvedProjectOutputs != value))
                {
                    this.preresolvedProjectOutputs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ProjectReferences")]
        public string ProjectReferences
        {
            get
            {
                return this.projectReferences;
            }
            set
            {
                if ((this.projectReferences != value))
                {
                    this.projectReferences = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedOutputPaths")]
        public string ResolvedOutputPaths
        {
            get
            {
                return this.resolvedOutputPaths;
            }
            set
            {
                if ((this.resolvedOutputPaths != value))
                {
                    this.resolvedOutputPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UnresolvedProjectReferences")]
        public string UnresolvedProjectReferences
        {
            get
            {
                return this.unresolvedProjectReferences;
            }
            set
            {
                if ((this.unresolvedProjectReferences != value))
                {
                    this.unresolvedProjectReferences = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeResolveVCProjectOutput")]
    [System.Xml.Serialization.XmlRootAttribute("ResolveVCProjectOutput", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeResolveVCProjectOutput")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeResolveVCProjectOutput : TaskType
    {
        
        /// <remarks/>
        private string configuration;
        
        /// <remarks/>
        private string @override;
        
        /// <remarks/>
        private string projectReferences;
        
        /// <remarks/>
        private string resolvedImportLibraryPaths;
        
        /// <remarks/>
        private string resolvedOutputPaths;
        
        /// <remarks/>
        private string solutionFile;
        
        public TargetTypeResolveVCProjectOutput()
        {
        }
        
        public TargetTypeResolveVCProjectOutput(string configuration, string @override, string projectReferences, string resolvedImportLibraryPaths, string resolvedOutputPaths, string solutionFile)
        {
            this.configuration = configuration;
            this.@override = @override;
            this.projectReferences = projectReferences;
            this.resolvedImportLibraryPaths = resolvedImportLibraryPaths;
            this.resolvedOutputPaths = resolvedOutputPaths;
            this.solutionFile = solutionFile;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Configuration")]
        public string Configuration
        {
            get
            {
                return this.configuration;
            }
            set
            {
                if ((this.configuration != value))
                {
                    this.configuration = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Override")]
        public string Override
        {
            get
            {
                return this.@override;
            }
            set
            {
                if ((this.@override != value))
                {
                    this.@override = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ProjectReferences")]
        public string ProjectReferences
        {
            get
            {
                return this.projectReferences;
            }
            set
            {
                if ((this.projectReferences != value))
                {
                    this.projectReferences = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedImportLibraryPaths")]
        public string ResolvedImportLibraryPaths
        {
            get
            {
                return this.resolvedImportLibraryPaths;
            }
            set
            {
                if ((this.resolvedImportLibraryPaths != value))
                {
                    this.resolvedImportLibraryPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResolvedOutputPaths")]
        public string ResolvedOutputPaths
        {
            get
            {
                return this.resolvedOutputPaths;
            }
            set
            {
                if ((this.resolvedOutputPaths != value))
                {
                    this.resolvedOutputPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SolutionFile")]
        public string SolutionFile
        {
            get
            {
                return this.solutionFile;
            }
            set
            {
                if ((this.solutionFile != value))
                {
                    this.solutionFile = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeSGen")]
    [System.Xml.Serialization.XmlRootAttribute("SGen", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeSGen")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeSGen : TaskType
    {
        
        /// <remarks/>
        private string buildAssemblyName;
        
        /// <remarks/>
        private string buildAssemblyPath;
        
        /// <remarks/>
        private string delaySign;
        
        /// <remarks/>
        private string keyContainer;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string references;
        
        /// <remarks/>
        private string serializationAssembly;
        
        /// <remarks/>
        private string shouldGenerateSerializer;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string useProxyTypes;
        
        public TargetTypeSGen()
        {
        }
        
        public TargetTypeSGen(string buildAssemblyName, string buildAssemblyPath, string delaySign, string keyContainer, string keyFile, string references, string serializationAssembly, string shouldGenerateSerializer, string timeout, string toolPath, string useProxyTypes)
        {
            this.buildAssemblyName = buildAssemblyName;
            this.buildAssemblyPath = buildAssemblyPath;
            this.delaySign = delaySign;
            this.keyContainer = keyContainer;
            this.keyFile = keyFile;
            this.references = references;
            this.serializationAssembly = serializationAssembly;
            this.shouldGenerateSerializer = shouldGenerateSerializer;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.useProxyTypes = useProxyTypes;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BuildAssemblyName")]
        public string BuildAssemblyName
        {
            get
            {
                return this.buildAssemblyName;
            }
            set
            {
                if ((this.buildAssemblyName != value))
                {
                    this.buildAssemblyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BuildAssemblyPath")]
        public string BuildAssemblyPath
        {
            get
            {
                return this.buildAssemblyPath;
            }
            set
            {
                if ((this.buildAssemblyPath != value))
                {
                    this.buildAssemblyPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DelaySign")]
        public string DelaySign
        {
            get
            {
                return this.delaySign;
            }
            set
            {
                if ((this.delaySign != value))
                {
                    this.delaySign = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyContainer")]
        public string KeyContainer
        {
            get
            {
                return this.keyContainer;
            }
            set
            {
                if ((this.keyContainer != value))
                {
                    this.keyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="References")]
        public string References
        {
            get
            {
                return this.references;
            }
            set
            {
                if ((this.references != value))
                {
                    this.references = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SerializationAssembly")]
        public string SerializationAssembly
        {
            get
            {
                return this.serializationAssembly;
            }
            set
            {
                if ((this.serializationAssembly != value))
                {
                    this.serializationAssembly = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ShouldGenerateSerializer")]
        public string ShouldGenerateSerializer
        {
            get
            {
                return this.shouldGenerateSerializer;
            }
            set
            {
                if ((this.shouldGenerateSerializer != value))
                {
                    this.shouldGenerateSerializer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UseProxyTypes")]
        public string UseProxyTypes
        {
            get
            {
                return this.useProxyTypes;
            }
            set
            {
                if ((this.useProxyTypes != value))
                {
                    this.useProxyTypes = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeSignFile")]
    [System.Xml.Serialization.XmlRootAttribute("SignFile", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeSignFile")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeSignFile : TaskType
    {
        
        /// <remarks/>
        private string certificateThumbprint;
        
        /// <remarks/>
        private string signingTarget;
        
        /// <remarks/>
        private string timestampUrl;
        
        public TargetTypeSignFile()
        {
        }
        
        public TargetTypeSignFile(string certificateThumbprint, string signingTarget, string timestampUrl)
        {
            this.certificateThumbprint = certificateThumbprint;
            this.signingTarget = signingTarget;
            this.timestampUrl = timestampUrl;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CertificateThumbprint")]
        public string CertificateThumbprint
        {
            get
            {
                return this.certificateThumbprint;
            }
            set
            {
                if ((this.certificateThumbprint != value))
                {
                    this.certificateThumbprint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SigningTarget")]
        public string SigningTarget
        {
            get
            {
                return this.signingTarget;
            }
            set
            {
                if ((this.signingTarget != value))
                {
                    this.signingTarget = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TimestampUrl")]
        public string TimestampUrl
        {
            get
            {
                return this.timestampUrl;
            }
            set
            {
                if ((this.timestampUrl != value))
                {
                    this.timestampUrl = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeTouch")]
    [System.Xml.Serialization.XmlRootAttribute("Touch", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeTouch")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeTouch : TaskType
    {
        
        /// <remarks/>
        private string alwaysCreate;
        
        /// <remarks/>
        private string files;
        
        /// <remarks/>
        private string forceTouch;
        
        /// <remarks/>
        private string time;
        
        /// <remarks/>
        private string touchedFiles;
        
        public TargetTypeTouch()
        {
        }
        
        public TargetTypeTouch(string alwaysCreate, string files, string forceTouch, string time, string touchedFiles)
        {
            this.alwaysCreate = alwaysCreate;
            this.files = files;
            this.forceTouch = forceTouch;
            this.time = time;
            this.touchedFiles = touchedFiles;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AlwaysCreate")]
        public string AlwaysCreate
        {
            get
            {
                return this.alwaysCreate;
            }
            set
            {
                if ((this.alwaysCreate != value))
                {
                    this.alwaysCreate = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Files")]
        public string Files
        {
            get
            {
                return this.files;
            }
            set
            {
                if ((this.files != value))
                {
                    this.files = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ForceTouch")]
        public string ForceTouch
        {
            get
            {
                return this.forceTouch;
            }
            set
            {
                if ((this.forceTouch != value))
                {
                    this.forceTouch = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Time")]
        public string Time
        {
            get
            {
                return this.time;
            }
            set
            {
                if ((this.time != value))
                {
                    this.time = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TouchedFiles")]
        public string TouchedFiles
        {
            get
            {
                return this.touchedFiles;
            }
            set
            {
                if ((this.touchedFiles != value))
                {
                    this.touchedFiles = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeUnregisterAssembly")]
    [System.Xml.Serialization.XmlRootAttribute("UnregisterAssembly", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeUnregisterAssembly")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeUnregisterAssembly : TaskType
    {
        
        /// <remarks/>
        private string assemblies;
        
        /// <remarks/>
        private string assemblyListFile;
        
        /// <remarks/>
        private string typeLibFiles;
        
        public TargetTypeUnregisterAssembly()
        {
        }
        
        public TargetTypeUnregisterAssembly(string assemblies, string assemblyListFile, string typeLibFiles)
        {
            this.assemblies = assemblies;
            this.assemblyListFile = assemblyListFile;
            this.typeLibFiles = typeLibFiles;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Assemblies")]
        public string Assemblies
        {
            get
            {
                return this.assemblies;
            }
            set
            {
                if ((this.assemblies != value))
                {
                    this.assemblies = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AssemblyListFile")]
        public string AssemblyListFile
        {
            get
            {
                return this.assemblyListFile;
            }
            set
            {
                if ((this.assemblyListFile != value))
                {
                    this.assemblyListFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TypeLibFiles")]
        public string TypeLibFiles
        {
            get
            {
                return this.typeLibFiles;
            }
            set
            {
                if ((this.typeLibFiles != value))
                {
                    this.typeLibFiles = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeUpdateManifest")]
    [System.Xml.Serialization.XmlRootAttribute("UpdateManifest", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeUpdateManifest")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeUpdateManifest : TaskType
    {
        
        /// <remarks/>
        private string applicationManifest;
        
        /// <remarks/>
        private string applicationPath;
        
        /// <remarks/>
        private string inputManifest;
        
        /// <remarks/>
        private string outputManifest;
        
        public TargetTypeUpdateManifest()
        {
        }
        
        public TargetTypeUpdateManifest(string applicationManifest, string applicationPath, string inputManifest, string outputManifest)
        {
            this.applicationManifest = applicationManifest;
            this.applicationPath = applicationPath;
            this.inputManifest = inputManifest;
            this.outputManifest = outputManifest;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ApplicationManifest")]
        public string ApplicationManifest
        {
            get
            {
                return this.applicationManifest;
            }
            set
            {
                if ((this.applicationManifest != value))
                {
                    this.applicationManifest = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ApplicationPath")]
        public string ApplicationPath
        {
            get
            {
                return this.applicationPath;
            }
            set
            {
                if ((this.applicationPath != value))
                {
                    this.applicationPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="InputManifest")]
        public string InputManifest
        {
            get
            {
                return this.inputManifest;
            }
            set
            {
                if ((this.inputManifest != value))
                {
                    this.inputManifest = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputManifest")]
        public string OutputManifest
        {
            get
            {
                return this.outputManifest;
            }
            set
            {
                if ((this.outputManifest != value))
                {
                    this.outputManifest = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeVCBuild")]
    [System.Xml.Serialization.XmlRootAttribute("VCBuild", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeVCBuild")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeVCBuild : TaskType
    {
        
        /// <remarks/>
        private string additionalLibPaths;
        
        /// <remarks/>
        private string additionalOptions;
        
        /// <remarks/>
        private string clean;
        
        /// <remarks/>
        private string configuration;
        
        /// <remarks/>
        private string @override;
        
        /// <remarks/>
        private string platform;
        
        /// <remarks/>
        private string projects;
        
        /// <remarks/>
        private string rebuild;
        
        /// <remarks/>
        private string solutionFile;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string userEnvironment;
        
        public TargetTypeVCBuild()
        {
        }
        
        public TargetTypeVCBuild(string additionalLibPaths, string additionalOptions, string clean, string configuration, string @override, string platform, string projects, string rebuild, string solutionFile, string timeout, string toolPath, string userEnvironment)
        {
            this.additionalLibPaths = additionalLibPaths;
            this.additionalOptions = additionalOptions;
            this.clean = clean;
            this.configuration = configuration;
            this.@override = @override;
            this.platform = platform;
            this.projects = projects;
            this.rebuild = rebuild;
            this.solutionFile = solutionFile;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.userEnvironment = userEnvironment;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AdditionalLibPaths")]
        public string AdditionalLibPaths
        {
            get
            {
                return this.additionalLibPaths;
            }
            set
            {
                if ((this.additionalLibPaths != value))
                {
                    this.additionalLibPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AdditionalOptions")]
        public string AdditionalOptions
        {
            get
            {
                return this.additionalOptions;
            }
            set
            {
                if ((this.additionalOptions != value))
                {
                    this.additionalOptions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Clean")]
        public string Clean
        {
            get
            {
                return this.clean;
            }
            set
            {
                if ((this.clean != value))
                {
                    this.clean = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Configuration")]
        public string Configuration
        {
            get
            {
                return this.configuration;
            }
            set
            {
                if ((this.configuration != value))
                {
                    this.configuration = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Override")]
        public string Override
        {
            get
            {
                return this.@override;
            }
            set
            {
                if ((this.@override != value))
                {
                    this.@override = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Platform")]
        public string Platform
        {
            get
            {
                return this.platform;
            }
            set
            {
                if ((this.platform != value))
                {
                    this.platform = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Projects")]
        public string Projects
        {
            get
            {
                return this.projects;
            }
            set
            {
                if ((this.projects != value))
                {
                    this.projects = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Rebuild")]
        public string Rebuild
        {
            get
            {
                return this.rebuild;
            }
            set
            {
                if ((this.rebuild != value))
                {
                    this.rebuild = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SolutionFile")]
        public string SolutionFile
        {
            get
            {
                return this.solutionFile;
            }
            set
            {
                if ((this.solutionFile != value))
                {
                    this.solutionFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UserEnvironment")]
        public string UserEnvironment
        {
            get
            {
                return this.userEnvironment;
            }
            set
            {
                if ((this.userEnvironment != value))
                {
                    this.userEnvironment = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeVbc")]
    [System.Xml.Serialization.XmlRootAttribute("Vbc", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeVbc")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeVbc : TaskType
    {
        
        /// <remarks/>
        private string additionalLibPaths;
        
        /// <remarks/>
        private string addModules;
        
        /// <remarks/>
        private string baseAddress;
        
        /// <remarks/>
        private string codePage;
        
        /// <remarks/>
        private string debugType;
        
        /// <remarks/>
        private string defineConstants;
        
        /// <remarks/>
        private string delaySign;
        
        /// <remarks/>
        private string disabledWarnings;
        
        /// <remarks/>
        private string documentationFile;
        
        /// <remarks/>
        private string emitDebugInformation;
        
        /// <remarks/>
        private string errorReport;
        
        /// <remarks/>
        private string fileAlignment;
        
        /// <remarks/>
        private string generateDocumentation;
        
        /// <remarks/>
        private string imports;
        
        /// <remarks/>
        private string keyContainer;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string linkResources;
        
        /// <remarks/>
        private string mainEntryPoint;
        
        /// <remarks/>
        private string noConfig;
        
        /// <remarks/>
        private string noLogo;
        
        /// <remarks/>
        private string noStandardLib;
        
        /// <remarks/>
        private string noWarnings;
        
        /// <remarks/>
        private string optimize;
        
        /// <remarks/>
        private string optionCompare;
        
        /// <remarks/>
        private string optionExplicit;
        
        /// <remarks/>
        private string optionStrict;
        
        /// <remarks/>
        private string optionStrictType;
        
        /// <remarks/>
        private string outputAssembly;
        
        /// <remarks/>
        private string platform;
        
        /// <remarks/>
        private string references;
        
        /// <remarks/>
        private string removeIntegerChecks;
        
        /// <remarks/>
        private string resources;
        
        /// <remarks/>
        private string responseFiles;
        
        /// <remarks/>
        private string rootNamespace;
        
        /// <remarks/>
        private string sdkPath;
        
        /// <remarks/>
        private string sources;
        
        /// <remarks/>
        private string targetCompactFramework;
        
        /// <remarks/>
        private string targetType;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string treatWarningsAsErrors;
        
        /// <remarks/>
        private string useHostCompilerIfAvailable;
        
        /// <remarks/>
        private string utf8Output;
        
        /// <remarks/>
        private string verbosity;
        
        /// <remarks/>
        private string warningsAsErrors;
        
        /// <remarks/>
        private string warningsNotAsErrors;
        
        /// <remarks/>
        private string win32Icon;
        
        /// <remarks/>
        private string win32Resource;
        
        public TargetTypeVbc()
        {
        }
        
        public TargetTypeVbc(
                    string additionalLibPaths, 
                    string addModules, 
                    string baseAddress, 
                    string codePage, 
                    string debugType, 
                    string defineConstants, 
                    string delaySign, 
                    string disabledWarnings, 
                    string documentationFile, 
                    string emitDebugInformation, 
                    string errorReport, 
                    string fileAlignment, 
                    string generateDocumentation, 
                    string imports, 
                    string keyContainer, 
                    string keyFile, 
                    string linkResources, 
                    string mainEntryPoint, 
                    string noConfig, 
                    string noLogo, 
                    string noStandardLib, 
                    string noWarnings, 
                    string optimize, 
                    string optionCompare, 
                    string optionExplicit, 
                    string optionStrict, 
                    string optionStrictType, 
                    string outputAssembly, 
                    string platform, 
                    string references, 
                    string removeIntegerChecks, 
                    string resources, 
                    string responseFiles, 
                    string rootNamespace, 
                    string sdkPath, 
                    string sources, 
                    string targetCompactFramework, 
                    string targetType, 
                    string timeout, 
                    string toolPath, 
                    string treatWarningsAsErrors, 
                    string useHostCompilerIfAvailable, 
                    string utf8Output, 
                    string verbosity, 
                    string warningsAsErrors, 
                    string warningsNotAsErrors, 
                    string win32Icon, 
                    string win32Resource)
        {
            this.additionalLibPaths = additionalLibPaths;
            this.addModules = addModules;
            this.baseAddress = baseAddress;
            this.codePage = codePage;
            this.debugType = debugType;
            this.defineConstants = defineConstants;
            this.delaySign = delaySign;
            this.disabledWarnings = disabledWarnings;
            this.documentationFile = documentationFile;
            this.emitDebugInformation = emitDebugInformation;
            this.errorReport = errorReport;
            this.fileAlignment = fileAlignment;
            this.generateDocumentation = generateDocumentation;
            this.imports = imports;
            this.keyContainer = keyContainer;
            this.keyFile = keyFile;
            this.linkResources = linkResources;
            this.mainEntryPoint = mainEntryPoint;
            this.noConfig = noConfig;
            this.noLogo = noLogo;
            this.noStandardLib = noStandardLib;
            this.noWarnings = noWarnings;
            this.optimize = optimize;
            this.optionCompare = optionCompare;
            this.optionExplicit = optionExplicit;
            this.optionStrict = optionStrict;
            this.optionStrictType = optionStrictType;
            this.outputAssembly = outputAssembly;
            this.platform = platform;
            this.references = references;
            this.removeIntegerChecks = removeIntegerChecks;
            this.resources = resources;
            this.responseFiles = responseFiles;
            this.rootNamespace = rootNamespace;
            this.sdkPath = sdkPath;
            this.sources = sources;
            this.targetCompactFramework = targetCompactFramework;
            this.targetType = targetType;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.treatWarningsAsErrors = treatWarningsAsErrors;
            this.useHostCompilerIfAvailable = useHostCompilerIfAvailable;
            this.utf8Output = utf8Output;
            this.verbosity = verbosity;
            this.warningsAsErrors = warningsAsErrors;
            this.warningsNotAsErrors = warningsNotAsErrors;
            this.win32Icon = win32Icon;
            this.win32Resource = win32Resource;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AdditionalLibPaths")]
        public string AdditionalLibPaths
        {
            get
            {
                return this.additionalLibPaths;
            }
            set
            {
                if ((this.additionalLibPaths != value))
                {
                    this.additionalLibPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AddModules")]
        public string AddModules
        {
            get
            {
                return this.addModules;
            }
            set
            {
                if ((this.addModules != value))
                {
                    this.addModules = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BaseAddress")]
        public string BaseAddress
        {
            get
            {
                return this.baseAddress;
            }
            set
            {
                if ((this.baseAddress != value))
                {
                    this.baseAddress = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CodePage")]
        public string CodePage
        {
            get
            {
                return this.codePage;
            }
            set
            {
                if ((this.codePage != value))
                {
                    this.codePage = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DebugType")]
        public string DebugType
        {
            get
            {
                return this.debugType;
            }
            set
            {
                if ((this.debugType != value))
                {
                    this.debugType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DefineConstants")]
        public string DefineConstants
        {
            get
            {
                return this.defineConstants;
            }
            set
            {
                if ((this.defineConstants != value))
                {
                    this.defineConstants = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DelaySign")]
        public string DelaySign
        {
            get
            {
                return this.delaySign;
            }
            set
            {
                if ((this.delaySign != value))
                {
                    this.delaySign = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DisabledWarnings")]
        public string DisabledWarnings
        {
            get
            {
                return this.disabledWarnings;
            }
            set
            {
                if ((this.disabledWarnings != value))
                {
                    this.disabledWarnings = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DocumentationFile")]
        public string DocumentationFile
        {
            get
            {
                return this.documentationFile;
            }
            set
            {
                if ((this.documentationFile != value))
                {
                    this.documentationFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EmitDebugInformation")]
        public string EmitDebugInformation
        {
            get
            {
                return this.emitDebugInformation;
            }
            set
            {
                if ((this.emitDebugInformation != value))
                {
                    this.emitDebugInformation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ErrorReport")]
        public string ErrorReport
        {
            get
            {
                return this.errorReport;
            }
            set
            {
                if ((this.errorReport != value))
                {
                    this.errorReport = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FileAlignment")]
        public string FileAlignment
        {
            get
            {
                return this.fileAlignment;
            }
            set
            {
                if ((this.fileAlignment != value))
                {
                    this.fileAlignment = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="GenerateDocumentation")]
        public string GenerateDocumentation
        {
            get
            {
                return this.generateDocumentation;
            }
            set
            {
                if ((this.generateDocumentation != value))
                {
                    this.generateDocumentation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Imports")]
        public string Imports
        {
            get
            {
                return this.imports;
            }
            set
            {
                if ((this.imports != value))
                {
                    this.imports = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyContainer")]
        public string KeyContainer
        {
            get
            {
                return this.keyContainer;
            }
            set
            {
                if ((this.keyContainer != value))
                {
                    this.keyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LinkResources")]
        public string LinkResources
        {
            get
            {
                return this.linkResources;
            }
            set
            {
                if ((this.linkResources != value))
                {
                    this.linkResources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MainEntryPoint")]
        public string MainEntryPoint
        {
            get
            {
                return this.mainEntryPoint;
            }
            set
            {
                if ((this.mainEntryPoint != value))
                {
                    this.mainEntryPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoConfig")]
        public string NoConfig
        {
            get
            {
                return this.noConfig;
            }
            set
            {
                if ((this.noConfig != value))
                {
                    this.noConfig = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoLogo")]
        public string NoLogo
        {
            get
            {
                return this.noLogo;
            }
            set
            {
                if ((this.noLogo != value))
                {
                    this.noLogo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoStandardLib")]
        public string NoStandardLib
        {
            get
            {
                return this.noStandardLib;
            }
            set
            {
                if ((this.noStandardLib != value))
                {
                    this.noStandardLib = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoWarnings")]
        public string NoWarnings
        {
            get
            {
                return this.noWarnings;
            }
            set
            {
                if ((this.noWarnings != value))
                {
                    this.noWarnings = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Optimize")]
        public string Optimize
        {
            get
            {
                return this.optimize;
            }
            set
            {
                if ((this.optimize != value))
                {
                    this.optimize = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OptionCompare")]
        public string OptionCompare
        {
            get
            {
                return this.optionCompare;
            }
            set
            {
                if ((this.optionCompare != value))
                {
                    this.optionCompare = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OptionExplicit")]
        public string OptionExplicit
        {
            get
            {
                return this.optionExplicit;
            }
            set
            {
                if ((this.optionExplicit != value))
                {
                    this.optionExplicit = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OptionStrict")]
        public string OptionStrict
        {
            get
            {
                return this.optionStrict;
            }
            set
            {
                if ((this.optionStrict != value))
                {
                    this.optionStrict = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OptionStrictType")]
        public string OptionStrictType
        {
            get
            {
                return this.optionStrictType;
            }
            set
            {
                if ((this.optionStrictType != value))
                {
                    this.optionStrictType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputAssembly")]
        public string OutputAssembly
        {
            get
            {
                return this.outputAssembly;
            }
            set
            {
                if ((this.outputAssembly != value))
                {
                    this.outputAssembly = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Platform")]
        public string Platform
        {
            get
            {
                return this.platform;
            }
            set
            {
                if ((this.platform != value))
                {
                    this.platform = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="References")]
        public string References
        {
            get
            {
                return this.references;
            }
            set
            {
                if ((this.references != value))
                {
                    this.references = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RemoveIntegerChecks")]
        public string RemoveIntegerChecks
        {
            get
            {
                return this.removeIntegerChecks;
            }
            set
            {
                if ((this.removeIntegerChecks != value))
                {
                    this.removeIntegerChecks = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Resources")]
        public string Resources
        {
            get
            {
                return this.resources;
            }
            set
            {
                if ((this.resources != value))
                {
                    this.resources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResponseFiles")]
        public string ResponseFiles
        {
            get
            {
                return this.responseFiles;
            }
            set
            {
                if ((this.responseFiles != value))
                {
                    this.responseFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="RootNamespace")]
        public string RootNamespace
        {
            get
            {
                return this.rootNamespace;
            }
            set
            {
                if ((this.rootNamespace != value))
                {
                    this.rootNamespace = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SdkPath")]
        public string SdkPath
        {
            get
            {
                return this.sdkPath;
            }
            set
            {
                if ((this.sdkPath != value))
                {
                    this.sdkPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Sources")]
        public string Sources
        {
            get
            {
                return this.sources;
            }
            set
            {
                if ((this.sources != value))
                {
                    this.sources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetCompactFramework")]
        public string TargetCompactFramework
        {
            get
            {
                return this.targetCompactFramework;
            }
            set
            {
                if ((this.targetCompactFramework != value))
                {
                    this.targetCompactFramework = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetType")]
        public string TargetType
        {
            get
            {
                return this.targetType;
            }
            set
            {
                if ((this.targetType != value))
                {
                    this.targetType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TreatWarningsAsErrors")]
        public string TreatWarningsAsErrors
        {
            get
            {
                return this.treatWarningsAsErrors;
            }
            set
            {
                if ((this.treatWarningsAsErrors != value))
                {
                    this.treatWarningsAsErrors = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="UseHostCompilerIfAvailable")]
        public string UseHostCompilerIfAvailable
        {
            get
            {
                return this.useHostCompilerIfAvailable;
            }
            set
            {
                if ((this.useHostCompilerIfAvailable != value))
                {
                    this.useHostCompilerIfAvailable = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Utf8Output")]
        public string Utf8Output
        {
            get
            {
                return this.utf8Output;
            }
            set
            {
                if ((this.utf8Output != value))
                {
                    this.utf8Output = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Verbosity")]
        public string Verbosity
        {
            get
            {
                return this.verbosity;
            }
            set
            {
                if ((this.verbosity != value))
                {
                    this.verbosity = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WarningsAsErrors")]
        public string WarningsAsErrors
        {
            get
            {
                return this.warningsAsErrors;
            }
            set
            {
                if ((this.warningsAsErrors != value))
                {
                    this.warningsAsErrors = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WarningsNotAsErrors")]
        public string WarningsNotAsErrors
        {
            get
            {
                return this.warningsNotAsErrors;
            }
            set
            {
                if ((this.warningsNotAsErrors != value))
                {
                    this.warningsNotAsErrors = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Icon")]
        public string Win32Icon
        {
            get
            {
                return this.win32Icon;
            }
            set
            {
                if ((this.win32Icon != value))
                {
                    this.win32Icon = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Resource")]
        public string Win32Resource
        {
            get
            {
                return this.win32Resource;
            }
            set
            {
                if ((this.win32Resource != value))
                {
                    this.win32Resource = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeVjc")]
    [System.Xml.Serialization.XmlRootAttribute("Vjc", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeVjc")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeVjc : TaskType
    {
        
        /// <remarks/>
        private string additionalLibPaths;
        
        /// <remarks/>
        private string addModules;
        
        /// <remarks/>
        private string baseAddress;
        
        /// <remarks/>
        private string codePage;
        
        /// <remarks/>
        private string debugType;
        
        /// <remarks/>
        private string defineConstants;
        
        /// <remarks/>
        private string delaySign;
        
        /// <remarks/>
        private string disabledWarnings;
        
        /// <remarks/>
        private string disableExtensions;
        
        /// <remarks/>
        private string documentationFile;
        
        /// <remarks/>
        private string emitDebugInformation;
        
        /// <remarks/>
        private string fileAlignment;
        
        /// <remarks/>
        private string jcpa;
        
        /// <remarks/>
        private string keyContainer;
        
        /// <remarks/>
        private string keyFile;
        
        /// <remarks/>
        private string linkResources;
        
        /// <remarks/>
        private string mainEntryPoint;
        
        /// <remarks/>
        private string noConfig;
        
        /// <remarks/>
        private string noLogo;
        
        /// <remarks/>
        private string optimize;
        
        /// <remarks/>
        private string outputAssembly;
        
        /// <remarks/>
        private string references;
        
        /// <remarks/>
        private string resources;
        
        /// <remarks/>
        private string responseFiles;
        
        /// <remarks/>
        private string secureScoping;
        
        /// <remarks/>
        private string sources;
        
        /// <remarks/>
        private string targetType;
        
        /// <remarks/>
        private string timeout;
        
        /// <remarks/>
        private string toolPath;
        
        /// <remarks/>
        private string treatWarningsAsErrors;
        
        /// <remarks/>
        private string utf8Output;
        
        /// <remarks/>
        private string warningLevel;
        
        /// <remarks/>
        private string win32Icon;
        
        /// <remarks/>
        private string win32Resource;
        
        public TargetTypeVjc()
        {
        }
        
        public TargetTypeVjc(
                    string additionalLibPaths, 
                    string addModules, 
                    string baseAddress, 
                    string codePage, 
                    string debugType, 
                    string defineConstants, 
                    string delaySign, 
                    string disabledWarnings, 
                    string disableExtensions, 
                    string documentationFile, 
                    string emitDebugInformation, 
                    string fileAlignment, 
                    string jcpa, 
                    string keyContainer, 
                    string keyFile, 
                    string linkResources, 
                    string mainEntryPoint, 
                    string noConfig, 
                    string noLogo, 
                    string optimize, 
                    string outputAssembly, 
                    string references, 
                    string resources, 
                    string responseFiles, 
                    string secureScoping, 
                    string sources, 
                    string targetType, 
                    string timeout, 
                    string toolPath, 
                    string treatWarningsAsErrors, 
                    string utf8Output, 
                    string warningLevel, 
                    string win32Icon, 
                    string win32Resource)
        {
            this.additionalLibPaths = additionalLibPaths;
            this.addModules = addModules;
            this.baseAddress = baseAddress;
            this.codePage = codePage;
            this.debugType = debugType;
            this.defineConstants = defineConstants;
            this.delaySign = delaySign;
            this.disabledWarnings = disabledWarnings;
            this.disableExtensions = disableExtensions;
            this.documentationFile = documentationFile;
            this.emitDebugInformation = emitDebugInformation;
            this.fileAlignment = fileAlignment;
            this.jcpa = jcpa;
            this.keyContainer = keyContainer;
            this.keyFile = keyFile;
            this.linkResources = linkResources;
            this.mainEntryPoint = mainEntryPoint;
            this.noConfig = noConfig;
            this.noLogo = noLogo;
            this.optimize = optimize;
            this.outputAssembly = outputAssembly;
            this.references = references;
            this.resources = resources;
            this.responseFiles = responseFiles;
            this.secureScoping = secureScoping;
            this.sources = sources;
            this.targetType = targetType;
            this.timeout = timeout;
            this.toolPath = toolPath;
            this.treatWarningsAsErrors = treatWarningsAsErrors;
            this.utf8Output = utf8Output;
            this.warningLevel = warningLevel;
            this.win32Icon = win32Icon;
            this.win32Resource = win32Resource;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AdditionalLibPaths")]
        public string AdditionalLibPaths
        {
            get
            {
                return this.additionalLibPaths;
            }
            set
            {
                if ((this.additionalLibPaths != value))
                {
                    this.additionalLibPaths = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="AddModules")]
        public string AddModules
        {
            get
            {
                return this.addModules;
            }
            set
            {
                if ((this.addModules != value))
                {
                    this.addModules = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="BaseAddress")]
        public string BaseAddress
        {
            get
            {
                return this.baseAddress;
            }
            set
            {
                if ((this.baseAddress != value))
                {
                    this.baseAddress = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="CodePage")]
        public string CodePage
        {
            get
            {
                return this.codePage;
            }
            set
            {
                if ((this.codePage != value))
                {
                    this.codePage = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DebugType")]
        public string DebugType
        {
            get
            {
                return this.debugType;
            }
            set
            {
                if ((this.debugType != value))
                {
                    this.debugType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DefineConstants")]
        public string DefineConstants
        {
            get
            {
                return this.defineConstants;
            }
            set
            {
                if ((this.defineConstants != value))
                {
                    this.defineConstants = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DelaySign")]
        public string DelaySign
        {
            get
            {
                return this.delaySign;
            }
            set
            {
                if ((this.delaySign != value))
                {
                    this.delaySign = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DisabledWarnings")]
        public string DisabledWarnings
        {
            get
            {
                return this.disabledWarnings;
            }
            set
            {
                if ((this.disabledWarnings != value))
                {
                    this.disabledWarnings = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DisableExtensions")]
        public string DisableExtensions
        {
            get
            {
                return this.disableExtensions;
            }
            set
            {
                if ((this.disableExtensions != value))
                {
                    this.disableExtensions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="DocumentationFile")]
        public string DocumentationFile
        {
            get
            {
                return this.documentationFile;
            }
            set
            {
                if ((this.documentationFile != value))
                {
                    this.documentationFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="EmitDebugInformation")]
        public string EmitDebugInformation
        {
            get
            {
                return this.emitDebugInformation;
            }
            set
            {
                if ((this.emitDebugInformation != value))
                {
                    this.emitDebugInformation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="FileAlignment")]
        public string FileAlignment
        {
            get
            {
                return this.fileAlignment;
            }
            set
            {
                if ((this.fileAlignment != value))
                {
                    this.fileAlignment = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Jcpa")]
        public string Jcpa
        {
            get
            {
                return this.jcpa;
            }
            set
            {
                if ((this.jcpa != value))
                {
                    this.jcpa = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyContainer")]
        public string KeyContainer
        {
            get
            {
                return this.keyContainer;
            }
            set
            {
                if ((this.keyContainer != value))
                {
                    this.keyContainer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="KeyFile")]
        public string KeyFile
        {
            get
            {
                return this.keyFile;
            }
            set
            {
                if ((this.keyFile != value))
                {
                    this.keyFile = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="LinkResources")]
        public string LinkResources
        {
            get
            {
                return this.linkResources;
            }
            set
            {
                if ((this.linkResources != value))
                {
                    this.linkResources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="MainEntryPoint")]
        public string MainEntryPoint
        {
            get
            {
                return this.mainEntryPoint;
            }
            set
            {
                if ((this.mainEntryPoint != value))
                {
                    this.mainEntryPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoConfig")]
        public string NoConfig
        {
            get
            {
                return this.noConfig;
            }
            set
            {
                if ((this.noConfig != value))
                {
                    this.noConfig = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="NoLogo")]
        public string NoLogo
        {
            get
            {
                return this.noLogo;
            }
            set
            {
                if ((this.noLogo != value))
                {
                    this.noLogo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Optimize")]
        public string Optimize
        {
            get
            {
                return this.optimize;
            }
            set
            {
                if ((this.optimize != value))
                {
                    this.optimize = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputAssembly")]
        public string OutputAssembly
        {
            get
            {
                return this.outputAssembly;
            }
            set
            {
                if ((this.outputAssembly != value))
                {
                    this.outputAssembly = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="References")]
        public string References
        {
            get
            {
                return this.references;
            }
            set
            {
                if ((this.references != value))
                {
                    this.references = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Resources")]
        public string Resources
        {
            get
            {
                return this.resources;
            }
            set
            {
                if ((this.resources != value))
                {
                    this.resources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ResponseFiles")]
        public string ResponseFiles
        {
            get
            {
                return this.responseFiles;
            }
            set
            {
                if ((this.responseFiles != value))
                {
                    this.responseFiles = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="SecureScoping")]
        public string SecureScoping
        {
            get
            {
                return this.secureScoping;
            }
            set
            {
                if ((this.secureScoping != value))
                {
                    this.secureScoping = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Sources")]
        public string Sources
        {
            get
            {
                return this.sources;
            }
            set
            {
                if ((this.sources != value))
                {
                    this.sources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TargetType")]
        public string TargetType
        {
            get
            {
                return this.targetType;
            }
            set
            {
                if ((this.targetType != value))
                {
                    this.targetType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Timeout")]
        public string Timeout
        {
            get
            {
                return this.timeout;
            }
            set
            {
                if ((this.timeout != value))
                {
                    this.timeout = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="ToolPath")]
        public string ToolPath
        {
            get
            {
                return this.toolPath;
            }
            set
            {
                if ((this.toolPath != value))
                {
                    this.toolPath = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="TreatWarningsAsErrors")]
        public string TreatWarningsAsErrors
        {
            get
            {
                return this.treatWarningsAsErrors;
            }
            set
            {
                if ((this.treatWarningsAsErrors != value))
                {
                    this.treatWarningsAsErrors = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Utf8Output")]
        public string Utf8Output
        {
            get
            {
                return this.utf8Output;
            }
            set
            {
                if ((this.utf8Output != value))
                {
                    this.utf8Output = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="WarningLevel")]
        public string WarningLevel
        {
            get
            {
                return this.warningLevel;
            }
            set
            {
                if ((this.warningLevel != value))
                {
                    this.warningLevel = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Icon")]
        public string Win32Icon
        {
            get
            {
                return this.win32Icon;
            }
            set
            {
                if ((this.win32Icon != value))
                {
                    this.win32Icon = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Win32Resource")]
        public string Win32Resource
        {
            get
            {
                return this.win32Resource;
            }
            set
            {
                if ((this.win32Resource != value))
                {
                    this.win32Resource = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeVjsResGen")]
    [System.Xml.Serialization.XmlRootAttribute("VjsResGen", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeVjsResGen")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeVjsResGen : TaskType
    {
        
        /// <remarks/>
        private string outputResx;
        
        /// <remarks/>
        private string sources;
        
        /// <remarks/>
        private string wildcards;
        
        public TargetTypeVjsResGen()
        {
        }
        
        public TargetTypeVjsResGen(string outputResx, string sources, string wildcards)
        {
            this.outputResx = outputResx;
            this.sources = sources;
            this.wildcards = wildcards;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="OutputResx")]
        public string OutputResx
        {
            get
            {
                return this.outputResx;
            }
            set
            {
                if ((this.outputResx != value))
                {
                    this.outputResx = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Sources")]
        public string Sources
        {
            get
            {
                return this.sources;
            }
            set
            {
                if ((this.sources != value))
                {
                    this.sources = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Wildcards")]
        public string Wildcards
        {
            get
            {
                return this.wildcards;
            }
            set
            {
                if ((this.wildcards != value))
                {
                    this.wildcards = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeWarning")]
    [System.Xml.Serialization.XmlRootAttribute("Warning", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeWarning")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeWarning : TaskType
    {
        
        /// <remarks/>
        private string code;
        
        /// <remarks/>
        private string helpKeyword;
        
        /// <remarks/>
        private string text;
        
        public TargetTypeWarning()
        {
        }
        
        public TargetTypeWarning(string code, string helpKeyword, string text)
        {
            this.code = code;
            this.helpKeyword = helpKeyword;
            this.text = text;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Code")]
        public string Code
        {
            get
            {
                return this.code;
            }
            set
            {
                if ((this.code != value))
                {
                    this.code = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="HelpKeyword")]
        public string HelpKeyword
        {
            get
            {
                return this.helpKeyword;
            }
            set
            {
                if ((this.helpKeyword != value))
                {
                    this.helpKeyword = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Text")]
        public string Text
        {
            get
            {
                return this.text;
            }
            set
            {
                if ((this.text != value))
                {
                    this.text = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/developer/msbuild/2003", TypeName="TargetTypeWriteLinesToFile")]
    [System.Xml.Serialization.XmlRootAttribute("WriteLinesToFile", Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IsNullable=false, ElementName="TargetTypeWriteLinesToFile")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TargetTypeWriteLinesToFile : TaskType
    {
        
        /// <remarks/>
        private string file;
        
        /// <remarks/>
        private string lines;
        
        /// <remarks/>
        private string overwrite;
        
        public TargetTypeWriteLinesToFile()
        {
        }
        
        public TargetTypeWriteLinesToFile(string file, string lines, string overwrite)
        {
            this.file = file;
            this.lines = lines;
            this.overwrite = overwrite;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="File")]
        public string File
        {
            get
            {
                return this.file;
            }
            set
            {
                if ((this.file != value))
                {
                    this.file = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Lines")]
        public string Lines
        {
            get
            {
                return this.lines;
            }
            set
            {
                if ((this.lines != value))
                {
                    this.lines = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="Overwrite")]
        public string Overwrite
        {
            get
            {
                return this.overwrite;
            }
            set
            {
                if ((this.overwrite != value))
                {
                    this.overwrite = value;
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/developer/msbuild/2003", IncludeInSchema=false, TypeName="ItemsChoiceType")]
    public enum ItemsChoiceType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AllowUnsafeBlocks")]
        AllowUnsafeBlocks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AppDesignerFolder")]
        AppDesignerFolder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ApplicationIcon")]
        ApplicationIcon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ApplicationRevision")]
        ApplicationRevision,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ApplicationVersion")]
        ApplicationVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AspNetConfiguration")]
        AspNetConfiguration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AssemblyKeyContainerName")]
        AssemblyKeyContainerName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AssemblyKeyProviderName")]
        AssemblyKeyProviderName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AssemblyName")]
        AssemblyName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AssemblyOriginatorKeyFile")]
        AssemblyOriginatorKeyFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AssemblyOriginatorKeyFileType")]
        AssemblyOriginatorKeyFileType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AssemblyOriginatorKeyMode")]
        AssemblyOriginatorKeyMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AssemblyType")]
        AssemblyType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AutorunEnabled")]
        AutorunEnabled,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="BaseAddress")]
        BaseAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="BootstrapperComponentsLocation")]
        BootstrapperComponentsLocation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="BootstrapperComponentsUrl")]
        BootstrapperComponentsUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="BootstrapperEnabled")]
        BootstrapperEnabled,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CheckForOverflowUnderflow")]
        CheckForOverflowUnderflow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodeAnalysisInputAssembly")]
        CodeAnalysisInputAssembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodeAnalysisLogFile")]
        CodeAnalysisLogFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodeAnalysisModuleSuppressionsFile")]
        CodeAnalysisModuleSuppressionsFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodeAnalysisProjectFile")]
        CodeAnalysisProjectFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodeAnalysisRuleAssemblies")]
        CodeAnalysisRuleAssemblies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodeAnalysisRules")]
        CodeAnalysisRules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodeAnalysisUseTypeNameInSuppression")]
        CodeAnalysisUseTypeNameInSuppression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CodePage")]
        CodePage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Configuration")]
        Configuration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ConfigurationName")]
        ConfigurationName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ConfigurationOverrideFile")]
        ConfigurationOverrideFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CreateWebPageOnPublish")]
        CreateWebPageOnPublish,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="CurrentSolutionConfigurationContents")]
        CurrentSolutionConfigurationContents,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DebugSecurityZoneURL")]
        DebugSecurityZoneURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DebugSymbols")]
        DebugSymbols,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DebugType")]
        DebugType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DefaultClientScript")]
        DefaultClientScript,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DefaultHTMLPageLayout")]
        DefaultHTMLPageLayout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DefaultTargetSchema")]
        DefaultTargetSchema,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DefineConstants")]
        DefineConstants,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DefineDebug")]
        DefineDebug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DefineTrace")]
        DefineTrace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DelaySign")]
        DelaySign,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DeployDirSuffix")]
        DeployDirSuffix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DisableLangXtns")]
        DisableLangXtns,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DisallowUrlActivation")]
        DisallowUrlActivation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="DocumentationFile")]
        DocumentationFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EnableASPDebugging")]
        EnableASPDebugging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EnableASPXDebugging")]
        EnableASPXDebugging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EnableSQLServerDebugging")]
        EnableSQLServerDebugging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EnableSecurityDebugging")]
        EnableSecurityDebugging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EnableUnmanagedDebugging")]
        EnableUnmanagedDebugging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ErrorReport")]
        ErrorReport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ExcludedPermissions")]
        ExcludedPermissions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="FallbackCulture")]
        FallbackCulture,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="FileAlignment")]
        FileAlignment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="FileUpgradeFlags")]
        FileUpgradeFlags,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="FormFactorID")]
        FormFactorID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="GenerateManifests")]
        GenerateManifests,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="GenerateSerializationAssemblies")]
        GenerateSerializationAssemblies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Install")]
        Install,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="InstallFrom")]
        InstallFrom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="InstallUrl")]
        InstallUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="IsWebBootstrapper")]
        IsWebBootstrapper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="JCPA")]
        JCPA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="LangVersion")]
        LangVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ManifestCertificateThumbprint")]
        ManifestCertificateThumbprint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ManifestKeyFile")]
        ManifestKeyFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="MapFileExtensions")]
        MapFileExtensions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="MinimumRequiredVersion")]
        MinimumRequiredVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="MyType")]
        MyType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="NoConfig")]
        NoConfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="NoStandardLibraries")]
        NoStandardLibraries,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="NoStdLib")]
        NoStdLib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="NoWarn")]
        NoWarn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="OSVersion")]
        OSVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="OpenBrowserOnPublish")]
        OpenBrowserOnPublish,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Optimize")]
        Optimize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="OptionCompare")]
        OptionCompare,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="OptionExplicit")]
        OptionExplicit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="OptionStrict")]
        OptionStrict,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="OutputPath")]
        OutputPath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="OutputType")]
        OutputType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Platform")]
        Platform,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PlatformFamilyName")]
        PlatformFamilyName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PlatformID")]
        PlatformID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PlatformName")]
        PlatformName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PlatformTarget")]
        PlatformTarget,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PostBuildEvent")]
        PostBuildEvent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PreBuildEvent")]
        PreBuildEvent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ProductName")]
        ProductName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ProductVersion")]
        ProductVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ProjectGuid")]
        ProjectGuid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ProjectType")]
        ProjectType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ProjectTypeGuids")]
        ProjectTypeGuids,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PublishUrl")]
        PublishUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="PublisherName")]
        PublisherName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RecursePath")]
        RecursePath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ReferencePath")]
        ReferencePath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RegisterForComInterop")]
        RegisterForComInterop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RemoteDebugEnabled")]
        RemoteDebugEnabled,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RemoteDebugMachine")]
        RemoteDebugMachine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RemoveIntegerChecks")]
        RemoveIntegerChecks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="ResponseFile")]
        ResponseFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RootNamespace")]
        RootNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RunCodeAnalysis")]
        RunCodeAnalysis,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="RunPostBuildEvent")]
        RunPostBuildEvent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SchemaVersion")]
        SchemaVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SecureScoping")]
        SecureScoping,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SignAssembly")]
        SignAssembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SignManifests")]
        SignManifests,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SolutionDir")]
        SolutionDir,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SolutionExt")]
        SolutionExt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SolutionFileName")]
        SolutionFileName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SolutionName")]
        SolutionName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SolutionPath")]
        SolutionPath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartAction")]
        StartAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartArguments")]
        StartArguments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartPage")]
        StartPage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartProgram")]
        StartProgram,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartURL")]
        StartURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartWithIE")]
        StartWithIE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartWorkingDirectory")]
        StartWorkingDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="StartupObject")]
        StartupObject,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="SupportUrl")]
        SupportUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="TargetCulture")]
        TargetCulture,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="TargetFrameworkVersion")]
        TargetFrameworkVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="TargetZone")]
        TargetZone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="TreatWarningsAsErrors")]
        TreatWarningsAsErrors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="TrustUrlParameters")]
        TrustUrlParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="TypeComplianceDiagnostics")]
        TypeComplianceDiagnostics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UTF8OutPut")]
        UTF8OutPut,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdateEnabled")]
        UpdateEnabled,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdateInterval")]
        UpdateInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdateIntervalUnits")]
        UpdateIntervalUnits,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdateMode")]
        UpdateMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdatePeriodically")]
        UpdatePeriodically,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdateRequired")]
        UpdateRequired,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UpdateUrl")]
        UpdateUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="UseVSHostingProcess")]
        UseVSHostingProcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="VSTO_TrustAssembliesLocation")]
        VSTO_TrustAssembliesLocation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="WarningLevel")]
        WarningLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="WarningsAsErrors")]
        WarningsAsErrors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="WebPage")]
        WebPage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="Win32ResourceFile")]
        Win32ResourceFile,
    }
}
